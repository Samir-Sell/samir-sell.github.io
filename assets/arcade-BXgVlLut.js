import{bZ as X,b as Z,g3 as D,o as G,a2 as ee,M as Y,a5 as te,B as U,G as B,C as O,cb as ae}from"./index-MBf2dn39.js";import{r as L}from"./arcadeEnvironment-Ceqsya_J.js";import{t as re}from"./ImmutableArray-BPVd6ESQ.js";import ne from"./FeatureLayer-DPz5Sz8s.js";import"./FormTemplate-BjQPlHyn.js";import"./editsZScale-0rFKqFhV.js";import"./queryZScale-BYJvoMMy.js";import"./APIKeyMixin-BRHmChzy.js";import"./ArcGISService-C5lmGAY8.js";import"./EditBusLayer-Cbt0F2i4.js";import"./FeatureLayerBase-C41xOtls.js";import"./LayerFloorInfo-wPVJ2oRr.js";import"./multiLayerServiceUtils-B4fwsobX.js";import"./Relationship-BHc0cwJV.js";import"./serviceCapabilitiesUtils-woBObEqx.js";import"./infoFor3D-dHKPbXlj.js";import"./FeatureType-CDqhK1ZB.js";import"./TitleCreator-CL5UGXe0.js";import"./versionUtils-CSWgFRM9.js";import"./styleUtils-B3m3e1PV.js";let b=null;function oe(e,n,r,i={}){const t=n.elementType,c="value",p=t.type==="array"?[{name:c,type:t.type,elementType:t.elementType}]:t.type==="dictionary"?[{name:c,type:t.type,properties:t.properties}]:[{name:c,type:t.type}];return new re(e.map(o=>{const a={};return j(a,p,{[c]:o},r,i),a[c]}))}function ie(e,n,r={}){const i=e instanceof ae?new ne({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return n.constructFeatureSet(i,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function ce(e,n,r={}){const{spatialReference:i,interceptor:t,lruCache:c}=r;return typeof e=="string"?n.createFeatureSetCollectionFromService(e,i,c,t):n.createFeatureSetCollectionFromMap(e,i,c,t)}function se(e,n,r,i={}){const t=Object.create(null);return j(t,n.properties,e,r,i),new b.Dictionary(t)}function j(e,n,r,i,t={}){const c={};for(const p of Object.keys(r))c[p.toLowerCase()]=r[p];for(const p of n){const o=p.name.toLowerCase();if(t.variablesPreProcessed)e[o]=c[o];else switch(p.type){case"array":{const a=c[o];e[o]=a==null?null:oe(a,p,i,t);break}case"feature":{const a=c[o];e[o]=a==null?null:b.Feature.createFromGraphic(a,t==null?void 0:t.timeZone);break}case"featureSet":{const a=c[o];e[o]=a==null?null:i?ie(a,i,t):null;break}case"featureSetCollection":{const a=c[o];e[o]=a==null?null:i?ce(a,i,t):null;break}case"dictionary":{const a=c[o];e[o]=a==null?null:se(a,p,i,t);break}case"date":{const a=c[o];e[o]=a?a instanceof O?a:t!=null&&t.timeZone?O.dateJSAndZoneToArcadeDate(a,t==null?void 0:t.timeZone):O.dateJSToArcadeDate(a):null;break}case"dateOnly":{const a=c[o];e[o]=a?a instanceof B?a:B.fromReader(a):null;break}case"time":{const a=c[o];e[o]=a?a instanceof U?a:U.fromReader(a):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[o]=c[o];break;case"voxel":{const a=c[o];e[o]=a==null?null:new b.Voxel(a,t==null?void 0:t.timeZone);break}case"pixel":{const a=c[o];e[o]=a==null?null:b.Pixel.fromImageryGraphic(a,t==null?void 0:t.timeZone);break}}}}function _(e,n){for(const r of e)n.push(r),r.type==="dictionary"&&_(r.properties,n);return n}function P(e,n,r,i,t){const{spatialReference:c,interceptor:p,lruCache:o,console:a,abortSignal:x,timeZone:C,services:v={portal:Y.getDefault()},track:u}=r,g={vars:{},spatialReference:c,interceptor:p,timeZone:C,lrucache:o,useAsync:t,services:v,console:a,abortSignal:x,track:u};return n&&j(g.vars,e.variables,n,i,r),g}function w(e,n){switch(n.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const r=(e.type,e),i="geometry"in r?r.geometry():null,t="readAttributes"in r?r.readAttributes():r.attributes;return new te({geometry:i,attributes:t})}case"dictionary":{const r=e,i=r.attributes,t={};for(const c of Object.keys(i))t[c]=w(r.field(c),n);return t}case"array":return("toArray"in e?e.toArray():e).map(r=>w(r,n))}return e}const M={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},J={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},z={variables:[{name:"$voxel",type:"voxel"}]},N={variables:[{name:"$pixel",type:"pixel"},{name:"$imageCollectionItem",type:"feature"}]},V=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",M],["popup-element",M],["popup-feature-reduction",J],["popup-element-feature-reduction",J],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",z],["popup-element-voxel",z],["popup-imagery",N],["popup-element-imagery",N]]);function Ze(e){e==="feature-reduction-popup"?(D(G.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(D(G.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const n=V.get(e);if(!n){const r=Array.from(V.keys()).map(i=>`'${i}'`).join(", ");throw new Z("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${r}`)}return ee(n)}async function je(e,n,r={}){b||(b=await X());const{arcade:i,arcadeUtils:t,batchExec:{createBatchExecutor:c},aiServices:{BatchTranslationServiceFactory:p,PortalTranslationService:o}}=b,{loadScriptDependencies:a,referencesMember:x,scriptIsAsync:C}=i,v=_(n.variables,[]).filter(s=>s.type==="featureSet"||s.type==="featureSetCollection").map(s=>L(s.name)),u=i.parseScript(e,v);if(!u)throw new Z("arcade:invalid-script","Unable to create SyntaxTree");const g=t.extractFieldNames(u),q=i.scriptTouchesGeometry(u),E=n.variables.map(s=>L(s.name)).filter(s=>x(u,s)),f=C(u,v);await a(u,f,v);const k=i.compileScript(u,{vars:Object.fromEntries(E.map(s=>[s,!0])),useAsync:f}),{lruCache:A,services:I}=r,T=i.featureSetUtils();return{execute:(s,m={})=>{if(f)throw new Z("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const l={...I,...m.services},d={lruCache:A,...m,services:l},y=k(P(n,s,d,T,f));return m.rawOutput?y:w(y,t)},executeAsync:async(s,m={})=>{const l={...I,...m.services},d={lruCache:A,...m,services:l},y=await k(P(n,s,d,T,f));return m.rawOutput?y:w(y,t)},executeAsyncBatch:async(s,m,l={})=>{const d=[],y=c(s,async($,S)=>{const K=m($);try{const h={...F,translation:H.create(S)},Q={lruCache:A,...l,services:h},R=await k(P(n,K,Q,T,f)),W=l.rawOutput?R:w(R,t);d.push({id:S.id,result:{status:"fulfilled",value:W}})}catch(h){throw d.push({id:S.id,result:{status:"rejected",reason:h}}),h}},l.maxConcurrency??64,l.abortSignal),F={...I,...l.services},H=new p(y,F.translation??new o(F.portal??Y.getDefault(),l.console));return await y.run(),d.sort(({id:$},{id:S})=>$-S).map(({result:$})=>$)},isAsync:f,variablesUsed:E,fieldsUsed:g,geometryUsed:q,syntaxTree:u}}export{je as createArcadeExecutor,Ze as createArcadeProfile};
