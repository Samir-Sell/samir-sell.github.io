import{al as w,af as C,cj as m,dy as L,D as s,F as n,Z as f,cE as H,aP as E,j9 as x,dv as _,dt as I,a3 as $,cm as O}from"./index-7LVg-iY6.js";import{o as k}from"./WorkerHandle-Dxx0zL3A.js";import{t as h}from"./workerHelper-C8LOpjLk.js";import{c as A}from"./edgeProcessing-DGc-RjtQ.js";import{A as V}from"./sphere-DzCsVWDK.js";import{b as v,j}from"./hitTestSelectUtils-DSNbAfYs.js";import{a as D}from"./SketchViewModel-D-VcfUZc.js";import{r as P}from"./VertexSnappingCandidate-D1iAIbuM.js";import"./InterleavedLayout-Cm0qBh5m.js";import"./BufferView-k4yB9h9M.js";import"./types-BKo2foNY.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./deduplicate-CsrXgNgJ.js";import"./Indices-4XmParll.js";import"./Normals-Dbj8w10q.js";import"./vectorStacks-C4W7rb0Q.js";import"./quatf64-aQ5IuZRd.js";import"./projectVectorToVector-DvpKoIay.js";import"./projectPointToVector-DB9mtevM.js";import"./geodesicUtils-B4oU4_4k.js";import"./plane-BNp5RSXM.js";import"./elevationInfoUtils-DiH329d2.js";import"./quantityUtils-Dj5wk2_C.js";import"./spatialReferenceEllipsoidUtils-YSk8guFm.js";import"./GraphicsLayer-Dt1IdCU8.js";import"./geodeticLengthOperator-DqmzHdpS.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-CwKtHLtt.js";import"./lineSegment-FrGs-k93.js";import"./PointSnappingHint-ChxC_YEI.js";class R extends k{constructor(t){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},t)}async process(t,r,i){return i?A(t):B(await this.invoke(new g(t),r))}async extractEdgeLocations(t,r){const i=await this.invokeMethod("extractEdgeLocations",new g(t),r);return h(i)}async extractComponentsEdgeLocations(t,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new g(t),r);return h(i)}}function B(e){return{regular:{instancesData:h(e.regular.instancesData),lodInfo:{lengths:new Float32Array(e.regular.lodInfo.lengths)}},silhouette:{instancesData:h(e.silhouette.instancesData),lodInfo:{lengths:new Float32Array(e.silhouette.lodInfo.lengths)}},averageEdgeLength:e.averageEdgeLength}}class g{constructor(t){this.dataBuffer=t.data.buffer,this.writerSettings=t.writerSettings,this.skipDeduplicate=t.skipDeduplicate,this.indices=w(t.indices)?t.indices.buffer:t.indices,this.indicesType=w(t.indices)?C(t.indices)?"Uint32Array":"Uint16Array":"Array",this.indicesLength=t.indicesLength}}let d=class extends m{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new W(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,{point:i}=e,o=M;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,o);const u=e.distance,c=typeof u=="number"?u:u.distance,p=await this._workerHandle.invoke({bounds:V(o[0],o[1],o[2],c),returnEdge:e.returnEdge,returnVertex:e.vertexMode!=="none"},t);return p.candidates.sort((y,b)=>y.distance-b.distance),p.candidates.map(y=>this._convertCandidate(r,y))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new D({objectId:t.objectId,targetPoint:v(this._convertRenderCoordinate(e,t.target)),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new P({objectId:t.objectId,targetPoint:v(this._convertRenderCoordinate(e,t.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const r=L();return this.renderCoordsHelper.fromRenderCoords(t,r,e),j(r)}async _fetchAllEdgeLocations(e,t){const r=[],i=[];for(const{id:o,uid:u}of e.components)this._ids.has(o)&&r.push((async()=>{const c=await this.fetchEdgeLocations(o,t.signal),p=c.locations.buffer;return i.push(p),{id:o,uid:u,objectIds:c.objectIds,locations:p,origin:c.origin,type:c.type}})());return{result:{components:(await Promise.all(r)).filter(({id:o})=>this._ids.has(o))},transferList:i}}};s([n({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),s([n({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),s([n({constructOnly:!0})],d.prototype,"schedule",void 0),s([n({readOnly:!0})],d.prototype,"availability",void 0),d=s([f("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],d);let W=class extends k{constructor(t,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:r})}};const M=L();let a=class extends m{get updating(){return this._updatingHandles.updating}constructor(e){super(e),this.availability=1,this._updatingHandles=new H,this._abortController=new AbortController}destroy(){this._tracker=E(this._tracker),this._abortController=x(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new R(S(t)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:S(t),fetchEdgeLocations:async(r,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){var r;if(this.destroyed)return;const e=(r=this._abortController)==null?void 0:r.signal,t=await this.getLayerView();t==null||I(e)||(this._tracker=t.trackSnappingSources({add:(i,o)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:i,bounds:o},e))},remove:i=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:i},e))}}))}};function S(e){return t=>e.immediate.schedule(t)}s([n({constructOnly:!0})],a.prototype,"getLayerView",void 0),s([n({constructOnly:!0})],a.prototype,"view",void 0),s([n({readOnly:!0})],a.prototype,"updating",null),s([n({readOnly:!0})],a.prototype,"availability",void 0),a=s([f("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let l=class extends m{get updating(){return this._i3sSources.some(e=>e.updating)}constructor(e){super(e),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(e=>e.destroy()),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources=t.type==="building-scene"?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(e,t)));return $(t),r.flat()}refresh(){this._i3sSources.forEach(e=>e.refresh())}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null).filter(O)}_getSceneLayerI3SSource(e,t){return new a({getLayerView:async()=>{const r=await e.whenLayerView(t);return r.type==="scene-layer-graphics-3d"?void 0:r},view:e})}};s([n({constructOnly:!0})],l.prototype,"layerSource",void 0),s([n({constructOnly:!0})],l.prototype,"view",void 0),s([n({readOnly:!0})],l.prototype,"updating",null),s([n({readOnly:!0})],l.prototype,"availability",void 0),l=s([f("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],l);export{l as SceneLayerSnappingSource};
