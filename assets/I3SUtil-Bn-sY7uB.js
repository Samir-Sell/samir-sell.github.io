import{H as $,bx as a}from"./index-Cv0-fPI4.js";import"./projectVectorToVector-rT5JYUUy.js";import"./sphere-Dq9FTyYU.js";import{S as h,v as b}from"./I3SBinaryReader-B-cgYzEe.js";import{a as w}from"./edgeUtils-C6NhRw-s.js";import{G as I}from"./orientedBoundingBox-De9WOq0X.js";import"./glsl-B5bJgrnA.js";a();async function G(m,c,p,u,l,y,d,e){const n=[];for(const o of c)if(o&&l.includes(o.name)){const t=`${m}/nodes/${p}/attributes/${o.key}/0`;n.push({url:t,storageInfo:o})}const s=await Promise.allSettled(n.map(o=>$(o.url,{responseType:"array-buffer",query:{...d,token:y},signal:e==null?void 0:e.signal}).then(t=>h(o.storageInfo,t.data)))),f=[];for(const o of u){const t={};for(let r=0;r<s.length;r++){const i=s[r];if(i.status==="fulfilled"){const g=i.value;t[n[r].storageInfo.name]=b(g,o)}}f.push(t)}return f}w({color:[0,0,0,0],opacity:0});a();a();new I;new Array(72);export{G as $};
