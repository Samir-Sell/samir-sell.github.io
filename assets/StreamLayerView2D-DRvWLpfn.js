import{Z as s,a0 as a,h9 as _,a1 as d,dc as u,b as h,h7 as g,T as f,cb as l,eC as v}from"./index-Cv0-fPI4.js";import{n as S,d as C}from"./FeatureLayerView2D-FdiXNzSW.js";import"./FeatureCommandQueue-pNSI9Fh7.js";import"./CIMSymbolHelper-D3l0pcDe.js";import"./BidiEngine-BvER9tXK.js";import"./labelPoint-C5vZ6qGF.js";import"./OptimizedFeature-BV9bW67H.js";import"./memoryEstimations-djtQljaD.js";import"./GeometryUtils-m27QYUXk.js";import"./rasterizingUtils-Dla0fjsD.js";import"./Rect-CUzevAry.js";import"./BoundingBox-Da-i4FSJ.js";import"./GraphShaderModule-CKVDbU9D.js";import"./BufferObject-CkAyuNmV.js";import"./FramebufferObject-B7WLEiOB.js";import"./ProgramTemplate-Dag7pEiF.js";import"./ShaderBuilder-De9Inz3I.js";import"./UpdateTracking2D-DngEgnnG.js";import"./utils-ItE9vM0u.js";import"./constants-BBnGEY1d.js";import"./VertexArrayObject-CkOOqsmK.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexBuffer-BOYxJmdS.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./WGLContainer-Bi62Ne1i.js";import"./Utils-c54zZwBP.js";import"./vec3f32-WCVSSNPR.js";import"./Container-vfgzZutF.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-HUfCD0i2.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./streamLayerUtils-DFlbJ4P1.js";import"./QueueProcessor-DlflWNvs.js";import"./timeSupport-CF5oeL8F.js";import"./AttributeBinsFeatureSet-BWequ3F7.js";import"./AttributeBinsQuery-B0kKu2Hx.js";import"./queryUtils-DeVm81Zw.js";import"./FixedIntervalBinParameters-DbzPOgNH.js";import"./LayerView2D-C0MBXbZt.js";import"./layerViewUtils-CwJdb8aR.js";import"./TechniqueInstance-C2A0yhEN.js";import"./TileContainer-CYmMo6Q3.js";import"./CircularArray-CujHzHWW.js";import"./query-BurU-78t.js";import"./pbfQueryUtils-6vaooj-7.js";import"./pbf-BdgP76zG.js";import"./queryZScale-Hrs_mNhO.js";import"./FeatureIdInfo-Czp2O_n3.js";import"./FeatureMetadata-BGymskA6.js";import"./SDFHelper-BH7ORGrQ.js";import"./constants-SxxbBSOD.js";import"./parquetUtils-Dad3c-k4.js";import"./locationUtils-7xMKN9t3.js";import"./parquet-BMfbm94a.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DMfGE7QM.js";import"./LayerView-Wy01GXOV.js";import"./RefreshableLayerView-DQLMepaW.js";import"./highlightOptionsUtils-C9htdnUO.js";const I=e=>{const r=e;let t=class extends r{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...i){super(...i),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(i){i?this._doPause():this._isUserPaused||this._doResume()}};return s([a()],t.prototype,"_isUserPaused",void 0),s([a({readOnly:!0})],t.prototype,"connectionStatus",null),s([a({type:_})],t.prototype,"filter",void 0),t=s([d("esri.views.layers.StreamLayerView")],t),t};let n=class extends I(C){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([u(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),u(()=>this.layer.purgeOptions,()=>this._update()),u(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new h("stream-controller",this.pipelineErrorString):null}on(e,r){if(Array.isArray(e))return g(e.map(o=>this.on(o,r)));const t=["data-received","message-received"].includes(e);t&&this.getWorker().then(o=>o.streamMessenger.enableEvent(e,!0));const i=super.on(e,r),p=this;return f(()=>{i.remove(),t&&(p._workerProxy.closed||p.hasEventListener(e)||p.getWorker().then(o=>o.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,r){var i,p,o;if(!((i=this.layer.timeInfo)!=null&&i.endField||(p=this.layer.timeInfo)!=null&&p.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new h("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const t=await this.getWorker();return S(t.features.executeQueryForLatestObservations(this._cleanUpQuery(e),r).then(y=>{const c=l.fromJSON(y);return c.features.forEach(m=>{m.layer=this.layer,m.sourceLayer=this.layer,m.origin=this.layer.graphicOrigin}),c}),new l({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(e,r){return(await super.queryObjectIds(e,r)).filter(v)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval==null&&(this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval))}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),r=this;return{...e,get container(){return r.featureContainer},setProperty:t=>{this.set(t.propertyName,t.value)}}}};s([a()],n.prototype,"pipelineConnectionStatus",void 0),s([a()],n.prototype,"pipelineErrorString",void 0),s([a({readOnly:!0})],n.prototype,"connectionError",null),s([a({readOnly:!0})],n.prototype,"_streamConnectionStatus",null),n=s([d("esri.views.2d.layers.StreamLayerView2D")],n);const Me=n;export{Me as default};
