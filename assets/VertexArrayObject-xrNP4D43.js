import{ai as n,aj as o,m as u,aa as a,ak as _}from"./index-7LVg-iY6.js";import{y as c}from"./memoryEstimations-OaiSRTQo.js";import{r as l}from"./VertexAttributeLocations-BfZbt_DV.js";const i=()=>u.getLogger("esri.views.webgl.VertexArrayObject");let d=class f{constructor(t,e,r,s){this._context=t,this._indexBuffer=r,this._buffers=e instanceof Map?e:new Map([["geometry",e]]),this._baseInstances=s==null?new Map:typeof s=="number"?new Map([["geometry",s]]):s,this.locations=n(l(this._buffers))}get glName(){return this._glName}get context(){return this._context}get buffers(){return n(this._buffers)}buffer(t="geometry"){return this.buffers.get(t)}get indexBuffer(){return this._indexBuffer}getByteLength(t){var e;return((e=this.buffer(t))==null?void 0:e.sizeBytes)??0}vertexCount(t){const e=this.buffer(t);return e?e.sizeBytes/e.layout[0].stride:0}get usedMemory(){var t;return Array.from(this._buffers.values()).reduce((e,r)=>e+r.usedMemory,((t=this._indexBuffer)==null?void 0:t.usedMemory)??0+(this._buffers.size+(this._indexBuffer?1:0))*c)}dispose(){this._context?(this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this._indexBuffer=o(this._indexBuffer),this.disposeVAOOnly()):(this._glName||this._buffers.size>0)&&i().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(a.VertexArrayObject,this)),this._context=null):this._glName&&i().warn("Leaked WebGL VAO")}bind(t=this.locations){const e=this._context.gl;this._glName?e.bindVertexArray(this._glName):(this._context.instanceCounter.increment(a.VertexArrayObject,this),this._glName=e.createVertexArray(),e.bindVertexArray(this._glName),this._bindLayout(t))}_bindLayout(t){const{_buffers:e,_indexBuffer:r}=this;if(e||i().error("Vertex buffer dictionary is empty!"),e.forEach((s,h)=>_(this._context,t,s,this._baseInstances.get(h)??0)),r!=null){const s=this._context.gl;this._context.gl.bindBuffer(s.ELEMENT_ARRAY_BUFFER,r.glName)}}unbind(){this._context.gl.bindVertexArray(null)}shallowCloneWithBaseInstances(t){return new f(this._context,this._buffers,this._indexBuffer,t)}};export{d as h};
