import{dU as I,jY as v,ju as _,gp as H,gq as L,gr as R,ec as f,cj as V,dp as Y,ed as $,dc as k,ft as O,jZ as U,j_ as C,it as x,dW as X,a7 as q,eR as E,dy as F,j$ as J,D as r,F as h,Z as N}from"./index-7LVg-iY6.js";import{i as W}from"./projectPointToVector-DB9mtevM.js";import{a as Z}from"./elevationInfoUtils-DiH329d2.js";import{i as A}from"./drapedUtils-SaEGYamF.js";function se(e,i,s,t,l,a,g,d){const c=i??s.leftVertex.pos,o=H(e)?L(c,e):e,[u,y,b,m,p,S,D]=o.a,j=p??0,G=S??Math.hypot(u[0]-y[0],u[1]-y[1]),M=D??1,z=B(t[0],t[1],l[0],l[1],a[0],a[1],g,d);return R(c,{a:[u,y,b,m,j,G,M]},z)}function B(e,i,s,t,l,a,g,d){const c=_(1,0,0,0,1,0,-e,-i,1),o=g-1,u=_(s*s*o+1,t*s*o,0,s*t*o,t*t*o+1,0,0,0,1),y=d-1,b=_(l*l*y+1,a*l*y,0,l*a*y,a*a*y+1,0,0,0,1),m=_(1,0,0,0,1,0,e,i,1),p=I();return v(p,u,c),v(p,b,p),v(p,m,p),p}function K(e){let i=0,s=0,t=0;return e?(e.type==="cim"&&e.data.symbol&&"symbolLayers"in e.data.symbol&&e.data.symbol.symbolLayers&&e.data.symbol.symbolLayers.map(l=>{l.type==="CIMVectorMarker"&&l.anchorPoint&&(Math.abs(l.anchorPoint.x)>i&&(i=l.anchorPoint.x),Math.abs(l.anchorPoint.y)>s&&(s=l.anchorPoint.y),l.size!=null&&l.size>t&&(t=l.size))}),i=f(i),s=f(s),t=f(t),{offsetX:i,offsetY:s,size:t}):{offsetX:i,offsetY:s,size:t}}let n=class extends V{set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged()}get elevationInfo(){const{layer:e}=this.graphic,i=e&&"elevationInfo"in e?e.elevationInfo:null,s=Z(this.graphic),t=i?i.offset:0;return new Y({mode:s,offset:t})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol())}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol())}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.consumesClicks=!0,this.events=new $,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(e){const i=this.graphic;if(i.visible===!1)return null;const s=i.geometry;if(s==null)return null;const t=this._get("focusedSymbol"),l=t??i.symbol;return this.view.type==="2d"?this._intersectDistance2D(this.view,e,s,l):this._intersectDistance3D(this.view,e,i)}attach(){this.attachSymbolChanged(),this.layer!=null&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this.layer!=null&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=k(()=>{var e;return(e=this.graphic)==null?void 0:e.symbol},e=>{e!=null&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&this.focusedSymbol!=null&&(this.graphic.symbol=this.focusedSymbol))},O)}detachSymbolChanged(){this._graphicSymbolChangedHandle!=null&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&this.focusedSymbol!=null?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(e,i,s,t){var g,d;if((t=t||U(s))==null)return null;const l=1;let a=this._circleCollisionCache;if(s.type==="point"&&t.type==="cim"&&((g=t.data.symbol)==null?void 0:g.type)==="CIMPointSymbol"&&t.data.symbol.symbolLayers){const{offsetX:c,offsetY:o,size:u}=K(t),y=C(i,w),b=u/2,m=e.toScreen(s),p=m.x+c,S=m.y+o;return x(y,[p,S])<b*b?l:null}if(s.type!=="point"||t.type!=="simple-marker")return A(i,s,e)?l:null;if(a==null||!a.originalPoint.equals(s)){const c=s,o=e.spatialReference;if(X(c.spatialReference,o)){const u=q(c,o);a={originalPoint:c.clone(),mapPoint:u,radiusPx:f(t.size)},this._circleCollisionCache=a}}if(a!=null){const c=C(i,w),o=(d=e.toScreen)==null?void 0:d.call(e,a.mapPoint);if(!o)return null;const u=a.radiusPx,y=o.x+f(t.xoffset),b=o.y-f(t.yoffset);return x(c,[y,b])<u*u?l:null}return null}_intersectDistance3D(e,i,s){const t=e.toMap(i,{include:[s]});return t&&W(t,P,e.renderSpatialReference)?E(P,e.state.camera.eye):null}};r([h({constructOnly:!0,nonNullable:!0})],n.prototype,"graphic",null),r([h()],n.prototype,"elevationInfo",null),r([h({constructOnly:!0,nonNullable:!0})],n.prototype,"view",void 0),r([h({value:null})],n.prototype,"focusedSymbol",null),r([h({constructOnly:!0})],n.prototype,"layer",void 0),r([h()],n.prototype,"interactive",void 0),r([h()],n.prototype,"selectable",void 0),r([h()],n.prototype,"grabbable",void 0),r([h({value:!1})],n.prototype,"grabbing",null),r([h()],n.prototype,"dragging",void 0),r([h()],n.prototype,"hovering",null),r([h({value:!1})],n.prototype,"selected",null),r([h()],n.prototype,"cursor",void 0),n=r([N("esri.views.interactive.GraphicManipulator")],n);const P=F(),w=J();export{n as S,B as c,se as m,K as s};
