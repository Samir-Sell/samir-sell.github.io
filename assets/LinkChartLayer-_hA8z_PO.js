import{fb as Se,dl as Ae,dm as Re,fd as ze,O as V,cO as Ne,b as q,dc as Fe,ft as Ge,m as G,bF as Q,a3 as Z,bp as pe,id as Oe,a9 as ae,aS as Pe,a8 as De,fw as $e,dn as Be,D as C,F as T,cs as Ue,Z as je}from"./index-7LVg-iY6.js";import{N as Y,a as Qe,I as We,C as He,o as Je,F as Ve,g as qe,L as ue,b as Ke,A as Ze,d as Xe,c as Ye,P as et,e as tt,p as at,r as it}from"./KnowledgeGraphSublayer-Dz8HGu1c.js";import{u as X}from"./featureConversionUtils-CFKvofkg.js";import{_ as v,I as ie,t as ne,S as B,o as nt}from"./constants-SxxbBSOD.js";import{u as ot}from"./knowledgeGraphService-DPZaAz6U.js";import"./OptimizedFeature-B76Ba1pI.js";import"./memoryEstimations-OaiSRTQo.js";import"./GraphicsLayer-Dt1IdCU8.js";import"./Relationship-D78tbJwQ.js";import"./FeatureStore-2OjZ4dp_.js";import"./BoundsStore-DVRBJden.js";import"./PooledRBush-DbDc20xx.js";import"./timeSupport-DXzOPMkX.js";import"./queryUtils-BuJwL4AF.js";import"./optimizedFeatureQueryEngineAdapter-BfxhLe6f.js";import"./QueryEngine-9udAKRU0.js";import"./WhereClauseCache-BEPEYZ8O.js";import"./WhereClause-ByEtKijn.js";import"./quantizationUtils-C4h4Tggy.js";import"./utils-By3dGP9r.js";import"./utils-Z5PohkhY.js";import"./utils-CTwd30qW.js";import"./ClassBreaksDefinition-LfDkloxb.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-CfZNXjbi.js";import"./FormTemplate-AlpFiaSB.js";import"./utils-BFwTYlwv.js";import"./cimSymbolUtils-CQYiDmao.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./networkEnums-CqnS-sZR.js";import"./GPMessage-LEmSRqUU.js";const ce={MULTIPLIER:"multiplier",ABSOLUTE:"absolute-value"};let k=class extends Se(Ae(Re(ze(Be)))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(V.ofType(Y)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new Ne({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(V.ofType(Y)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e==null?void 0:e.initializationInclusionModeDefinition,(e==null?void 0:e.dataPreloadedInLocalCache)&&!(e!=null&&e.initializationInclusionModeDefinition))throw new q("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(Fe(()=>this.layers.concat(this.tables),(t,a)=>this._handleSublayersChange(t,a),Ge))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}=e;return{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}}_initializeLayerProperties(e){var r,o,l,g;if(!this.title&&this.url){const d=this.url.split("/");this.title=d[d.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new q("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");(r=e.inclusionModeDefinition)!=null&&r.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):(o=e.inclusionModeDefinition)!=null&&o.namedTypeDefinitions&&((l=e.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions.size)>0?(g=e.inclusionModeDefinition)==null||g.namedTypeDefinitions.forEach((d,m)=>{var I,N;const f=this._graphTypeLookup.get(m);if(!f)return G.getLogger(this).warn(`A named type, ${m}, was in the inclusion list that wasn't in the data model and will be removed`),void((I=e.inclusionModeDefinition)==null?void 0:I.namedTypeDefinitions.delete(m));f.type==="relationship"?t.has(m)||(t.add(m),i.push(f)):f.type==="entity"?t.has(m)||(t.add(m),a.push(f)):(G.getLogger(this).warn(`A named type, ${m}, was in the inclusion list that wasn't properly modeled and will be removed`),(N=e.inclusionModeDefinition)==null||N.namedTypeDefinitions.delete(m))}):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new Qe({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=n}load(e){const t=async()=>{var n;const a=[],i=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await ue(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),(n=this.dataManager.inclusionModeDefinition)==null||n.namedTypeDefinitions.forEach(r=>{r.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(r=>{i.push(r.refreshCachedQueryEngine()),a.push(new Promise(o=>{r.on("layerview-create",()=>{o(null)})}))}),this.tables.forEach(r=>{i.push(r.refreshCachedQueryEngine())}),await Promise.all(i)};return this.addResolvingPromise(new Promise(a=>{ot(this.url).then(async i=>{var r,o,l,g,d,m,f,I,N,M;(r=i.dataModel.entityTypes)==null||r.forEach(y=>{y.name&&this._graphTypeLookup.set(y.name,y)}),(o=i.dataModel.relationshipTypes)==null||o.forEach(y=>{y.name&&this._graphTypeLookup.set(y.name,y)});const n=(l=this.linkChart)==null?void 0:l.linkChartProperties;if((n==null?void 0:n.originIdOf("entitiesUrl"))===6&&(this.membershipModified=!1,this._originalInclusionList=await We.fetchAndConvertSerializedLinkChart({entitiesUrl:n==null?void 0:n.entitiesUrl,relationshipsUrl:n==null?void 0:n.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(i.dataModel),this.initializationLinkChartConfig={layoutSettings:(n==null?void 0:n.layoutSettings)??void 0,layoutMode:He(n.layoutType)}),this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),(d=(g=this.dataManager.inclusionModeDefinition)==null?void 0:g.namedTypeDefinitions)!=null&&d.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},(m=this.dataManager.knowledgeGraph.dataModel.entityTypes)==null||m.forEach(y=>{var _;y.name&&((_=this.dataManager.inclusionModeDefinition)==null||_.namedTypeDefinitions.set(y.name,{useAllData:!0}))}),(f=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)==null||f.forEach(y=>{var _;y.name&&((_=this.dataManager.inclusionModeDefinition)==null||_.namedTypeDefinitions.set(y.name,{useAllData:!0}))})),this.dataPreloadedInLocalCache){const y=Je.getInstance();for(const[_,O]of((I=this.dataManager.inclusionModeDefinition)==null?void 0:I.namedTypeDefinitions)??[])for(const w of((N=O.members)==null?void 0:N.values())??[]){const ee=y.readFromStoreById(`${_}__${w.id}`);ee&&Q(this.dataManager.sublayerCaches,_,()=>new Map).set(w.id,ee)}await t()}else{const y=((M=this.initializationLinkChartConfig)==null?void 0:M.layoutMode)==="geographic-organic-standard";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,y,!0).then(async()=>{Z(e),await t()}))}a(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("initializationInclusionModeDefinition",e):G.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}get sublayerCapabilities(){return Ve(this.knowledgeGraph)}async addRecords(e,t){let a=[];t!=null&&t.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await qe(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter(n=>{var r;return!((r=this.sublayerIdsCache.get(n.typeName))!=null&&r.has(n.id))});i.length>0&&(this.membershipModified=!0),await this._handleNewRecords(i,t)}async createSublayerForNamedType(e){var i,n;await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new q("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new q("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),Q(this.sublayerIdsCache,e,()=>new Set);const a=this._createSublayer(t);return t.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),(n=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null||n.set(e,{useAllData:!1,members:new Map}),a.geometryType?this.layers.push(a):this.tables.push(a),await ue(this,[e]),this._refreshNamedTypes(),a}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1,overrideMembershipCheck:i=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){var l,g,d,m,f,I,N,M;let n=[];for(const y of e)(i||((d=(g=(l=this.dataManager.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions)==null?void 0:g.get(y.typeName))==null?void 0:d.useAllData)===!1&&((N=(I=(f=(m=this.dataManager.inclusionModeDefinition)==null?void 0:m.namedTypeDefinitions)==null?void 0:f.get(y.typeName))==null?void 0:I.members)!=null&&N.has(y.id)))&&n.push(y);if(t){const y=new Set,_=[];for(const O of n)if(this.dataManager.nodeConnectionsLookup.has(O.id))for(const w of this.dataManager.nodeConnectionsLookup.get(O.id))y.add(w);for(const O of y)if(this.dataManager.memberIdTypeLookup.has(O))for(const w of this.dataManager.memberIdTypeLookup.get(O))this.dataManager.relationshipTypeNames.has(w)&&_.push({id:O,typeName:w});n=n.concat(_)}this.dataManager.removeFromLayer(n);for(const y of n)(M=this.sublayerIdsCache.get(y.typeName))==null||M.delete(y.id),this.dataManager.relationshipTypeNames.has(y.typeName)?this.relationshipLinkChartDiagramLookup.delete(y.id):this.entityLinkChartDiagramLookup.delete(y.id);const r=a?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:r}),n.length>0&&(this.membershipModified=!0);const o=[];return this.layers.forEach(y=>{o.push(y.refreshCachedQueryEngine())}),await Promise.all(o),this._refreshNamedTypes(),n}async expand(e,t){let a=[];try{const i=await this.dataManager.getConnectedRecordIds(e,t==null?void 0:t.relationshipTypeNames,t);a=i.filter(n=>{var r;return!((r=this.sublayerIdsCache.get(n.typeName))!=null&&r.has(n.id))}),await this._handleNewRecords(a,t),i.length>0&&(this.membershipModified=!0),Z(t==null?void 0:t.signal)}catch(i){throw pe(i)&&a.length>0&&await this.removeRecords(a,{overrideMembershipCheck:!0}),i}return{records:a}}loadLayerAssumingLocalCache(){var t,a;const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===0?this.originIdOf("layers")===0?this._createSublayers(e,this.layers,i=>!!i.geometryType):this._updateSublayers(e,this.layers):this.layers=new V,this.tables.length||this.originIdOf("layers")===0?this.originIdOf("tables")===0?this._createSublayers(e,this.tables,i=>!i.geometryType):this._updateSublayers(e,this.tables):this.tables=new V,(a=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||a.forEach((i,n)=>{var o;const r=Q(this.sublayerIdsCache,n,()=>new Set);(o=i.members)==null||o.forEach(({id:l,linkChartLocation:g})=>{if(r.add(l),g){const d="coords"in g&&"lengths"in g?g:X(g);this.dataManager.relationshipTypeNames.has(n)?this.relationshipLinkChartDiagramLookup.set(l,d):this.entityLinkChartDiagramLookup.set(l,d)}})})}async calculateLinkChartLayout(e="organic-standard",t){var be,we,Le,Me,ke,Ce,Te;const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach((s,h)=>{this.dataManager.entityTypeNames.has(h)?s.forEach(c=>{a.push({typeName:h,feature:c})}):this.dataManager.relationshipTypeNames.has(h)&&s.forEach(c=>{i.push({typeName:h,feature:c})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const r=new Map,o=new Map,l=new Map,g=new Map,d=new Uint8Array(a.length),m=new Float64Array(a.length),f=new Float64Array(a.length),I=new Float64Array(a.length),N=new Float64Array(a.length),M=new Uint32Array(i.length),y=new Uint32Array(i.length),_=new Float64Array(i.length),O=new Float64Array(i.length),w=[],ee="organic-standard";let ye=!1;const x=new Ne({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let W,ge="organic-standard",b=0,S=0;const ve=Ke.apply;switch(ge=e==="geographic-organic-standard"?ee:e,ge){case"organic-standard":W=at.apply;break;case"organic-community":W=tt.apply;break;case"hierarchical-bottom-to-top":W=et.apply;break;case"radial-root-centric":W=Ye.apply;break;case"tree-left-to-right":W=Xe.apply;break;default:W=Ze.apply}let oe=!1;a.forEach(({typeName:s,feature:h})=>{var c,A,R,L,z;if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"&&((c=t==null?void 0:t.lockedNodeLocations)!=null&&c.has(h.attributes[v]))){e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(s)?d[b]=2:d[b]=0;const p=t.lockedNodeLocations.get(h.attributes[v]);m[b]=p.x,f[b]=p.y}else if(e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(s)){d[b]=2;let p=null;const D=h.attributes[this.dataManager.geographicLookup.get(s).name];switch((A=this.dataManager.geographicLookup.get(s))==null?void 0:A.geometryType){case"esriGeometryPoint":m[b]=D==null?void 0:D.x,f[b]=D==null?void 0:D.y;break;case"esriGeometryPolygon":{const F=Oe(D);p=F?ae.fromJSON(F):null,(p==null?void 0:p.x)!=null&&(p==null?void 0:p.y)!=null?(m[b]=p.x,f[b]=p.y):d[b]=1;break}case"esriGeometryPolyline":case"esriGeometryMultipoint":p=(R=D==null?void 0:D.extent)==null?void 0:R.center,(p==null?void 0:p.x)!=null&&(p==null?void 0:p.y)!=null?(m[b]=p.x,f[b]=p.y):d[b]=1;break;default:d[b]=1}(m[b]==null||f[b]==null||Number.isNaN(m[b])||Number.isNaN(f[b]))&&(d[b]=1,m[b]=0,f[b]=0)}else if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){!oe&&((L=t==null?void 0:t.lockedNodeLocations)!=null&&L.has(h.attributes[v]))&&(oe=!0);const p=(z=t==null?void 0:t.timeInfoByTypeName)==null?void 0:z.get(s),D=p==null?void 0:p.startField,P=D&&(p!=null&&p.startField)?h.attributes[D]:null;I[b]=P?new Date(P).getTime():NaN;const F=p==null?void 0:p.endField,U=F&&(p!=null&&p.endField)?h.attributes[F]:null;N[b]=U?new Date(U).getTime():NaN,m[b]=0,f[b]=0,d[b]=1}else d[b]=1,m[b]=0,f[b]=0;g.set(h.attributes[v],b),w[b]={feature:h,typeName:s},b++}),oe&&G.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let me=!1;const se=new Map;i.forEach(s=>{var F;const h=s.feature.attributes[ie],c=s.feature.attributes[ne],A=g.get(h),R=g.get(c),L=(F=t==null?void 0:t.timeInfoByTypeName)==null?void 0:F.get(s.typeName),z=t!=null&&t.timeInfoByTypeName?L==null?void 0:L.startField:null,p=z?s.feature.attributes[z]:null,D=L==null?void 0:L.endField,P=D?s.feature.attributes[D]:null;if(A!==void 0&&R!==void 0){let U=h+"-"+c;e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(U=U+"-"+p+"-"+P);const H=se.get(U);(H==null?void 0:H.has(s.typeName))||(M[S]=A,y[S]=R,e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(_[S]=p?new Date(p).getTime():NaN,O[S]=P?new Date(P).getTime():NaN),H===void 0?se.set(U,new Map([[s.typeName,S]])):H.set(s.typeName,S),S++),n.push(s)}else me=!0,this.relationshipLinkChartDiagramLookup.set(h,null)}),me&&G.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const xe=this._validateOrganicLayoutSettings(e,(be=t==null?void 0:t.layoutSettings)==null?void 0:be.organicLayoutSettings),re=this._convertValidatedOrganicSettingsToCalculationSettings(xe);await it();let K=1,E=null;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){let s;({status:K,links:E,graphics:s}=ve(()=>{var h;return((h=t==null?void 0:t.signal)==null?void 0:h.aborted)??!1},d,m,f,I,N,M.subarray(0,S),y.subarray(0,S),_.subarray(0,S),O.subarray(0,S),e==="chronological-multi-timeline",(we=t==null?void 0:t.layoutSettings)==null?void 0:we.chronologicalLayoutSettings)),K===0&&(this.chronologicalAuxiliaryGraphics=s)}else({status:K,links:E}=W(()=>{var s;return((s=t==null?void 0:t.signal)==null?void 0:s.aborted)??!1},d,m,f,M.subarray(0,S),y.subarray(0,S),re.computationBudgetTime,re.idealEdgeLengthMultiplier,re.repulsionRadiusMultiplier));if(Z(t==null?void 0:t.signal),K===1)throw new q("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(K===2)throw Pe();for(let s=0;s<w.length;s++){if(f[s]>84.9999?f[s]=84.9999:f[s]<-84.9999&&(f[s]=-84.9999),m[s]>179.9999?m[s]=179.9999:m[s]<-179.9999&&(m[s]=-179.9999),w[s].feature.attributes[B]=new ae(m[s],f[s]),r.has(w[s].typeName)){const L=r.get(w[s].typeName);L==null||L.set(w[s].feature.attributes[v],w[s].feature)}else{const L=new Map;L.set(w[s].feature.attributes[v],w[s].feature),r.set(w[s].typeName,L)}l.set(w[s].feature.attributes[v],w[s].feature);const h=X(w[s].feature.attributes[B]);this.entityLinkChartDiagramLookup.set(w[s].feature.attributes[v],w[s].feature.attributes[B]?h:null);const c=Q(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,w[s].typeName,()=>({useAllData:!1,members:new Map}));Q(c.members,w[s].feature.attributes[v],()=>({id:w[s].feature.attributes[v],linkChartLocation:void 0})).linkChartLocation=w[s].feature.attributes[B];const{x:A,y:R}=w[s].feature.attributes[B];ye?(x.xmin=Math.min(x.xmin,A),x.xmax=Math.max(x.xmax,A),x.ymin=Math.min(x.ymin,R),x.ymax=Math.max(x.ymax,R)):(x.xmin=A-1e-7,x.xmax=A+1e-7,x.ymin=R-1e-7,x.ymax=R+1e-7,ye=!0)}if(this.linkChartExtent.xmin=x.xmin,this.linkChartExtent.xmax=x.xmax,this.linkChartExtent.ymin=x.ymin,this.linkChartExtent.ymax=x.ymax,!E)throw new q("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const te=new Map,le=new Map,he=new Map,fe=new Set;for(let s=0;s<n.length;s++){const h=[],c=n[s],A=c.feature.attributes[ie],R=c.feature.attributes[ne];let L=A+"-"+R;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){const u=(Le=t==null?void 0:t.timeInfoByTypeName)==null?void 0:Le.get(c.typeName),$=t!=null&&t.timeInfoByTypeName?u==null?void 0:u.startField:null,j=$?c.feature.attributes[$]:null,J=u==null?void 0:u.endField;L+="-"+j+"-"+(J?c.feature.attributes[J]:null)}const z=se.get(L).get(c.typeName),p=z===0?0:E==null?void 0:E.vertexEndIndex[z-1];if(!fe.has(z)){if(fe.add(z),E.types[z]===2){const u=[E.vertices[2*p],E.vertices[2*p+1]],$=[E.vertices[2*(p+1)],E.vertices[2*(p+1)+1]],j=[.5*(u[0]+$[0]),.5*(u[1]+$[1])],J=[j[0]-u[0],j[1]-u[1]],Ee=[j[0]+J[1],j[1]-J[0]],_e=[j[0]-J[1],j[1]+J[0]];h.push(u),h.push(Ee),h.push($),h.push(_e),h.push(u)}else{if(E.types[z]!==0){G.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let u=p;u<E.vertexEndIndex[z];u++)h.push([E.vertices[2*u],E.vertices[2*u+1]])}if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"){const u=(Me=w[g.get(A)])==null?void 0:Me.feature.attributes[B],$=(ke=w[g.get(R)])==null?void 0:ke.feature.attributes[B];h[0][0]===u.x&&h[0][1]===u.y||(h[0]=[u.x,u.y]),h[h.length-1][0]===$.x&&h[h.length-1][1]===$.y||(h[h.length-1]=[$.x,$.y])}for(let u=1;u<h.length-1;u++)h[u][1]>85.5?h[u][1]=85.5:h[u][1]<-85.5&&(h[u][1]=-85.5),h[u][0]>179.9999?h[u][0]=179.9999:h[u][0]<-179.9999&&(h[u][0]=-179.9999);te.has(L)?te.get(L).push(h):te.set(L,[h])}const D=te.get(L);le.has(L)||(le.set(L,new Map),he.set(L,new Map));const P=le.get(L),F=he.get(L);P.has(c.typeName)||(P.set(c.typeName,D.shift()),F.set(c.typeName,0));const U=P.get(c.typeName);F.set(c.typeName,F.get(c.typeName)+1);const H=new De({paths:[U]});if(c.feature.attributes[B]=H,o.has(c.typeName)){const u=o.get(c.typeName);u==null||u.set(c.feature.attributes[v],c.feature)}else{const u=new Map;u.set(c.feature.attributes[v],c.feature),o.set(c.typeName,u)}l.set(c.feature.attributes[v],c.feature);const de=X(c.feature.attributes[B]);this.relationshipLinkChartDiagramLookup.set(c.feature.attributes[v],c.feature.attributes[B]?de:null);const Ie=Q(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,c.typeName,()=>({useAllData:!1,members:new Map}));Q(Ie.members,c.feature.attributes[v],()=>({id:c.feature.attributes[v],linkChartLocation:void 0})).linkChartLocation=de}for(const s of n)s.feature.attributes[nt]=((Ce=he.get(s.feature.attributes[ie]+"-"+s.feature.attributes[ne]))==null?void 0:Ce.get(s.typeName))??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:(Te=t==null?void 0:t.layoutSettings)==null?void 0:Te.clone()},{nodes:r,links:o,idMap:l}}async applyNewLinkChartLayout(e="organic-standard",t){const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(i=>{a.push(i.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){var t,a;const e=new Map;for(const[i,n]of((t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions.entries())??[])this.dataManager.relationshipTypeNames.has(i)||((a=n==null?void 0:n.members)==null||a.forEach(r=>{const o=r.linkChartLocation;let l;const g=r.id;o&&(l="x"in o?{x:o.x,y:o.y}:{x:o.coords[0],y:o.coords[1]},e.set(g,new ae({x:l.x,y:l.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(a=>{t.push(a.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const n of this.dataManager.relationshipTypeNames){const r=this.sublayerIdsCache.get(n);r&&(i=i.concat(Array.from(r.keys())))}a=await this.dataManager.getRelationshipsBetweenNodes(e,i,t),await this._handleNewRecords(a,t),Z(t)}catch(i){throw pe(i)&&this.removeRecords(a),i}return{records:a}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const r of this.dataManager.relationshipTypeNames){const o=this.sublayerIdsCache.get(r);o&&(i=i.concat(Array.from(o.keys())))}let n=[];for(const r of this.dataManager.entityTypeNames){const o=this.sublayerIdsCache.get(r);o&&(n=n.concat(Array.from(o)))}a=await this.dataManager.getRelationshipsFromNodes(e,n,i,t),await this._handleNewRecords(a,t),a.length>0&&(this.membershipModified=!0),Z(t)}catch(i){throw pe(i)&&this.removeRecords(a),i}return{records:a}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){var i;const a=new Map;this.layers.forEach(n=>{a.set(n.objectType.name,n.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t}),(i=this.linkChart)==null||i.handleChronologicalOverlay()}async _handleNewRecords(e,t){const a=new Set,i=[],n=this.layers.concat(this.tables);for(const o of e)this._graphTypeLookup.has(o.typeName)&&(n.some(l=>l.objectType.name===o.typeName)===!1&&(this.dataManager.sublayerCaches.set(o.typeName,new Map),a.add(o.typeName)),Q(this.sublayerIdsCache,o.typeName,()=>new Set).add(o.id),i.push(o));this.dataManager.addToLayer(i);for(const o of a){const l=this._graphTypeLookup.get(o);if(l){const g=this._createSublayer(l);l.type==="entity"?this.dataManager.entityTypeNames.add(o):this.dataManager.relationshipTypeNames.add(o),g.geometryType?this.layers.push(g):this.tables.push(g)}}await ue(this,Array.from(a),t),await this.dataManager.refreshCacheContent(e.map(o=>o.id),void 0,void 0,void 0,t);const r={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[o,l]of this.entityLinkChartDiagramLookup.entries())l&&r.lockedNodeLocations.set(o,new ae(l.coords[0],l.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,r)}_createSublayers(e,t,a){e.forEach(i=>{const n=this._createSublayer(i);a(n)&&t.push(n),this._updateSublayerCaches(i)})}_updateSublayers(e,t){t.forEach(a=>{a.parentCompositeLayer=this;const i=e.find(n=>n.type===a.graphType&&n.name===a.graphTypeName);i&&(a.objectType=i,a.read({title:i.name},{origin:"service"}),this._updateSublayerCaches(i))})}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=3&&e<7}async _initializeDiagram(){var e,t;this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?((t=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)==null||t.forEach((a,i)=>{var n;(n=a==null?void 0:a.members)==null||n.forEach(r=>{const o=r.linkChartLocation;let l;const g=r.id;if(!o)return;l="x"in o?{x:o.x,y:o.y}:{x:o.coords[0],y:o.coords[1]};const d=X(l);this.dataManager.relationshipTypeNames.has(i)?this.relationshipLinkChartDiagramLookup.set(g,d):this.entityLinkChartDiagramLookup.set(g,d),this.linkChartExtent.xmin>l.x&&(this.linkChartExtent.xmin=l.x),this.linkChartExtent.xmax<l.x&&(this.linkChartExtent.xmax=l.x),this.linkChartExtent.ymin>l.y&&(this.linkChartExtent.ymin=l.y),this.linkChartExtent.ymax<l.y&&(this.linkChartExtent.ymax=l.y)})}),this.memberRelationshipTypes.forEach(a=>{var i;a.name&&((i=this.dataManager.sublayerCaches.get(a.name))==null||i.forEach(n=>{const r=this.relationshipLinkChartDiagramLookup.get(n.attributes[ie]),o=this.relationshipLinkChartDiagramLookup.get(n.attributes[ne]);if(r&&o){const l=X(new De({paths:[[[r.coords[0],r.coords[1]],[o.coords[0],o.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(n.attributes[v],l)}else this.relationshipLinkChartDiagramLookup.set(n.attributes[v],null)}))})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const a=M=>typeof M=="number"&&!isNaN(M),i=M=>a(M)&&M>=1,n=M=>a(M)&&M>=1,r=M=>Object.values(ce).includes(M),o=M=>a(M)&&M>=0,l={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return l;const{computationBudgetTime:g,autoRepulsionRadius:d,repulsionRadiusMultiplier:m,absoluteIdealEdgeLength:f,multiplicativeIdealEdgeLength:I,idealEdgeLengthType:N}=t;return n(g)?l.computationBudgetTime=g:g&&G.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),l.autoRepulsionRadius=d,!d&&i(m)?l.repulsionRadiusMultiplier=m:d||(l.autoRepulsionRadius=!0,G.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),e==="geographic-organic-standard"&&(r(N)?l.idealEdgeLengthType=N:N!==void 0&&G.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),N==="absolute-value"&&o(f)?l.absoluteIdealEdgeLength=f:N==="absolute-value"&&f!==void 0?G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):N==="multiplier"&&o(I)?l.multiplicativeIdealEdgeLength=I:N==="multiplier"&&I!==void 0&&G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),l}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===ce.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===ce.ABSOLUTE&&(t===void 0?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new Y({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(a=>{a.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(a=>{a.parent=this}),this.addHandles([e.on("after-add",({item:a})=>{a.parent=this}),e.on("after-remove",({item:a})=>{a.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){var n;const t=new Set((e.entityTypes??[]).map(r=>r.name).concat((e.relationshipTypes??[]).map(r=>r.name))),a=new Set((e.entityTypes??[]).map(r=>r.name)),i=new Set((e.relationshipTypes??[]).map(r=>r.name));if(this.layers){for(const o of this.layers)!o.graphType&&t.has(o.graphTypeName)&&(o.graphType=a.has(o.graphTypeName)?"entity":"relationship");const r=this.layers.filter(o=>t.has(o.graphTypeName)&&(o.graphType==="entity"?a.has(o.graphTypeName):i.has(o.graphTypeName)));this.setAtOrigin("layers",r,$e(this.originIdOf("layers")))}else this.layers=new V;if(this.layers&&this._originalInclusionList){const r=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),o=((n=this.tables)==null?void 0:n.map(d=>d.graphTypeName))??[],l=this.layers.map(d=>d.graphTypeName).concat(o);for(const d of l)r.has(d)||this._originalInclusionList.namedTypeDefinitions.set(d,{useAllData:!1,members:new Map});const g=[];for(const d of this._originalInclusionList.namedTypeDefinitions.keys())l.includes(d)||(G.getLogger(this).warn(`A named type, ${d}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),g.push(d));for(const d of g)this._originalInclusionList.namedTypeDefinitions.delete(d)}}};C([T(Ue)],k.prototype,"url",void 0),C([T()],k.prototype,"dataPreloadedInLocalCache",void 0),C([T()],k.prototype,"initializationLinkChartConfig",void 0),C([T()],k.prototype,"membershipModified",void 0),C([T()],k.prototype,"dataManager",void 0),C([T()],k.prototype,"initializationInclusionModeDefinition",null),C([T()],k.prototype,"knowledgeGraph",void 0),C([T({type:V.ofType(Y),json:{write:{ignoreOrigin:!0}}})],k.prototype,"layers",void 0),C([T({readOnly:!0})],k.prototype,"linkChart",null),C([T()],k.prototype,"entityLinkChartDiagramLookup",void 0),C([T()],k.prototype,"relationshipLinkChartDiagramLookup",void 0),C([T()],k.prototype,"linkChartExtent",void 0),C([T()],k.prototype,"memberEntityTypes",void 0),C([T()],k.prototype,"memberRelationshipTypes",void 0),C([T({type:["LinkChartLayer"]})],k.prototype,"operationalLayerType",void 0),C([T()],k.prototype,"sublayerCapabilities",null),C([T()],k.prototype,"sublayerIdsCache",void 0),C([T({type:V.ofType(Y),json:{write:{ignoreOrigin:!0}}})],k.prototype,"tables",void 0),C([T({json:{read:!1}})],k.prototype,"type",void 0),C([T({json:{read:!1}})],k.prototype,"chronologicalAuxiliaryGraphics",void 0),k=C([je("esri.layers.LinkChartLayer")],k);const Gt=k;export{Gt as default};
