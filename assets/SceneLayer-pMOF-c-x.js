const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/editingSupport-BA6R0k8R.js","assets/index-Cv0-fPI4.js","assets/index-DZndqy9Z.css","assets/EditBusLayer-0-FkBq39.js","assets/infoFor3D-dHKPbXlj.js","assets/Mesh-Bk6GbOh4.js","assets/axisAngleDegrees-DNNI3iFk.js","assets/quat-Ch0VBzF_.js","assets/quatf64-aQ5IuZRd.js","assets/MeshComponent-C4kAE2CT.js","assets/meshProperties-BrNWSC8G.js","assets/MeshLocalVertexSpace-0KGRSdMe.js","assets/MeshTransform-C4AyjZAz.js","assets/MeshVertexAttributes-DIbDYLF6.js","assets/meshVertexSpaceUtils-33Pp2MTB.js","assets/triangulationUtils-CmQUnx7x.js","assets/earcut-D9gy186-.js","assets/Indices-BYZ6tNTV.js","assets/plane-CMgcROBJ.js","assets/vectorStacks-CCph9NQh.js","assets/deduplicate-Dj2Gc9R2.js","assets/projectPointToVector-DKL5R6ed.js","assets/vertexSpaceConversion-BvpusJ0I.js","assets/spatialReferenceEllipsoidUtils-B9213FBR.js","assets/computeTranslationToOriginAndRotation-CCe0ibwp.js","assets/vec3-DHTLHD1_.js","assets/BufferView-DWNkXJgb.js","assets/vec4-DF5gJdUA.js","assets/External-wo3PMdGo.js"])))=>i.map(i=>d[i]);
import{j4 as Y,kx as X,ky as ee,j5 as te,Z as i,a0 as a,m6 as q,ap as U,nY as re,a1 as S,kR as k,ag as R,fv as se,nZ as T,bD as b,cG as ie,ft as ae,fs as oe,H as W,a2 as ne,b as u,bI as le,_ as A,fb as de,fc as pe,dm as ue,fd as ce,fe as ye,af as he,dn as fe,a3 as Z,cF as me,nH as ge,aR as ve,lW as we,kP as N,o as f,f as be,cd as Ie,n_ as Le,a5 as Fe,kQ as Se,cu as C,n$ as _e,g3 as $e,at as G,o0 as Te,az as Oe,h$ as Q,V as je,gc as xe,kE as Ee,kj as Ae,o1 as Pe,o2 as Re,kS as De,ff as qe,kV as Ue,kT as V,kU as ke,fm as Ne,o3 as Ce,kX as Ge,kW as Qe,d7 as Ve,lF as He,kZ as ze,o4 as Ke}from"./index-Cv0-fPI4.js";import{i as Me,m as We,a as Ze}from"./meshSpatialReferenceScaleUtils-sQ6EjfGs.js";import{o as Be}from"./APIKeyMixin-D0FD_BkO.js";import{l as Je}from"./ArcGISService-C53qe3G4.js";import{F as Ye}from"./EditBusLayer-0-FkBq39.js";import{_ as Xe}from"./SceneService-C685XrR4.js";import{s as et}from"./associatedFeatureServiceUtils-Cw7pEJkl.js";import{t as tt}from"./capabilities-Cs4k8cuT.js";import{p as B,a as rt,y as st,m as it}from"./I3SLayerDefinitions-CNoj3Kd5.js";import{r as at,n as ot}from"./infoFor3D-dHKPbXlj.js";import{i as nt}from"./LayerFloorInfo-Dogovv3A.js";import{a as lt}from"./lazyLayerLoader-B-yBSi_i.js";import{t as dt}from"./styleUtils-B2ZjnoOT.js";import{j as H,$ as pt,R as ut}from"./elevationInfoUtils-PVRzb7p9.js";import{$ as ct}from"./I3SUtil-Bn-sY7uB.js";import{p as yt,n as ht}from"./popupUtils-DMfGE7QM.js";import"./MeshTransform-C4AyjZAz.js";import"./quat-Ch0VBzF_.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-DNNI3iFk.js";import"./originUtils-Dl_3sZfB.js";import"./multiLayerServiceUtils-BBUZSlDc.js";import"./jsonContext-wr5H8zRo.js";import"./resourceUtils-DzIlS2vA.js";import"./resourceUtils-DrM0jdao.js";import"./saveUtils-CrcyNRut.js";import"./projectVectorToVector-rT5JYUUy.js";import"./projectPointToVector-DKL5R6ed.js";import"./sphere-Dq9FTyYU.js";import"./vectorStacks-CCph9NQh.js";import"./I3SBinaryReader-B-cgYzEe.js";import"./edgeUtils-C6NhRw-s.js";import"./orientedBoundingBox-De9WOq0X.js";import"./spatialReferenceEllipsoidUtils-B9213FBR.js";import"./computeTranslationToOriginAndRotation-CCe0ibwp.js";import"./plane-CMgcROBJ.js";import"./glsl-B5bJgrnA.js";const ft=Symbol("isSceneGraphicOrigin");var z;let mt=class extends Y{get[(z=ft,X)](){return this.layer}get[ee](){return this.layer}get[te](){return this.layer}constructor(t){super(),this[z]=!0,this.type="scene",this.layer=t}get id(){return this.layer.id}};function J({associatedLayer:e,serviceUpdateTimeStamp:t}){var p;const r=(p=e==null?void 0:e.editingInfo)==null?void 0:p.lastEditDate,s=e==null?void 0:e.serverGens,n=r!=null,l=t!=null,d=n&&l&&t.lastUpdate!==r.getTime();return n&&(d||!l&&(s==null?void 0:s.minServerGen)!==(s==null?void 0:s.serverGen))}const gt=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var l;const s=(l=this.associatedLayer)==null?void 0:l.timeInfo;if(s==null)return null;const n=s.clone();return k(n,this.fieldsIndex),n}set timeInfo(s){k(s,this.fieldsIndex),this._override("timeInfo",s)}get timeExtent(){var s;return(s=this.associatedLayer)==null?void 0:s.timeExtent}set timeExtent(s){this._override("timeExtent",s)}get timeOffset(){var s;return(s=this.associatedLayer)==null?void 0:s.timeOffset}set timeOffset(s){this._override("timeOffset",s)}get datesInUnknownTimezone(){var s;return((s=this.associatedLayer)==null?void 0:s.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(s){this._override("datesInUnknownTimezone",s)}async loadTimeInfoFromService(s){const{serviceTimeInfo:n}=this;if(n==null)return;const{startTimeField:l,endTimeField:d}=n;if(l==null&&d==null||J({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const p=async m=>{var $;let c=null;try{const g=await(($=this.fetchStatistics)==null?void 0:$.call(this,m,s));c=g==null?void 0:g.stats}catch{}if(c==null)return null;const{minTimeStr:L,min:O,maxTimeStr:j,max:x}=c,_=m===l?L??O:j??x;return _!=null?new Date(_):null},[y,h]=await Promise.all([p(l),p(d)]);if(l!=null&&y==null||d!=null&&h==null)return;const w=new U({start:y,end:h});this.setAtOrigin("timeInfo",new q({endField:d,startField:l,fullTimeExtent:w}),"service")}};return i([a({type:q,json:{read:!1,write:!1}})],r.prototype,"timeInfo",null),i([a({type:U,json:{read:!1,write:!1}})],r.prototype,"timeExtent",null),i([a({type:re,json:{read:!1,write:!1}})],r.prototype,"timeOffset",null),i([a({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],r.prototype,"datesInUnknownTimezone",null),i([a({type:F,readOnly:!0,json:{read:{source:"timeInfo"}},clonable:!1})],r.prototype,"serviceTimeInfo",void 0),r=i([S("esri.layers.mixins.TemporalSceneLayer")],r),r};let F=class extends R{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};i([a({type:String})],F.prototype,"endTimeField",void 0),i([a({type:String})],F.prototype,"startTimeField",void 0),F=i([S("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],F);let v=class extends R{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([a({type:String,json:{read:!0,write:{isRequired:!0}}})],v.prototype,"name",void 0),i([a({type:String,json:{read:!0,write:{isRequired:!0}}})],v.prototype,"field",void 0),i([a({type:[Number],json:{read:!0,write:!0}})],v.prototype,"currentRangeExtent",void 0),i([a({type:[Number],json:{read:!0,write:!0}})],v.prototype,"fullRangeExtent",void 0),i([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],v.prototype,"type",void 0),v=i([S("esri.layers.support.RangeInfo")],v);var P;let I=P=class extends R{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new T,this._geometriesSource=null}initialize(){this.addHandles(ie(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ae))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=T.fromJSON(e,r):r.origin!=="web-scene"&&r.origin!=="portal-item"||(this._geometriesSource={url:oe(e,r),context:r})}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:s}=this._geometriesSource,n=await W(r,{responseType:"json",signal:t==null?void 0:t.signal}),l=e.toJSON(),d=n.data.map(p=>({...p,spatialReference:l}));this.geometries=T.fromJSON(d,s),this._geometriesSource=null}clone(){const e=new P({geometries:ne(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([a({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],I.prototype,"spatialRelationship",void 0),i([a({type:T,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),se({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],I.prototype,"geometries",void 0),i([b(["web-scene","portal-item","service"],"geometries")],I.prototype,"readGeometries",null),I=P=i([S("esri.layers.support.SceneFilter")],I);const vt=I;async function wt({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:s,path:n,customParameters:l,apiKey:d,signal:p}){if(t==null)throw new u(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=s.get(e);if(y==null)throw new u(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const h=t.find(c=>c.name===y.name);if(h==null)throw new u(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const w=le(n,h.href),{data:m}=await W(w,{query:{f:"json",...l,token:d},responseType:"json",signal:p});return m}async function bt(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(It(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function It(e){const{BlobReader:t,ZipReader:r,BlobWriter:s}=await A(()=>import("./zipjs-wrapper-Ch01H3X2.js"),[]),n=[];return(await new r(new t(e)).getEntries()).forEach(d=>{if(d.directory||/^__MACOS/i.test(d.filename))return;const p=new s;n.push(d.getData(p).then(y=>new File([y],d.filename)))}),Promise.all(n)}const Lt=new Set(["3DObject","Point"]),K=De();let o=class extends gt(Ye(Xe(Je(de(pe(ue(ce(ye(Be(he(fe))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.graphicOrigin=new mt(this),this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new Z,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.attributeTableTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=me(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var s;const r=((s=this.getField(e))==null?void 0:s.domain)??null;return this.associatedLayer?ge(this.associatedLayer,e,t,r):r}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get fieldsIndex(){return new ve(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:B.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&we(this.associatedLayer)}get geometryType(){return Ft[this.profile]||"mesh"}set renderer(e){N(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var D;e=e??tt;const{query:t,queryRelated:r,editing:{supportsGlobalId:s,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:p},data:{supportsZ:y,supportsM:h,isVersioned:w,supportsAttachment:m},operations:{supportsEditing:c,supportsAdd:L,supportsUpdate:O,supportsDelete:j,supportsQuery:x,supportsQueryAttachments:_,supportsAsyncConvert3D:$}}=e,g=e.operations.supportsChangeTracking,E=!!((D=this.associatedLayer)!=null&&D.infoFor3D);return{query:t,queryRelated:r,editing:{supportsGlobalId:s,supportsReturnServiceEditsInSourceSpatialReference:p,supportsRollbackOnFailure:n,supportsGeometryUpdate:E&&d,supportsUploadWithItemId:l},data:{supportsAttachment:m,supportsZ:y,supportsM:h,isVersioned:w},operations:{supportsQuery:x,supportsQueryAttachments:_,supportsEditing:c&&g,supportsAdd:E&&L&&g,supportsDelete:E&&j&&g,supportsUpdate:O&&g,supportsAsyncConvert3D:$}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,t){const r=t.store.profile;return r!=null&&M[r]?M[r]:(f.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e==null?void 0:e.signal;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(be),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await dt(this,{origin:"service"},t),N(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){f.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new Ie;return this.geometryType==="mesh"?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r!=null&&r.features)for(const s of r.features)s.layer=this,s.sourceLayer=this,s.origin=this.graphicOrigin;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){var s;const r=Le(this.fieldsIndex,await yt(this,ht(this)));return ct(((s=this.parsedUrl)==null?void 0:s.path)??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new u("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const s=new Fe;return s.attributes=r[0],s.layer=this,s.sourceLayer=this,s.origin=this.graphicOrigin,s}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(f.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Se(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new u("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const{applyEdits:r}=await A(()=>import("./editingSupport-BA6R0k8R.js"),__vite__mapDeps([0,1,2,3,4]));let s=t;await this.load();const n=this.associatedLayer;if(!n)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,d=!!n.infoFor3D,p=(s==null?void 0:s.globalIdUsed)??!0;if(d&&l==null)throw new u(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!p)throw new u(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return C(n.url)&&d&&e.deleteFeatures!=null&&l!=null&&(s={...s,globalIdToObjectId:await _e(n,e.deleteFeatures,l)}),r(this,n.source,e,s)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}async convertMesh(e,t){t??(t={}),t.location!=null&&$e(f.getLogger(this),"The 'location' option of convertMesh() has been deprecated in favour of 'origin'.",{version:"4.34",replacement:"origin",warnOnce:!0});const r=c=>{throw f.getLogger(this).error(".convertMesh()",c.message),c};await this.load(t),this.infoFor3D||r(new u("invalid:layer","SceneLayer has no capability for mesh conversion"));const s=await this.extractAndFilterFiles(e);G(t);const n=s.reduce((c,L)=>at(this.infoFor3D,L)?c+1:c,0);n===0&&r(new Me),n>1&&r(new We);const l=this.spatialReference,d=t.origin??t.location,p=await Te(d??t.defaultOrigin??new Oe({x:0,y:0,z:0,spatialReference:l}),l,t),y=p.spatialReference.isGeographic?"local":"georeferenced",{default:h}=await A(async()=>{const{default:c}=await import("./Mesh-Bk6GbOh4.js");return{default:c}},__vite__mapDeps([5,1,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,4]));G(t);const w=h.createWithExternalSource(p,{type:"client",files:s},{vertexSpace:y,transform:Ze(p.spatialReference),unitConversionDisabled:!0}),[m]=await this.uploadAssets([w],{...t,useAssetOrigin:!d});return m}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await bt(e)).filter(r=>ot(t,r)):e}validateLayer(e){if(e.layerType&&!Lt.has(e.layerType))throw new u("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new u("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new u("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,s){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=s&&s.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new u("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new u("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new u("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,t,r;if(this._fieldUsageInfo={},this.fields)for(const s of this.fields){const n=!!((e=this.attributeStorageInfo)!=null&&e.some(p=>p.name===s.name)),l=!!((r=(t=this.associatedLayer)==null?void 0:t.fields)!=null&&r.some(p=>p&&s.name===p.name)),d={supportsLabelingInfo:n,supportsRenderer:n,supportsPopupTemplate:n||l,supportsLayerQuery:l};this._fieldUsageInfo[s.name]=d}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPropertyOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var t;if(!((t=this.associatedLayer)!=null&&t.fields))return;let e=null;for(const r of this.associatedLayer.fields){const s=this.getField(r.name);s?(!s.domain&&r.domain&&(s.domain=r.domain.clone()),s.editable=r.editable,s.nullable=r.nullable,s.length=r.length):(e||(e=this.fields?this.fields.slice():[]),e.push(r.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPropertyOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled","attributeTableTemplate"],t=Q(this);for(let r=0;r<e.length;r++){const s=e[r],n=this.originIdOf(s),l=this.associatedLayer.originIdOf(s);n<l&&(l===2||l===3)&&t.setAtOrigin(s,this.associatedLayer[s],l)}}_applyAssociatedLayerExtentOverride(){var t,r,s;const e=(t=this.associatedLayer)==null?void 0:t.getAtOrigin("fullExtent","service");((r=this.associatedLayer)==null?void 0:r.infoFor3D)==null||!e||!C((s=this.associatedLayer)==null?void 0:s.url)||!J(this)||Q(this).setAtOrigin("fullExtent",e.clone(),2)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:s}=await et(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await lt.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:r,portalItem:s}),await this.associatedLayer.load()}catch(t){je(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(xe(e));try{await Ee(()=>this.popupEnabled&&this.popupTemplate!=null,e.signal)}catch(r){return void Ae(r)}const t=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?f.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${t}`):f.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${t}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&H(f.getLogger(this),pt("Mesh scene layers","relative-to-scene",e)),H(f.getLogger(this),ut("Scene layers",e))}async fetchStatistics(e,t){var r;return await wt({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((r=this.parsedUrl)==null?void 0:r.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t==null?void 0:t.signal})}};i([a({types:{key:"type",base:Re,typeMap:{selection:Pe}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:{allowNull:!0}},"portal-item":{name:"layerDefinition.featureReduction",write:{allowNull:!0}}}}})],o.prototype,"featureReduction",void 0),i([a({type:[v],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}},clonable:!1})],o.prototype,"rangeInfos",void 0),i([a({json:{read:!1}})],o.prototype,"associatedLayer",void 0),i([a({type:["show","hide"]})],o.prototype,"listMode",void 0),i([a({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),i([a({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([a({...K.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),i([a()],o.prototype,"types",null),i([a()],o.prototype,"typeIdField",null),i([a()],o.prototype,"templates",null),i([a()],o.prototype,"formTemplate",null),i([a({readOnly:!0})],o.prototype,"graphicOrigin",void 0),i([a({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),i([a({type:nt,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),i([a(K.outFields)],o.prototype,"outFields",void 0),i([a({type:B,readOnly:!0,json:{read:!1},clonable:!1})],o.prototype,"nodePages",void 0),i([b("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),i([a({type:[rt],readOnly:!0,clonable:!1})],o.prototype,"materialDefinitions",void 0),i([a({type:[st],readOnly:!0,clonable:!1})],o.prototype,"textureSetDefinitions",void 0),i([a({type:[it],readOnly:!0,clonable:!1})],o.prototype,"geometryDefinitions",void 0),i([a({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([a({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),i([a({readOnly:!0})],o.prototype,"statisticsInfo",void 0),i([a({type:Z.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),i([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),i([a({type:vt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),i([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),i([a(qe)],o.prototype,"elevationInfo",null),i([a({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),i([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),i([a({type:String})],o.prototype,"geometryType",null),i([a(Ue)],o.prototype,"labelsVisible",void 0),i([a({type:[ke],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:V},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:V},write:!0}})],o.prototype,"labelingInfo",void 0),i([a(Ne)],o.prototype,"legendEnabled",void 0),i([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var s,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const r=(n=(s=t.layerDefinition)==null?void 0:s.drawingInfo)==null?void 0:n.transparency;return r!==void 0?Ce(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),i([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),i([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),i([a({types:Ge,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),i([a({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),i([b("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),i([a({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),i([a({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),i([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),i([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),i([a(Qe)],o.prototype,"popupEnabled",void 0),i([a({type:Ve,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),i([a({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),i([a(He)],o.prototype,"attributeTableTemplate",void 0),i([a({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),i([b("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),i([a({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),i([b("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),i([a({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),i([a({type:String,json:{read:!1}})],o.prototype,"profile",void 0),i([b("service","profile",["store.profile"])],o.prototype,"readProfile",null),i([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),i([a(ze)],o.prototype,"screenSizePerspectiveEnabled",void 0),i([a({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),i([a(Ke)],o.prototype,"useViewTime",null),o=i([S("esri.layers.SceneLayer")],o);const M={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Ft={"mesh-pyramids":"mesh",points:"point"},lr=o;export{lr as default};
