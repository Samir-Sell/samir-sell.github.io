import{cj as v,gC as S,a3 as c,cE as w,dd as y,dc as k,cG as b,gD as E,ck as A,a5 as C,gE as F,a_ as P,dW as G,a7 as $,eJ as I,cy as H,ar as R,D as a,F as l,Z as x}from"./index-DalZQxea.js";import{t as O,P as Z}from"./elevationInfoUtils-DTZwRj2r.js";import{a as z}from"./normalizeUtilsSync-DLB-7fxp.js";import{u as W}from"./featureConversionUtils-BmwuvCkf.js";import{s as M}from"./OptimizedFeature-CIbaylOR.js";import{f as L}from"./FeatureStore-D9Ckv2F8.js";import{W as N}from"./QueryEngine-DIyR0L1R.js";import{A as m}from"./utils-B3FA2Y99.js";import{y as j,h as J}from"./hitTestSelectUtils-3vNvlVa7.js";import{i as q,o as D}from"./queryEngineUtils-DMxY4SfK.js";import{i as g,r as T,n as _}from"./symbologySnappingCandidates-D5_M5Y7W.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./memoryEstimations-8aoGHWgf.js";import"./BoundsStore-DbxyL9pF.js";import"./PooledRBush-nC3Mk1Zg.js";import"./timeSupport-DE744COr.js";import"./queryUtils-C0kkxnUU.js";import"./optimizedFeatureQueryEngineAdapter-DoNnCNQC.js";import"./WhereClauseCache-CKxzw6YW.js";import"./WhereClause-D55gKuCF.js";import"./quantizationUtils-Cg8aT734.js";import"./utils-s78bCeR-.js";import"./utils-CFjJWc1n.js";import"./utils-DBe9O2nJ.js";import"./ClassBreaksDefinition-D7Y6k7cL.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-UypphbZw.js";import"./cimSymbolUtils-tS__2F1D.js";import"./projectVectorToVector-BROSRFZx.js";import"./projectPointToVector-BiWrznA3.js";import"./geodesicUtils-DyxH3shS.js";import"./plane-BkCOrVa_.js";import"./vectorStacks-88v4nYBZ.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DckgZiOJ.js";import"./quantityUtils-NpVvMBrH.js";import"./spatialReferenceEllipsoidUtils-C1Kj_TYX.js";import"./SketchViewModel-BckF7YpR.js";import"./GraphicsLayer-C1pBo3gS.js";import"./geodeticLengthOperator-BGJx5CL8.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-B5V0TVLH.js";import"./lineSegment-C4xQp5au.js";import"./VertexSnappingCandidate-BOntXHDs.js";import"./PointSnappingHint-D4SeXjQM.js";const f="graphics-collections";let n=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="map-notes")return g();const o=async(r,s)=>(await S(e.whenLayerView(t),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&t.type!=="map-notes"&&o?_(o,async(r,s)=>{const p=await e.whenLayerView(t);return c(s),p.queryForSymbologySnapping({candidates:r,spatialReference:e.spatialReference},s)}):_()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new w,this._memoizedMakeGetGroundElevation=O(q)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(f);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],f)},y);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{Z(i,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),k(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),y),b(()=>t,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(e,t){const{point:i,coordinateHelper:{spatialReference:o}}=e,r=await E(this._mapSources(d=>this._fetchCandidatesForSource(d,e,t)));c(t);const s=this._memoizedMakeGetGroundElevation(this.view,o),p=r.flat().map(d=>D(d,s));return j(i,p),p}async _fetchCandidatesForSource(e,t,i){var u;const o=J({parameters:t,mode:((u=this.view)==null?void 0:u.type)??"2d"}),r=await e.queryEngine.executeQueryForSnapping(o,i);c(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,t.coordinateHelper.spatialReference,i);c(i);const p=await this._symbologySnappingFetcher.fetch(s,i);c(i);const d=p.length===0?s:[...s,...p];return this._snappingElevationFilter.filter(o,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],i=new Map;for(const o of e)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(t.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(t,i)}_createPendingAdd(e,t){if(!e.length)return;const i=A(async s=>{await C(e.map(p=>({source:p,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(e);for(const p of t.values())this._add(p)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:t},r=()=>F(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const i=t.wkt2||t.wkt;i&&this._loadedWkts.add(i)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=P.fromExtent(t));const i=this._ensureSource(t.type);if(i==null)return;const o=this._createOptimizedFeature(e.uid,t);o!=null&&(i.featureStore.add(o),m(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!G(e,this.spatialReference)}_createOptimizedFeature(e,t){const i=$(z(t),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=W(o,this._hasZ,!1);return new M(r,{[h]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=o=>{for(;o.length<3;)o.push(0)},i=e.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(t);break;case"polyline":i.paths.forEach(o=>o.forEach(t));break;case"polygon":i.rings.forEach(o=>o.forEach(t))}return i}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const i=this._createSource(e);return this._sources[e]=i,i}_createSource(e){const t=I.toJSON(e),i=this._hasZ,o=new L({geometryType:t,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new N({featureStore:o,fieldsIndex:R.fromLayerJSON({fields:[{name:h,type:"esriFieldTypeOID",alias:h}]}),geometryType:t,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:h},spatialReference:this.spatialReference,priority:H.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const i=t.uid;e.featureStore.has(i)&&(e.featureStore.removeById(t.uid),m(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return t!=null&&s.push(e(t)),i!=null&&s.push(e(i)),o!=null&&s.push(e(o)),r!=null&&s.push(e(r)),s}};a([l()],n.prototype,"getGraphicsLayers",void 0),a([l({constructOnly:!0})],n.prototype,"layerSource",void 0),a([l({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([l({constructOnly:!0})],n.prototype,"view",void 0),a([l({readOnly:!0})],n.prototype,"updating",null),a([l({readOnly:!0})],n.prototype,"availability",void 0),a([l()],n.prototype,"_hasZ",null),a([l()],n.prototype,"_snappingElevationAligner",null),a([l()],n.prototype,"_snappingElevationFilter",null),a([l()],n.prototype,"_symbologySnappingFetcher",null),a([l()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=a([x("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const h="OBJECTID";export{n as GraphicsSnappingSource};
