import{convertToSpatialReferenceUnit as y,toLengthUnit as R}from"./unitConversion-Dl2v6_-E.js";import{w as p}from"./operatorOffset-C5DF4w_K.js";import{fromGeometry as d,getSpatialReference as E,fromSpatialReference as G,toGeometry as g}from"./apiConverter-D1206EQv.js";import{fromGeometry as h,toGeometry as x}from"./jsonConverter-DRv1Kx8Q.js";import"./index-MBf2dn39.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-BjpBdDSK.js";import"./Envelope2D-DXBkavsi.js";import"./Point2D-AUu76-L_.js";import"./Transformation2D-481oZy9q.js";import"./OperatorDefinitions-DP7_WWTp.js";const u={round:0,bevel:1,miter:2,square:3};function L(r,t,i,e,s,m){t=y(R(i),r.spatialReference,t);const a=d(r),n=E(r),f=v(a,G(n),t,e,s,m);return g(f,n)}function M(r,t,i,e,s,m){t=y(R(i),r.spatialReference,t);const a=h(r),n=a.getGeometry(),f=a.getSpatialReference(),c=v(n,f,t,e,s,m);return x(c,f)}function v(r,t,i,e,s,m){const a=p(r,t,i,u[e],s,m);if(!a.isEmpty())return a;{const o=r.clone();o.reverseAllPaths();const l=p(o,t,-i,u[e],s,m);if(!l.isEmpty())return l.reverseAllPaths(),l}const n=Math.abs(i)/10,f=n/10;let c=m;if(e==="round"&&(c+=f),e==="bevel"||e==="square"){const o=p(r,t,i,u[e="miter"],s,m);if(!o.isEmpty())return o}if(e==="miter"){const o=p(r,t,i,u[e="round"],s,m);if(!o.isEmpty())return o}if(e==="round")for(;c<=n;c+=f){const o=p(r,t,i,u[e],s,c);if(!o.isEmpty())return o}return null}export{L as executeOffset,M as executeOffsetJson};
