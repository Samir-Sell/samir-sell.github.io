import{fb as w,fc as b,dm as L,fd as k,fe as I,dn as D,fs as P,cG as R,ft as x,ak as _,cO as T,b as u,M as $,H as y,f as m,o as h,fu as M,Z as s,a0 as a,fv as E,bD as O,ff as j,cy as q,a1 as N}from"./index-MBf2dn39.js";import{o as U}from"./APIKeyMixin-BRHmChzy.js";import{l as A}from"./ArcGISService-C5lmGAY8.js";import{n as S}from"./SceneModifications-DUNKmTK5.js";import{E as G}from"./tiles3DUtils-B8RycmzQ.js";import{j as g,w as J,R as H}from"./elevationInfoUtils-l3tH7G6t.js";let i=class extends A(w(b(L(k(I(U(D))))))){readModifications(e,t,o){this._modificationsSource={url:P(e,o),context:o}}initialize(){this.addHandles(R(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,x))}constructor(e){super(e),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.modifications=null,this._modificationsSource=null,this.spatialReference=new _({wkid:4326,vcsWkid:115700}),this.fullExtent=new T(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0,this._rootTilesetJSON=null,this._rootTileset=null,this._key=null,this._session=null,this._rootRequestPromise=null}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}get rootTilesetJSON(){return this._rootTilesetJSON}get rootTileset(){return this._rootTileset}get key(){return this._key}get session(){return this._session}_findSessionParameter(e){const t=[e];for(;(t==null?void 0:t.length)>0;){const o=t.pop();if(!o)return;for(const[n,r]of Object.entries(o)){if(n==="uri")try{const l=new URL("https://tmp"+r).searchParams.get("session");if(l)return l}catch{}typeof r=="object"&&r!==null&&t.push(r)}}return null}async requestRootAndSession(e){const t=(o,n)=>new u("3dtiles-init:"+o,n);return this._rootRequestPromise||(this._rootRequestPromise=new Promise((o,n)=>{this.url||n(t("url-missing","Layer url missing")),this._key=this.customParameters?this.customParameters.key:null,new Promise((r,l)=>{var p,c,f;if(this.replacesTerrain&&!this._key){const d=((p=this.portalItem)==null?void 0:p.portal)||((f=(c=this.parent)==null?void 0:c.portalItem)==null?void 0:f.portal)||$.getDefault();d.signIn().then(()=>{d.g3dTilesEnabled?y(d.restUrl+"/portals/self/modules/g3dtiles",{responseType:"json",query:{f:"json"}}).then(v=>{this._key=v.data.keyString,r()},()=>l(t("g3dtiles-key-error","Error fetching Google 3D Tiles key from portal"))):l(t("g3dTilesEnabled-false","Google 3D Tiles are not enabled on Portal "+d.url))},()=>l(t("sign-in-failed","Error signing in to Portal")))}else r()}).then(()=>{y(this.url,{query:this._key?{key:this._key,token:this.apiKey}:{token:this.apiKey},responseType:"array-buffer",authMode:"anonymous",signal:e}).then(r=>{try{this._rootTilesetJSON=JSON.parse(new TextDecoder().decode(r.data))}catch(l){return void n(t("root-parse-failed","Error parsing root tile, details: "+l))}this._rootTilesetJSON?(this._session=this._findSessionParameter(this._rootTilesetJSON),this._rootTileset=r.data,this.fullExtent=G(this._rootTilesetJSON),o(),this._rootRequestPromise=null):n(t("root-is-null","Root tile is null."))},r=>{m(r),n(t("root-load-failed","Error loading root tile")),this._rootRequestPromise=null,h.getLogger("IntegratedMesh3DTilesLayer").error("Layer loading failed",r)})},r=>n(r))})),this._rootRequestPromise}async _doLoad(e){const t=e!=null?e.signal:null;if(this._isUsedAsGroundLayer)throw new u("3dtiles-init:not-supported-in-groundlayers","Layer is not supported in basemap.");try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{var n;if((n=o.typeKeywords)!=null&&n.includes("IntegratedMesh"))return!0;throw new u("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},e)}catch(o){m(o)}if(this._modificationsSource!=null){const o=await S.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this.requestRootAndSession(t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},e=>{h.getLogger("IntegratedMesh3DTilesLayer").error("Layer loading failed",e)})}get hasAttributionData(){return!1}async fetchAttributionData(){return{}}_validateElevationInfo(e){const t="Integrated mesh 3d tiles layers";g(h.getLogger(this),J(t,"absolute-height",e)),g(h.getLogger(this),H(t,e))}get replacesTerrain(){return!1}get _isUsedAsGroundLayer(){return M(this.parent)}get hasGoogleUrl(){var e;return!!((e=this.url)!=null&&e.match(/.+\.googleapis.com/))}};s([a({type:["IntegratedMesh3DTilesLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({type:S,clonable:e=>e.clone()}),E({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],i.prototype,"modifications",void 0),s([O(["web-scene","portal-item"],"modifications")],i.prototype,"readModifications",null),s([a({type:_})],i.prototype,"spatialReference",void 0),s([a({type:T})],i.prototype,"fullExtent",void 0),s([a(j)],i.prototype,"elevationInfo",null),s([a({type:["show","hide"]})],i.prototype,"listMode",void 0),s([a(q)],i.prototype,"url",void 0),s([a({readOnly:!0})],i.prototype,"type",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([a({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],i.prototype,"minScale",void 0),s([a({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],i.prototype,"maxScale",void 0),s([a()],i.prototype,"replacesTerrain",null),s([a()],i.prototype,"_isUsedAsGroundLayer",null),s([a()],i.prototype,"hasGoogleUrl",null),i=s([N("esri.layers.IntegratedMesh3DTilesLayer")],i);const C=i;export{C as default};
