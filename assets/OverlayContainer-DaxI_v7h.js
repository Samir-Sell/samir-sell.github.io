import{Z as o,ji as D,cF as H,iR as Q,aC as G,iQ as V,iS as Z,iT as J,iU as K,iV as tt,bp as et,iW as st,iX as it,bs as ot,jj as rt,jk as U}from"./index-Cv0-fPI4.js";import{r as at}from"./vec3f32-WCVSSNPR.js";import{i as nt}from"./WGLContainer-Bi62Ne1i.js";import{o as pt}from"./FeatureCommandQueue-pNSI9Fh7.js";import{e as W}from"./utils-DDjZAYSk.js";import{P as dt,C as j,w as lt,Y as ht,c as x,_ as ct,d as ut,v as ft,f as q,m as n,r as vt,U as mt,g as B,i as yt,j as E,I as wt,k as xt}from"./GraphShaderModule-CKVDbU9D.js";import{t as k}from"./VertexElementDescriptor-BLyltQyJ.js";class P extends yt{}o([q(0,x)],P.prototype,"pos",void 0),o([q(1,x)],P.prototype,"uv",void 0);class _t extends wt{}class F extends E{}o([n(vt)],F.prototype,"dvs",void 0);class m extends E{}o([n(x)],m.prototype,"perspective",void 0),o([n(x)],m.prototype,"texSize",void 0),o([n(j)],m.prototype,"wrapAroundShift",void 0),o([n(j)],m.prototype,"opacity",void 0),o([n(mt)],m.prototype,"texture",void 0);class w extends dt{constructor(){super(...arguments),this.type="OverlayShader"}vertex(e){const t=e.uv.divide(this.config.texSize),s=new j(1).add(lt(t,this.config.perspective)),i=new ht(e.pos.add(new x(this.config.wrapAroundShift,0)),1),r=this.transform.dvs.multiply(i);return{uv:t,glPosition:new ct(r.xy.multiply(s),0,s)}}fragment(e){const t=ut(this.config.texture,e.uv).multiply(this.config.opacity),s=new ft;return s.fragColor=t,s}}o([n(F)],w.prototype,"transform",void 0),o([n(m)],w.prototype,"config",void 0),o([D(0,B(P))],w.prototype,"vertex",null),o([D(0,B(_t))],w.prototype,"fragment",null);class gt extends xt{constructor(){super(...arguments),this.type=25,this._mesh=null,this.shaders={overlay:new w}}render(e,t){const{context:s,painter:i}=e,r=this._getMesh(e,t);i.setPipelineState(W);const{isWrapAround:p,wrapAroundShift:c}=t.config,u={...t.config,wrapAroundShift:0},f={shader:this.shaders.overlay,uniforms:{transform:t.transform,config:u},defines:null,optionalAttributes:null,useComputeBuffer:!1};i.setPipelineState({...W,stencil:{write:!1,test:{compare:514,op:{fail:7680,zFail:7680,zPass:7681},mask:255}}}),i.submitDrawMeshUntyped(s,f,r,{stencilRef:0}),p&&(u.wrapAroundShift=c,i.submitDrawMeshUntyped(s,f,r,{stencilRef:0}))}shutdown(){H(this._mesh)}_getMesh(e,t){const{context:s}=e;if(this._mesh){const i=this._mesh.vertexBuffers.get("positions");if(!i)throw new Error("Buffer not found");i.setData(t.position)}else{const i=t.index!=null?t.index.length:t.position.length/2;this._mesh=new pt(s,{vertex:{positions:{data:t.position,layout:[new k("pos",2,G.FLOAT,0,8)]},uvs:{data:t.tex,layout:[new k("uv",2,G.UNSIGNED_SHORT,0,4)]}},index:t.index!=null?{index:{data:t.index}}:void 0,groups:[{index:t.index!=null?"index":void 0,primitive:Q.TRIANGLE_STRIP}],parts:[{group:0,start:0,count:i}]})}return this._mesh}}class jt extends nt{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=V(),this._overlayTechnique=new gt}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}doRender(e){if(e.drawPhase!==1||!this.visible)return;super.doRender(e);const t=this._overlayTechnique;for(const s of this.children)s.draw(e,t)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(e){const{state:t}=e,{id:s,size:i,pixelRatio:r,resolution:p,rotation:c,viewpoint:u,displayMat3:f}=t;if(this._viewStateId===s)return;const _=U(c),d=r*i[0],v=r*i[1];this._localOrigin=u.targetGeometry.clone();const{x:y,y:S}=this._localOrigin,g=Z(y,t.spatialReference);this._localOrigin.x=g,this._localOrigin.y=S;const R=p*d,$=p*v,a=J(this._dvsMat3);K(a,a,f),tt(a,a,et(d/2,v/2)),st(a,a,at(d/R,-v/$,1)),it(a,a,-_),this._viewStateId=s}_updateOverlays(e,t){const{state:s}=e,{rotation:i,spatialReference:r,worldScreenWidth:p,size:c,viewpoint:u}=s,f=this._localOrigin;let _,d=0;const v=ot(r);if(v&&r.isWrappable){const y=c[0],S=c[1],g=U(i),R=Math.abs(Math.cos(g)),$=Math.abs(Math.sin(g)),a=Math.round(y*R+S*$),[T,C]=v.valid,l=rt(r),{x:I,y:N}=u.targetGeometry,L=[I,N],b=[0,0];s.toScreen(b,L);const M=[0,0];let O;O=a>p?.5*p:.5*a;const z=Math.floor((I+.5*l)/l),X=T+z*l,Y=C+z*l,A=[b[0]+O,0];s.toMap(M,A),M[0]>Y&&(d=l),A[0]=b[0]-O,s.toMap(M,A),M[0]<X&&(d=-l),_={worldWidth:l,xBounds:[T,C]}}for(const y of t)y.updateDrawCoords(f,d,s,_)}}export{jt as f};
