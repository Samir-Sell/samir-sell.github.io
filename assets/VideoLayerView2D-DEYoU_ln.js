import{ha as I,ge as X,cL as B,dd as c,hb as J,aj as N,cY as Z,c_ as K,a7 as S,a_ as Q,a9 as z,hc as V,j as L,fr as ee,aw as te,fp as R,fn as W,cF as q,dc as u,D as w,F as x,hd as ie,Z as re}from"./index-7LVg-iY6.js";import{n as se}from"./GraphicsLayer-Dt1IdCU8.js";import{p as U,h as oe}from"./videoUtils-BugF0I28.js";import{S as ne}from"./cimSymbolUtils-CQYiDmao.js";import{f as ae}from"./OverlayContainer-yE5cKoEb.js";import{p as F}from"./ControlPoint-C1ck7F1X.js";import{e as le}from"./Container-DbnAb-n2.js";import{n as he,b as me}from"./LayerView2D-SzxVkAbP.js";import{i as ye}from"./GraphicContainer-ESK0mZX4.js";import{O as pe}from"./GraphicsView2D-tJY_tdqn.js";import{d as ce}from"./LayerView-BJQBeMRj.js";import"./utils-BFwTYlwv.js";import"./vec3f32-WCVSSNPR.js";import"./WGLContainer-DFESPc7k.js";import"./Utils-CK6faTS3.js";import"./BoundingBox-CDCLJ4a-.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-Dft8jvOi.js";import"./VertexArrayObject-xrNP4D43.js";import"./memoryEstimations-OaiSRTQo.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexBuffer-DoTdjBHF.js";import"./BufferObject-QKwwFXEf.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CFKvofkg.js";import"./OptimizedFeature-B76Ba1pI.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-BcOiYsrc.js";import"./CIMSymbolHelper-DYmhbAMl.js";import"./BidiEngine-BvER9tXK.js";import"./labelPoint-BUZ7IXM6.js";import"./GeometryUtils-Dq7aIsfM.js";import"./rasterizingUtils-DVUCc27c.js";import"./Rect-CUzevAry.js";import"./GraphShaderModule-BDpdqk92.js";import"./FramebufferObject-BMDyAkkk.js";import"./ShaderBuilder-Bt8kQQVc.js";import"./UpdateTracking2D-CN-5kEWt.js";import"./utils-MmjDI0gv.js";import"./constants-BBnGEY1d.js";import"./streamLayerUtils-DFlbJ4P1.js";import"./QueueProcessor-DvNK5IJW.js";import"./utils-DDjZAYSk.js";import"./layerViewUtils-C0VO4f2j.js";import"./AGraphicContainer-6rfp4rpy.js";import"./TechniqueInstance-BQwnrHVq.js";import"./TileContainer-BI3deLxa.js";import"./OverrideHelper-DfOydQHj.js";import"./colorUtils-tWDId3ga.js";import"./callExpressionWithFeature-B6K_mnjq.js";import"./quantizationUtils-C4h4Tggy.js";import"./AttributeStore-Cc3nFPHX.js";import"./FeatureStoreQueryAdapter-DZjH9xpN.js";import"./queryUtils-BuJwL4AF.js";import"./timeSupport-DXzOPMkX.js";import"./FeatureMetadata-DLLKy1ha.js";import"./normalizeUtilsSync-C_1TlXDO.js";import"./dehydratedFeatures-CfzzCJTP.js";const T=2;class ue extends le{constructor(t){super(),this.element=t,this._handles=new I,this.isWrapAround=!1,this.perspectiveTransform=X(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(B(()=>this.element,()=>{const i=this.element;this.ready(),i&&this._handles.add(J(i,"play",()=>this.requestRender()))},c))}getMesh(t){throw new Error("Method not implemented.")}destroy(){super.destroy(),this._handles.destroy(),this.texture=N(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const i=this.element;if(i==null)return;const{context:n}=t,{videoWidth:o,videoHeight:r}=i;if(o!==0&&r!==0){if(this.texture)i.paused||t.animationsEnabled&&this.texture.setData(i);else{const s=new Z(o,r);s.wrapMode=33071,s.preMultiplyAlpha=!0,this.texture=new K(n,s,i)}i.paused||this.texture.generateMipmap(),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,i,n,o){const r=this.element,s=this._getFrameInfo();if(!r||!s)return;const{spatialReference:l}=n;this._initializeData(t,s,l);const{controlPoints:h,horizon:m}=s,y=Math.sqrt(h.length),a=y,{x:p,y:d}=t,f=this._vertices,O=h[0],k=h[y-1],j=h[(a-1)*y],Y=h[(a-1)*y+y-1],G=S(m?m[0].mapPoint:O.mapPoint,l),P=S(m?m[1].mapPoint:k.mapPoint,l),_=S(j.mapPoint,l),A=S(Y.mapPoint,l);this.clipGeometry=m?new he({geometry:Q.fromJSON({rings:[[[_.x,_.y],[A.x,A.y],[P.x,P.y],[G.x,G.y],[_.x,_.y]]],spatialReference:l})}):null;for(let b=0;b<h.length;b++){const D=h[b],{sourcePoint:M,mapPoint:$}=D;if(M==null||$==null)continue;const v=S($,l);f[b*T+0]=v.x-p,f[b*T+1]=v.y-d}let E=i;if(o){const b=Math.min(G.x,P.x,_.x,A.x),D=Math.max(G.x,P.x,_.x,A.x),{worldWidth:M,xBounds:$}=o,[v,H]=$;b<v&&D>v?E=M:D>H&&b<H&&(E=-M)}this.wrapAroundShift=E,this.isWrapAround=E!==0}draw(t,i){if(this.visible){if(!(this.isReady&&this._vertices&&this._indices&&this._texCoords))return void this.requestRender();this.stage||console.warn("OverlayMultipoint: stage is null"),i.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})}}_initializeData(t,i,n){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:o}=i,r=Math.sqrt(o.length),s=r,l=new Float32Array(T*o.length),h=new Uint16Array(2*o.length);for(let a=0;a<o.length;a++){const p=o[a],{sourcePoint:d,mapPoint:f}=p;if(d==null||f==null)continue;const O=S(f,n);l[a*T+0]=O.x-t.x,l[a*T+1]=O.y-t.y,h[2*a+0]=d.x,h[2*a+1]=d.y}const m=new Uint16Array(s*r+(s-2)*(r+2));let y=0;for(let a=0;a<s;a++){for(let p=0;p<r;p++)m[y++]=a*r+p,m[y++]=(a+1)*r+p;a<s-2&&(m[y++]=(a+1)*r+(r-1),m[y++]=(a+1)*r)}this._vertices=l,this._texCoords=h,this._indices=m}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),i=this.frameHorizonPoints;let n=null;if(i){const o=i.startX,r=i.startY,s=i.endX,l=i.endY;n=[new F({sourcePoint:V(o,r),mapPoint:new z(i.startLongitude,i.startLatitude)}),new F({sourcePoint:V(s,l),mapPoint:new z(i.endLongitude,i.endLatitude)})]}return{controlPoints:t,horizon:n}}_getFrameControlPoints(){const t=this.groundControlPoints,i=t==null?void 0:t.length;if(!i)return[];const n=new Array(i),o=Math.max(...t.map(({x:s})=>s)),r=this.element.videoWidth/o;for(let s=0;s<i;s++){const{x:l,y:h,lat:m,lon:y}=t[s];n[s]=new F({sourcePoint:V(l*r,-h*r),mapPoint:new z(y,m)})}return n}}const C=new te([255,127,0]),de=10005,fe=10018;let g=class extends me(ce){constructor(){super(...arguments),this._graphicsLayer=new se,this._frameOutlineGraphic=new L({symbol:new ee({outline:{type:"simple-line",color:C}})}),this._frameCenterGraphic=new L({symbol:new R({color:C,style:"cross"})}),this._sensorTrailGraphic=new L({symbol:new W({color:C})}),this._sensorSightlineGraphic=new L({symbol:new W({color:C})}),this._sensorLocationGraphic=new L({symbol:new R({color:C})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=q(this._graphicsLayer)}initialize(){var e,t,i,n,o,r,s;this._sensorLocationSymbolType=(e=this.layer)==null?void 0:e.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new U({frame:((t=this.layer.telemetryDisplay)==null?void 0:t.frame)??!1,frameCenter:((i=this.layer.telemetryDisplay)==null?void 0:i.frameCenter)??!0,frameOutline:((n=this.layer.telemetryDisplay)==null?void 0:n.frameOutline)??!0,lineOfSight:((o=this.layer.telemetryDisplay)==null?void 0:o.lineOfSight)??!0,sensorLocation:((r=this.layer.telemetryDisplay)==null?void 0:r.sensorLocation)??!0,sensorTrail:((s=this.layer.telemetryDisplay)==null?void 0:s.sensorTrail)??!0})}attach(){this._overlayContainer=new ae,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new pe({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new ye(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([u(()=>{var e,t,i,n,o,r;return[(e=this.layer.telemetryDisplay)==null?void 0:e.frame,(t=this.layer.telemetryDisplay)==null?void 0:t.frameCenter,(i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline,(n=this.layer.telemetryDisplay)==null?void 0:n.sensorLocation,(o=this.layer.telemetryDisplay)==null?void 0:o.sensorTrail,(r=this.layer.telemetryDisplay)==null?void 0:r.lineOfSight]},()=>this._updateVisibleTelemetryElements(),c),u(()=>{var e,t,i,n,o;return[this.layer.telemetry,(e=this.visibleTelemetryElements)==null?void 0:e.frameCenter,(t=this.visibleTelemetryElements)==null?void 0:t.frameOutline,(i=this.visibleTelemetryElements)==null?void 0:i.sensorLocation,(n=this.visibleTelemetryElements)==null?void 0:n.sensorTrail,(o=this.visibleTelemetryElements)==null?void 0:o.lineOfSight]},()=>this._updateGraphicGeometries(),c),u(()=>this.layer.metadata,()=>this._updateSensorLocationSymbolAngle(),c),u(()=>{var e;return(e=this.layer)==null?void 0:e.frameCenterSymbol},()=>this._updateFrameCenterSymbol(),c),u(()=>{var e;return(e=this.layer)==null?void 0:e.frameOutlineSymbol},()=>this._updateFrameOutlineSymbol(),c),u(()=>{var e;return(e=this.layer)==null?void 0:e.sensorSightLineSymbol},()=>this._updateSensorSightlineSymbol(),c),u(()=>{var e;return(e=this.layer)==null?void 0:e.sensorSymbol},()=>this._updateSensorLocationSymbol(),c),u(()=>{var e;return(e=this.layer)==null?void 0:e.sensorTrailSymbol},()=>this._updateSensorTrailSymbol(),c),u(()=>this.symbolAngle,()=>this._updateSensorLocationSymbol(),c)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=q(this.graphicsView)}supportsSpatialReference(e){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.view.animationsEnabled&&this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){if(!this.view.animationsEnabled)return;const{telemetry:e}=this.layer,{visibleTelemetryElements:t}=this;e&&t&&(t.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&e.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,t.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){var r,s,l,h,m,y,a,p,d,f;if(!this.view.animationsEnabled||!((s=(r=this.layer)==null?void 0:r.metadata)!=null&&s.size))return;const{source:e,symbolOffset:t=0}=this.layer.sensorSymbolOrientation||{};if(!e&&!t)return;const i=((m=(h=(l=this.layer)==null?void 0:l.metadata)==null?void 0:h.get(de))==null?void 0:m.value)??0,n=((p=(a=(y=this.layer)==null?void 0:y.metadata)==null?void 0:a.get(fe))==null?void 0:p.value)??0,o=oe({cameraAzimuth:n,platformHeading:i,source:(d=this.layer.sensorSymbolOrientation)==null?void 0:d.source,symbolOffset:((f=this.layer.sensorSymbolOrientation)==null?void 0:f.symbolOffset)??0});this.symbolAngle=Math.round(Math.abs(o))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case"simple-marker":this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case"picture-marker":this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case"cim":this.sensorLocationSymbol=this.layer.sensorSymbol,ne(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){var e;(e=this.layer)!=null&&e.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){var e;(e=this.layer)!=null&&e.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){var e;(e=this.layer)!=null&&e.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){var e;(e=this.layer)!=null&&e.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const e=new ue(this.layer.videoElement);this.addAttachHandles([u(()=>{var t;return[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,(t=this.layer.telemetryDisplay)==null?void 0:t.frame]},()=>{if(!this.view.animationsEnabled)return;const{visibleTelemetryElements:t}=this;e.frameHorizonPoints=this.layer.frameHorizonPoints,e.groundControlPoints=this.layer.groundControlPoints,e.opacity=this.layer.frameOpacity,e.visible=(t==null?void 0:t.frame)??!1},c)]),this._overlayContainer.addChild(e),this.view.stage.requestRender()}};w([x()],g.prototype,"graphicsView",void 0),w([x()],g.prototype,"layer",void 0),w([x({types:ie})],g.prototype,"sensorLocationSymbol",void 0),w([x()],g.prototype,"symbolAngle",void 0),w([x({type:U})],g.prototype,"visibleTelemetryElements",void 0),g=w([re("esri.views.2d.layers.VideoLayerView2D")],g);const vt=g;export{vt as default};
