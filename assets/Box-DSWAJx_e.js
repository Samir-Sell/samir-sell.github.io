import{a6 as ot,gm as A,a8 as j,a_ as P,a9 as G,f1 as at,gl as E,gn as ht,iq as ct,go as nt,gp as lt,cD as pt,fn as _t,fp as T,fr as F,bb as H,b9 as ut,cL as dt,dc as C,df as gt,cF as V,dd as mt,gk as vt,j as L,D as d,F as g,Z as yt}from"./index-DalZQxea.js";import{d as ft}from"./quantityUtils-NpVvMBrH.js";import{i as Gt,n as bt,c as xt,R as wt}from"./rotate-C-nQZMvp.js";import{x as w,M as $,U as St,b as kt}from"./drawUtils-DLmbOmVR.js";import{l as Rt,j as Mt}from"./GraphicMover-BOkC7yrU.js";import{t as Ct}from"./SketchViewModel-BckF7YpR.js";import{h as Ht}from"./settings-BPVxA2Jj.js";import{g as q}from"./hitTestSelectUtils-3vNvlVa7.js";import{s as It,e as Ot,a as Tt}from"./ExtentScaleTooltipInfo-CxFrwuSH.js";import{i as Lt}from"./TranslateTooltipInfo-p_kFbHUU.js";import"./MeshTransform-BNGVOqnj.js";import"./quat-BaciLHWA.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-vQp7uWX3.js";import"./meshVertexSpaceUtils-C6NjK3-P.js";import"./MeshLocalVertexSpace-CS1cHWTK.js";import"./elevationInfoUtils-DTZwRj2r.js";import"./unitFormatUtils-BvkWBIbR.js";import"./getDefaultUnitForView-CEfrxqRf.js";import"./angularMeasurementUtils-DmsWW2r1.js";import"./projectVectorToVector-BROSRFZx.js";import"./projectPointToVector-BiWrznA3.js";import"./geodesicUtils-DyxH3shS.js";import"./GraphicManipulator-Da_VmOaZ.js";import"./drapedUtils-DSmjGbg-.js";import"./GraphicsLayer-C1pBo3gS.js";import"./layerViewUtils-BaP6ELkx.js";import"./geodeticLengthOperator-BGJx5CL8.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./plane-BkCOrVa_.js";import"./vectorStacks-88v4nYBZ.js";import"./triangle-B5V0TVLH.js";import"./sphere-DckgZiOJ.js";import"./lineSegment-C4xQp5au.js";import"./spatialReferenceEllipsoidUtils-C1Kj_TYX.js";function Et(t,i,e,s){const r=[];for(const o of t){const a=o.slice();r.push(a);const c=i*(o[0]-s.x)-e*(o[1]-s.y)+s.x,h=e*(o[0]-s.x)+i*(o[1]-s.y)+s.y;a[0]=c,a[1]=h}return r}function $t(t,i,e,s){const r=[s.x,s.y];if(ht(t)){const o=[...t];return ct(o,o,r,e)}return nt(t)?Gt(t,r,e):lt(t)?bt(t,r,e):i?xt(i,t,r,e):t}function Z(t,i,e,s){const r=[];for(const o of t){const a=[],c=s&&o.length>0&&at(E(o[0]),E(o.at(-1)));for(let h=0;h<o.length;h++){const n=o[h],l=h>0?E(o[h-1]):void 0;a.push($t(n,l,i,e))}c&&(a[0]=[...E(a.at(-1))]),r.push(a)}return r}function zt({spatialReference:t,xmin:i,ymin:e,ymax:s,xmax:r}){return new P({spatialReference:t??void 0,hasM:!1,hasZ:!1,rings:[[[i,e],[i,s],[r,s],[r,e],[i,e]]]})}function z(t,i,e){const{hasM:s,hasZ:r,spatialReference:o,type:a}=t,c=i*Math.PI/180,h=Math.cos(c),n=Math.sin(c);switch(a){case"point":return e=e??t,new G({x:h*(t.x-e.x)-n*(t.y-e.y)+e.x,y:n*(t.x-e.x)+h*(t.y-e.y)+e.y,z:t.z,m:t.m,spatialReference:o});case"extent":case"polygon":{t=a==="extent"?zt(t):t,e=e??t.extent.center;const l=A(t),m=Z(t.curveRings??t.rings,c,e,!0);return new P({spatialReference:o,hasZ:t.hasZ,hasM:t.hasM,curveRings:l?m:void 0,rings:l?void 0:m})}case"polyline":{e=e??t.extent.center;const l=A(t),m=Z(t.curvePaths??t.paths,c,e,!1);return new j({hasZ:r,hasM:s,spatialReference:o,curvePaths:l?m:void 0,paths:l?void 0:m})}case"multipoint":return e??(e=t.extent.center),new ot({hasM:s,hasZ:r,points:Et(t.points,h,n,e),spatialReference:o})}return null}const u=Ht.transformGraphics,Bt={centerIndicator:new T({style:"cross",size:u.center.size,color:u.center.color}),fill:{default:new F({color:u.fill.color,outline:{color:u.fill.outlineColor,join:"round",width:1}}),active:new F({color:u.fill.stagedColor,outline:{color:u.fill.outlineColor,join:"round",style:"dash",width:1}})},handles:{default:new T({style:"square",size:u.vertex.size,color:u.vertex.color,outline:{color:u.vertex.outlineColor,width:1}}),hover:new T({style:"square",size:u.vertex.hoverSize,color:u.vertex.hoverColor,outline:{color:u.vertex.hoverOutlineColor,width:1}})},rotator:{default:new T({style:"circle",size:u.vertex.size,color:u.vertex.color,outline:{color:u.vertex.outlineColor,width:1}}),hover:new T({style:"circle",size:u.vertex.hoverSize,color:u.vertex.hoverColor,outline:{color:u.vertex.hoverOutlineColor,width:1}})},rotatorLine:new _t({color:u.line.color,width:1})},Y=Symbol();let _=class extends pt{constructor(t){super(t),this._activeHandleGraphic=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._centerGraphic=null,this._backgroundGraphic=null,this._vertexGraphics=[],this._rotateHandleGraphic=null,this._rotateGraphicOffset=20,this._angleOfRotation=0,this._rotateLineGraphic=null,this._startInfo=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this.tooltip=null,this.type="box",this.callbacks={onMoveStart(){},onMove(){},onMoveStop(){},onScaleStart(){},onScale(){},onScaleStop(){},onRotateStart(){},onRotate(){},onRotateStop(){},onGraphicClick(){}},this.enableMovement=!0,this.enableRotation=!0,this.enableScaling=!0,this.graphics=[],this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.preserveAspectRatio=!1,this.showCenterGraphic=!0,this.symbols=Bt,this.sketchOptions=new q,this.view=null,this._getBounds=(()=>{const i=H();return(e,s)=>{e[0]=Number.POSITIVE_INFINITY,e[1]=Number.POSITIVE_INFINITY,e[2]=Number.NEGATIVE_INFINITY,e[3]=Number.NEGATIVE_INFINITY;for(const r of s){if(!r)continue;let o,a,c,h;r.type==="point"?(o=c=r.x,a=h=r.y):r.type==="extent"?[o,a,c,h]=[r.xmin,r.ymin,r.xmax,r.ymax]:[o,a,c,h]=ut(i,r),e[0]=Math.min(o,e[0]),e[1]=Math.min(a,e[1]),e[2]=Math.max(c,e[2]),e[3]=Math.max(h,e[3])}return e}})()}initialize(){const t=this.view;this._highlightHelper=new Rt({view:t}),this._setup(),this.addHandles([dt(()=>t==null?void 0:t.ready,()=>{const{layer:i,view:e}=this;Ct(e,i)},{once:!0,initial:!0}),C(()=>this.preserveAspectRatio,()=>{this._activeHandleGraphic&&(this._scaleGraphic(this._activeHandleGraphic),this._updateGraphics(),this._updateTooltip(this._activeHandleGraphic))}),C(()=>t==null?void 0:t.scale,()=>{this._updateRotateGraphic(),this._updateRotateLineGraphic()}),C(()=>this.graphics,()=>this.refresh()),C(()=>this.layer,(i,e)=>{e&&this._resetGraphics(e),this.refresh()}),C(()=>[this.highlightsEnabled,this.highlightName],()=>{var i;(i=this._highlightHelper)==null||i.removeAll(),this._setUpHighlights()}),C(()=>this.sketchOptions.tooltips.effectiveEnabled,i=>{this.tooltip=i?wt(()=>({view:t,options:this.sketchOptions.tooltips})):V(this.tooltip)},gt),C(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),mt),this.on("move-start",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onMoveStart)==null?void 0:s.call(e,i)}),this.on("move",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onMove)==null?void 0:s.call(e,i)}),this.on("move-stop",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onMoveStop)==null?void 0:s.call(e,i)}),this.on("rotate-start",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onRotateStart)==null?void 0:s.call(e,i)}),this.on("rotate",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onRotate)==null?void 0:s.call(e,i)}),this.on("rotate-stop",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onRotateStop)==null?void 0:s.call(e,i)}),this.on("scale-start",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onScaleStart)==null?void 0:s.call(e,i)}),this.on("scale",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onScale)==null?void 0:s.call(e,i)}),this.on("scale-stop",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onScaleStop)==null?void 0:s.call(e,i)})])}destroy(){this._reset(),this.tooltip=V(this.tooltip)}get state(){var e;const t=((e=this.view)==null?void 0:e.ready)??!1,i=this.graphics.length&&this.layer;return t&&i?"active":t?"ready":"disabled"}isUIGraphic(t){return this._vertexGraphics.includes(t)||t===this._backgroundGraphic||t===this._centerGraphic||t===this._rotateHandleGraphic||t===this._rotateLineGraphic}move(t,i){if(this._mover&&this.graphics.length){for(const e of this.graphics){const s=e.geometry,r=w(s,t,i,this.view);e.geometry=r}this.refresh(),this.emit("move-stop",{graphics:this.graphics,mover:null,dx:t,dy:i,type:"move-stop"})}}scale(t,i){if(!this._mover||!this.graphics.length)return;const e=this._getBoxBounds(H()),s=vt(e);for(const r of this.graphics){const o=r.geometry,a=$(o,t,i,s);r.geometry=a}this.refresh(),this.emit("scale-stop",{graphics:this.graphics,mover:null,xScale:t,yScale:i,type:"scale-stop"})}rotate(t,i){if(this._mover&&this.graphics.length){if(!i){const e=this._vertexGraphics[1].geometry.x,s=this._vertexGraphics[3].geometry.y;i=new G(e,s,this.view.spatialReference)}for(const e of this.graphics){const s=e.geometry,r=z(s,t,i);e.geometry=r}this.refresh(),this.emit("rotate-stop",{graphics:this.graphics,mover:null,angle:t,type:"rotate-stop"})}}refresh(){this._reset(),this._setup()}reset(){this.graphics=[]}_setup(){this.state==="active"&&(this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._updateGraphics())}_reset(){var t,i;(t=this._highlightHelper)==null||t.removeAll(),this._resetGraphicStateVars(),this._resetGraphics(),this._updateTooltip(),(i=this._mover)==null||i.destroy(),this._mover=null,this.removeHandles(Y)}_resetGraphicStateVars(){this._startInfo=null,this._activeHandleGraphic=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this._angleOfRotation=0}_resetGraphics(t){(t=t||this.layer)&&(t.removeMany(this._vertexGraphics),t.remove(this._backgroundGraphic),t.remove(this._centerGraphic),t.remove(this._rotateHandleGraphic),t.remove(this._rotateLineGraphic)),this._vertexGraphics.forEach(i=>!i.destroyed&&i.destroy()),!this._backgroundGraphic.destroyed&&this._backgroundGraphic.destroy(),!this._centerGraphic.destroyed&&this._centerGraphic.destroy(),!this._rotateHandleGraphic.destroyed&&this._rotateHandleGraphic.destroy(),!this._rotateLineGraphic.destroyed&&this._rotateLineGraphic.destroy(),this._vertexGraphics=[],this._backgroundGraphic=null,this._centerGraphic=null,this._rotateHandleGraphic=null,this._rotateLineGraphic=null}_setupMover(){let t=[];this.enableScaling&&(t=t.concat(this._vertexGraphics)),this.enableRotation&&t.push(this._rotateHandleGraphic),this.enableMovement&&(t=t.concat(this.graphics,this._backgroundGraphic)),this.showCenterGraphic&&t.push(this._centerGraphic),this._mover=new Mt({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,view:this.view,graphics:t,callbacks:{onGraphicClick:i=>this._onGraphicClickCallback(i),onGraphicMoveStart:i=>this._onGraphicMoveStartCallback(i),onGraphicMove:i=>this._onGraphicMoveCallback(i),onGraphicMoveStop:i=>this._onGraphicMoveStopCallback(i),onGraphicPointerOver:i=>this._onGraphicPointerOverCallback(i),onGraphicPointerOut:i=>this._onGraphicPointerOutCallback(i)}})}_setCursor(t){this.addHandles(this.view.acquireCursor(t,"high"),Y)}_getStartInfo(t){const[i,e,s,r]=this._getBoxBounds(H()),o=Math.abs(s-i),a=Math.abs(r-e),c=(s+i)/2,h=(r+e)/2,{x:n,y:l}=t.geometry;return{width:o,height:a,centerX:c,centerY:h,startX:n,startY:l,graphicInfos:this._getGraphicInfos(),box:this._backgroundGraphic.geometry,rotate:this._rotateHandleGraphic.geometry}}_getGraphicInfos(){return this.graphics.map(t=>this._getGraphicInfo(t))}_getGraphicInfo(t){const i=t.geometry,[e,s,r,o]=this._getBounds(H(),[i]);return{width:Math.abs(r-e),height:Math.abs(o-s),centerX:(r+e)/2,centerY:(o+s)/2,geometry:i}}_onGraphicClickCallback(t){t.viewEvent.stopPropagation(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t)}_onGraphicMoveStartCallback(t){const{_angleOfRotation:i,_xScale:e,_yScale:s,_backgroundGraphic:r,_vertexGraphics:o,_rotateHandleGraphic:a,symbols:c,graphics:h}=this,{graphic:n,dx:l,dy:m,viewEvent:f}=t;this._resetGraphicStateVars(),this._hideGraphicsBeforeUpdate(),r.symbol=c.fill.active,this._startInfo=this._getStartInfo(n),this._updateTooltip(n,f),n===a?(this._setCursor("grabbing"),this.emit("rotate-start",{type:"rotate-start",mover:n,graphics:h,angle:i})):o.includes(n)?(this._activeHandleGraphic=n,this.emit("scale-start",{type:"scale-start",mover:n,graphics:h,xScale:e,yScale:s})):this.emit("move-start",{type:"move-start",graphics:h,mover:n,dx:l,dy:m})}_onGraphicMoveCallback(t){const i=t.graphic;if(!this._startInfo)return;const{_xScale:e,_yScale:s,_angleOfRotation:r,graphics:o}=this;if(this._vertexGraphics.includes(i))this._scaleGraphic(i),this._updateTooltip(i,t.viewEvent),this.emit("scale",{type:"scale",graphics:o,mover:i,xScale:e,yScale:s});else if(i===this._rotateHandleGraphic)this._rotateGraphic(i),this._updateTooltip(i,t.viewEvent),this.emit("rotate",{type:"rotate",graphics:o,mover:i,angle:r});else{const{dx:a,dy:c}=t;this._totalDx+=a,this._totalDy+=c,this._moveGraphic(i,a,c),this._updateTooltip(i,t.viewEvent),this.emit("move",{type:"move",graphics:o,mover:i,dx:a,dy:c})}}_onGraphicMoveStopCallback(t){const i=t.graphic;if(!this._startInfo)return void this.refresh();const{_angleOfRotation:e,_totalDx:s,_totalDy:r,_xScale:o,_yScale:a,_vertexGraphics:c,_rotateHandleGraphic:h,graphics:n}=this;this.refresh(),i===h?(this._setCursor("pointer"),this.emit("rotate-stop",{type:"rotate-stop",graphics:n,mover:i,angle:e})):c.includes(i)?this.emit("scale-stop",{type:"scale-stop",mover:i,graphics:n,xScale:o,yScale:a}):this.emit("move-stop",{type:"move-stop",graphics:n,mover:i,dx:s,dy:r})}_onGraphicPointerOverCallback(t){const{_backgroundGraphic:i,_vertexGraphics:e,graphics:s,_rotateHandleGraphic:r,symbols:o,view:a}=this,c=t.graphic;if(this._hoveredGraphic=c,c===r)return r.symbol=o.rotator.hover,this._setCursor("pointer"),void this._updateTooltip(c);if(s.includes(c)||c===i)return void this._setCursor("move");if(!e.includes(c))return void this._setCursor("pointer");this._updateTooltip(c),t.graphic.symbol=o.handles.hover;const h=a.rotation;let n,l=t.index;switch(l<8&&(h>=0&&h<45?l%=8:l=h>=45&&h<90?(l+1)%8:h>=90&&h<135?(l+2)%8:h>=135&&h<180?(l+3)%8:h>=180&&h<225?(l+4)%8:h>=225&&h<270?(l+5)%8:h>=270&&h<315?(l+6)%8:(l+7)%8),l){case 0:case 4:n="nwse-resize";break;case 1:case 5:n="ns-resize";break;case 2:case 6:n="nesw-resize";break;case 3:case 7:n="ew-resize";break;default:n="pointer"}this._setCursor(n)}_onGraphicPointerOutCallback(t){const{_vertexGraphics:i,_rotateHandleGraphic:e,symbols:s}=this;this._hoveredGraphic=null,t.graphic===e?e.symbol=s.rotator.default:i.includes(t.graphic)&&(t.graphic.symbol=s.handles.default),this.removeHandles(Y),this._updateTooltip()}_scaleGraphic(t){const{_startInfo:i,_vertexGraphics:e,preserveAspectRatio:s,view:r}=this,{centerX:o,centerY:a,graphicInfos:c,height:h,startX:n,startY:l,width:m}=i,{resolution:f,transform:p}=r.state,v=e.indexOf(t);v!==1&&v!==5||this._updateX(t,o),v!==3&&v!==7||this._updateY(t,a);const{x:k,y:O}=t.geometry,J=p[0]*k+p[2]*O+p[4],K=p[1]*k+p[3]*O+p[5],R=(c==null?void 0:c.map(y=>y.geometry))??[],Q=R.every(y=>y.type==="point");if((m===0||h===0)&&Q){const y=I((k-n)/f),b=I((l-O)/f);for(let S=0;S<R.length;S++)this.graphics[S].geometry=w(R[S],y,b,r,!0);return this._centerGraphic.geometry=new G(k,O,r.spatialReference),void(this._backgroundGraphic.geometry=w(i.box,y,b,r,!0))}if(s){const y=I(p[0]*o+p[2]*a+p[4],2),b=I(p[1]*o+p[3]*a+p[5],2),S=I(p[0]*n+p[2]*l+p[4],2),B=I(p[1]*n+p[3]*l+p[5],2);let x=St(y,b,S,B,J,K);x!==0&&Math.abs(x)!==1/0||(x=1),this._xScale=this._yScale=x;for(const M of R){const N=R.indexOf(M);this.graphics[N].geometry=$(M,this._xScale,this._yScale,[o,a])}this._updateBackgroundGraphic()}else{let y=k-n,b=l-O;if(v===1||v===5?y=0:v!==3&&v!==7||(b=0),y===0&&b===0)return;const S=o+y/2,B=a+b/2;let x=(m+(n>o?y:-1*y))/m,M=(h+(l<a?b:-1*b))/h;v!==1&&v!==5&&x!==0&&Math.abs(x)!==1/0||(x=1),v!==3&&v!==7&&M!==0&&Math.abs(M)!==1/0||(M=1),this._xScale=x,this._yScale=M;const N=(S-o)/f,W=(B-a)/f,tt=$(i.box,this._xScale,this._yScale);this._backgroundGraphic.geometry=w(tt,N,W,r,!0);const{centerX:U,centerY:D}=this._getGraphicInfo(this._backgroundGraphic),et=(U-o)/f,it=-1*(D-a)/f;for(const X of R){const st=R.indexOf(X),rt=$(X,this._xScale,this._yScale,[o,a]);this.graphics[st].geometry=w(rt,et,it,r,!0)}this._centerGraphic.geometry=new G(U,D,r.spatialReference)}}_rotateGraphic(t){var f;const{centerX:i,centerY:e,startX:s,startY:r,box:o,rotate:a}=this._startInfo,c=this.view.spatialReference,h=new G(s,r,c),n=new G(i,e,c),l=t.geometry;this._angleOfRotation=kt(h,l,n);const m=((f=this._startInfo.graphicInfos)==null?void 0:f.map(p=>p.geometry))??[];for(const p of m){const v=m.indexOf(p),k=z(p,this._angleOfRotation,n);this.graphics[v].geometry=k}this._backgroundGraphic.geometry=z(o,this._angleOfRotation,n),this._rotateHandleGraphic.geometry=z(a,this._angleOfRotation,n)}_moveGraphic(t,i,e){if(this.graphics.includes(t)){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=w(s,i,e,this.view);for(const r of this.graphics)r!==t&&(r.geometry=w(r.geometry,i,e,this.view))}else if(t===this._centerGraphic){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=w(s,i,e,this.view)}if(t===this._backgroundGraphic||t===this._centerGraphic)for(const s of this.graphics)s.geometry=w(s.geometry,i,e,this.view)}_setUpHighlights(){var t;this.highlightsEnabled&&this.graphics.length&&((t=this._highlightHelper)==null||t.add(this.graphics,this.highlightName))}_setupGraphics(){const{_graphicAttributes:t,symbols:i}=this;this._centerGraphic=new L({symbol:i.centerIndicator,attributes:t}),this.showCenterGraphic&&this.layer.add(this._centerGraphic),this._backgroundGraphic=new L({symbol:i.fill.default,attributes:t}),this.layer.add(this._backgroundGraphic),this._rotateLineGraphic=new L({symbol:i.rotatorLine,attributes:t}),this._rotateHandleGraphic=new L({symbol:i.rotator.default,attributes:t}),this.enableRotation&&!this._hasExtentGraphic()&&this.layer.addMany([this._rotateLineGraphic,this._rotateHandleGraphic]);for(let e=0;e<8;e++)this._vertexGraphics.push(new L({symbol:i.handles.default,attributes:t}));this.enableScaling&&this.layer.addMany(this._vertexGraphics)}_updateSymbolsForTheme(){var i,e;const t=this.view.effectiveTheme.accentColor;this.symbols={...this.symbols,fill:{active:(i=this.symbols.fill.active)==null?void 0:i.clone().set("outline.color",t),default:(e=this.symbols.fill.default)==null?void 0:e.clone().set("outline.color",t)},handles:{...this.symbols.handles,default:this.symbols.handles.default.clone().set("outline.color",t)},rotator:{...this.symbols.rotator,default:this.symbols.rotator.default.clone().set("outline.color",t)},rotatorLine:this.symbols.rotatorLine.clone().set("color",t)};for(const s of this._vertexGraphics)s.symbol=s===this._hoveredGraphic?this.symbols.handles.hover:this.symbols.handles.default;this._backgroundGraphic.symbol=this.symbols.fill.default,this._rotateHandleGraphic.symbol=this._rotateHandleGraphic===this._hoveredGraphic?this.symbols.rotator.hover:this.symbols.rotator.default,this._rotateLineGraphic.symbol=this.symbols.rotatorLine}_updateGraphics(){this._updateBackgroundGraphic(),this._updateHandleGraphics(),this._updateCenterGraphic(),this._updateRotateGraphic(),this._updateRotateLineGraphic()}_hideGraphicsBeforeUpdate(){this._centerGraphic.visible=!1,this._rotateHandleGraphic.visible=!1,this._rotateLineGraphic.visible=!1,this._vertexGraphics.forEach(t=>t.visible=!1)}_updateHandleGraphics(){const t=this._getCoordinates(!0);this._vertexGraphics.forEach((i,e)=>{const[s,r]=t[e];this._updateXY(i,s,r)})}_updateBackgroundGraphic(){const t=this._getCoordinates().map(([i,e])=>[i,e]);this._backgroundGraphic.geometry=new P({rings:[t],spatialReference:this.view.spatialReference})}_updateCenterGraphic(){const[t,i,e,s]=this._getBoxBounds(H()),r=(e+t)/2,o=(s+i)/2;this._centerGraphic.geometry=new G(r,o,this.view.spatialReference)}_updateRotateGraphic(){if(!this._vertexGraphics.length)return;const{x:t,y:i}=this._vertexGraphics[1].geometry,e=i+this.view.state.resolution*this._rotateGraphicOffset;this._rotateHandleGraphic.geometry=new G(t,e,this.view.spatialReference)}_updateRotateLineGraphic(){var e;if(!this._vertexGraphics.length||!((e=this._rotateHandleGraphic)!=null&&e.geometry))return;const t=this._vertexGraphics[1].geometry,i=this._rotateHandleGraphic.geometry;this._rotateLineGraphic.geometry=new j({paths:[[[t.x,t.y],[i.x,i.y]]],spatialReference:this.view.spatialReference})}_updateXY(t,i,e){t.geometry=new G(i,e,this.view.spatialReference)}_updateX(t,i){const e=t.geometry.y;t.geometry=new G(i,e,this.view.spatialReference)}_updateY(t,i){const e=t.geometry.x;t.geometry=new G(e,i,this.view.spatialReference)}_hasExtentGraphic(){return this.graphics.some(t=>(t==null?void 0:t.geometry)!=null&&t.geometry.type==="extent")}_getBoxBounds(t){const i=this.graphics.map(e=>e.geometry);return this._getBounds(t,i)}_getCoordinates(t){const[i,e,s,r]=this._getBoxBounds(H());if(t){const o=(i+s)/2,a=(r+e)/2;return[[i,r],[o,r],[s,r],[s,a],[s,e],[o,e],[i,e],[i,a]]}return[[i,r],[s,r],[s,e],[i,e]]}_updateTooltip(t,i){if(this.tooltip==null)return;if(!t)return void this.tooltip.clear();const{_backgroundGraphic:e,graphics:s,_vertexGraphics:r,_rotateHandleGraphic:o}=this;t===o?this._updateRotateTooltip():r.includes(t)?this._updateScaleTooltip():(s.includes(t)||t===e)&&this._updateMoveTooltip(i)}_updateRotateTooltip(){this.tooltip!=null&&(this.tooltip.info=new It({sketchOptions:this.sketchOptions,angle:-this._angleOfRotation}))}_updateScaleTooltip(){const{tooltip:t,_xScale:i,_yScale:e,sketchOptions:s,view:r,automaticLengthMeasurementUtils:o}=this;if(t==null)return;const a=this._getCoordinates(),c=Ot({topLeft:a[0],topRight:a[1],bottomRight:a[2],bottomLeft:a[3],spatialReference:r.spatialReference,automaticLengthMeasurementUtils:o});if(c==null)return;const{xSize:h,ySize:n}=c,l=Math.abs(i),m=Math.abs(e);t.info=new Tt({sketchOptions:s,xScale:l,yScale:m,xSize:h,ySize:n})}_updateMoveTooltip(t){const{tooltip:i,sketchOptions:e,view:s,automaticLengthMeasurementUtils:r}=this;if(i==null)return;const o=new Lt({sketchOptions:e});if(t){const{x:a,y:c}=t.origin,h=s.toMap(t),n=s.toMap({x:a,y:c}),l=r.autoDistanceBetweenPoints2D(n,h);o.distance=l??ft}i.info=o}};function I(t,i=2){return Number.parseFloat(t.toFixed(i))}d([g()],_.prototype,"tooltip",void 0),d([g({readOnly:!0})],_.prototype,"type",void 0),d([g()],_.prototype,"callbacks",void 0),d([g()],_.prototype,"enableMovement",void 0),d([g()],_.prototype,"enableRotation",void 0),d([g()],_.prototype,"enableScaling",void 0),d([g()],_.prototype,"graphics",void 0),d([g()],_.prototype,"highlightName",void 0),d([g()],_.prototype,"highlightsEnabled",void 0),d([g()],_.prototype,"layer",void 0),d([g()],_.prototype,"preserveAspectRatio",void 0),d([g()],_.prototype,"showCenterGraphic",void 0),d([g({readOnly:!0})],_.prototype,"state",null),d([g()],_.prototype,"symbols",void 0),d([g({type:q})],_.prototype,"sketchOptions",void 0),d([g({constructOnly:!0})],_.prototype,"view",void 0),d([g({constructOnly:!0})],_.prototype,"automaticLengthMeasurementUtils",void 0),_=d([yt("esri.views.draw.support.Box")],_);const Ge=_;export{Ge as default};
