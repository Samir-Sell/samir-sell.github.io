import{cK as j,en as P,b as F,eC as R,ck as V,bp as A,m as $,I as G,H as L,ar as _,c4 as T,em as Q,ep as J,T as M,C as B,gJ as Z,gI as Y,N as H,ek as U,eq as W,q as K}from"./index-7LVg-iY6.js";import{e as z,n as X}from"./date-Ctp1FiBW.js";import{s as ee,e as te}from"./OptimizedFeature-B76Ba1pI.js";import{f as ie}from"./FeatureStore-2OjZ4dp_.js";import{f as ne}from"./queryUtils-BuJwL4AF.js";import{W as re}from"./QueryEngine-9udAKRU0.js";import{c as se}from"./number-CcyarVEV.js";import{n as oe}from"./locationUtils-M4sXmVSf.js";import"./memoryEstimations-OaiSRTQo.js";import"./featureConversionUtils-CFKvofkg.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BoundsStore-DVRBJden.js";import"./PooledRBush-DbDc20xx.js";import"./timeSupport-DXzOPMkX.js";import"./optimizedFeatureQueryEngineAdapter-BfxhLe6f.js";import"./WhereClauseCache-BEPEYZ8O.js";import"./WhereClause-ByEtKijn.js";import"./quantizationUtils-C4h4Tggy.js";import"./utils-By3dGP9r.js";import"./utils-Z5PohkhY.js";import"./utils-CTwd30qW.js";import"./ClassBreaksDefinition-LfDkloxb.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-CfZNXjbi.js";const b=/^\s*"([\S\s]*)"\s*$/,E=/""/g,S=`
`,ae=[","," ",";","|","	"];function*q(r,t,e){let i=0;for(;i<=r.length;){const n=r.indexOf(t,i),s=r.slice(i,n>-1?n:void 0);i+=s.length+t.length,e&&!s.trim()||(yield s)}}function C(r){const t=r.includes(`\r
`)?`\r
`:S;return q(r,t,!0)}function O(r,t){return q(r,t,!1)}function le(r,t,e){r=r.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...ae])).filter(o=>o!=null);for(const o of n){const c=N(r,o).length,u=N(t,o).length??c;c>1&&i.push({weight:Math.min(c,u),delimiter:o})}const s=i.sort(({weight:o},{weight:c})=>c-o).map(({delimiter:o})=>o);for(const o of s){const c=v(r,o).names,u=oe(c,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(u.longitudeFieldName&&u.latitudeFieldName)return{delimiter:o,locationInfo:u}}return{delimiter:s[0],locationInfo:null}}function*k(r,t,e,i=()=>Object.create(null)){const n=C(r);n.next();let s="",o="",c=0,u=i(),f=0;e:for(const h of n){const m=O(h,e);for(const y of m)if(s+=o+y,o="",c+=D(y),c%2==0){if(c>0){const g=b.exec(s);if(!g){u=i(),f=0,s="",c=0;continue e}u[t[f]]=g[1].replaceAll(E,'"'),f++}else u[t[f]]=s,f++;s="",c=0}else o=e;c===0?(yield u,u=i(),f=0):o=S}}function v(r,t){const e=N(r,t).filter(n=>n!=null),i=e.map(n=>j(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function N(r,t){if(!(r!=null&&r.length))return[];const e=[];let i="",n="",s=0;const o=O(r,t);for(const c of o)if(i+=n+c,n="",s+=D(c),s%2==0){if(s>0){const u=b.exec(i);u&&e.push(u[1].replaceAll(E,'"'))}else e.push(i);i="",s=0}else n=t;return e}function D(r){let t=0,e=0;for(e=r.indexOf('"',e);e>=0;)t++,e=r.indexOf('"',e+1);return t}function ce(r,t,e,i,n){const s=[],o=k(r,e,t),c=[];for(const u of o){if(c.length===10)break;c.push(u)}for(let u=0;u<e.length;u++){const f=e[u],h=i[u];if(f===n.longitudeFieldName||f===n.latitudeFieldName)s.push({name:f,type:"esriFieldTypeDouble",alias:h});else{let m;switch(ue(c.map(y=>y[f]))){case"integer":m="esriFieldTypeInteger";break;case"double":m="esriFieldTypeDouble";break;case"date":m="esriFieldTypeDate";break;default:m="esriFieldTypeString"}s.push({name:f,type:m,alias:h,length:P(m)})}}return s}function ue(r){if(!r.length)return"string";const t=/[^+\-.,0-9]/;return r.map(e=>{if(e!==""){if(!t.test(e)){let i=w(e);if(!isNaN(i))return/[.,]/.test(e)||!Number.isInteger(i)||i>214783647||i<-214783648?"double":"integer";if(e.includes("E")&&(i=Number(e),!Number.isNaN(i)||e.includes(",")&&(e=e.replace(",","."),i=Number(e),!Number.isNaN(i))))return"double"}return z(e)?"date":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}const w=function(){const r=se(),t=new RegExp("^"+r.regexp+"$"),e=new RegExp("["+r.group+"\\s\\xa0]","g"),i=r.factor;return n=>{const s=t.exec(n);if(r.factor=i,!s)return NaN;let o=s[1];if(!s[1]){if(!s[2])return NaN;o=s[2],r.factor*=-1}return o=o.replace(e,"").replace(r.decimal,"."),+o*r.factor}}();function fe(r){return JSON.parse(JSON.stringify(r))}const de=W("esriGeometryPoint"),me=["csv"],pe=[0,0];class he{constructor(t,e){this.x=t,this.y=e}}class Le{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var u;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((u=t==null?void 0:t.parsingOptions)==null?void 0:u.spatialReference)]),n=ye(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const s=this._createFeatures(i);this._queryEngine.featureStore.addMany(s);const{fullExtent:o,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=o,c){const{start:f,end:h}=c;n.layerDefinition.timeInfo.timeExtent=[f,h]}return n}async applyEdits(){throw new F("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(R)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),await this._queryEngine.executeQueryForSnapping(t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=V(this._snapshotFeatures),this._snapshotTask.promise.then(s=>{this._queryEngine.featureStore.clear(),s&&this._queryEngine.featureStore.addMany(s)},s=>{this._queryEngine.featureStore.clear(),A(s)||$.getLogger("esri.layers.CSVLayer").error(new F("csv-layer:refresh","An error occurred during refresh",{error:s}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new F("csv-layer:invalid-source","url not defined");const n=G(e);return(await L(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:s}=t.layerDefinition,o=new ie({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1}),c={type:"object-id",fieldName:e};return new re({fieldsIndex:_.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:T}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:s,featureIdInfo:c,spatialReference:n.spatialReference||{wkid:4326},featureStore:o})}_createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:s,spatialReference:o}=this._queryEngine;let c=[];const u=[],f=s.fields.filter(a=>a.name!==n).map(a=>a.name);let h=0;const m={};for(const a of s.fields)if(a.type!=="esriFieldTypeOID"&&a.type!=="esriFieldTypeGlobalID"){const p=Q(a);p!==void 0&&(m[a.name]=p)}const y=k(t,f,this._delimiter,J(m,n));for(const a of y){const p=this._parseCoordinateValue(a[e]),I=this._parseCoordinateValue(a[i]);if(I!=null&&p!=null&&!isNaN(p)&&!isNaN(I)){a[e]=p,a[i]=I;for(const l in a)if(l!==e&&l!==i)if(s.isDateField(l))a[l]=X(a[l]);else if(s.isNumericField(l)){const d=w(a[l]);isNaN(d)?a[l]=null:a[l]=d}else a[l]!=null&&(a[l]=fe(a[l]));a[n]=h,h++,c.push(new he(I,p)),u.push(a)}}if(!M({wkid:4326},o))if(B(o))for(const a of c)[a.x,a.y]=Z(a.x,a.y,pe);else c=Y(c,H.WGS84,o);const g=[];for(let a=0;a<c.length;a++){const{x:p,y:I}=c[a],l=u[a];l[n]=a+1,g.push(new ee(new te([],[p,I]),l,null,l[n]))}return g}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=w(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await ne(U,t)}catch{throw new F("csv-layer:projection-not-supported","Projection not supported")}}}function ye(r,t){var a,p,I;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:K(t.url,me)||"csv",dateFieldsTimeReference:{timeZoneIANA:T},drawingInfo:de,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},s=C(r),o=(a=s.next().value)==null?void 0:a.trim(),c=(p=s.next().value)==null?void 0:p.trim();if(!o)throw new F("csv-layer:empty-csv","CSV is empty",{csv:r});const{delimiter:u,locationInfo:f}=le(o,c,e);if(!u)throw new F("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:o,secondLine:c,parsingOptions:e});if(!f)throw new F("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:o,secondLine:c,parsingOptions:e});i.locationInfo=f,i.delimiter=u;const{names:h,aliases:m}=v(o,u),y=ce(r,i.delimiter,h,m,i.locationInfo);if((I=e.fields)!=null&&I.length){const l=new _(e.fields);for(const d of y){const x=l.get(d.name);x&&Object.assign(d,x)}}if(!y.some(l=>l.type==="esriFieldTypeOID"&&(n.objectIdField=l.name,!0))){const l={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=l.name,y.unshift(l)}n.fields=y;const g=new _(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=g.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=g.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const l=n.timeInfo;if(l.startTimeField){const d=g.get(l.startTimeField);d?(l.startTimeField=d.name,d.type="esriFieldTypeDate"):l.startTimeField=null}if(l.endTimeField){const d=g.get(l.endTimeField);d?(l.endTimeField=d.name,d.type="esriFieldTypeDate"):l.endTimeField=null}if(l.trackIdField){const d=g.get(l.trackIdField);l.trackIdField=d?d.name:null}l.startTimeField||l.endTimeField||(n.timeInfo=null)}return i}export{Le as default};
