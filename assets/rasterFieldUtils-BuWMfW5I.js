import{z as x}from"./index-MBf2dn39.js";const V="Raster.",o="Raster.Dim.",$=".Max",m={servicePixelValue:"Raster.ServicePixelValue",rawServicePixelValue:"Raster.ServicePixelValue.Raw",itemPixelValue:"Raster.ItemPixelValue",magnitude:"Raster.Magnitude",direction:"Raster.Direction",variable:"Raster.Variable"},w=new Map([["quarters","Quarter"],["months","Month"],["weeks","Week of the year"],["days","Day of the year"]]);function f(n,e){return new x({name:n,alias:e,domain:null,editable:!1,length:50,type:"string"})}function d(n,e){return new x({name:n,alias:e,domain:null,editable:!1,type:"double"})}function b(n,e){return new x({name:n,alias:e,domain:null,editable:!1,type:"date"})}function P(n){return f(m.servicePixelValue,n??"Service Pixel Value")}function S(n){return f(m.rawServicePixelValue,n??"Raw Service Pixel Value")}function R(){return f(m.itemPixelValue,"Item Pixel Value")}function M(n){return f(`${m.servicePixelValue}.${n}`,n)}function I(n){return d(`${m.magnitude}`,"Magnitude"+(n?` (${n})`:""))}function D(){return d(`${m.direction}`,"Direction (Â°)")}function E(n){return n.fields.filter(e=>e.type!=="oid"&&e.name.toLowerCase()!=="value").map(e=>{const t=e.clone();return t.name=`${V}${e.name}`,t})}function N(n){const e=new Set,t=new Set,a=new Map;return n.variables.forEach(({dimensions:i})=>{i.forEach(r=>{var u,c,l;if(r.recurring)a.set(r.name,r.unit);else{const s=((u=r.unit)==null?void 0:u.trim())==="ISO8601"||((l=(c=r.name)==null?void 0:c.trim())==null?void 0:l.toLowerCase())==="stdtime"?e:t;s.add(r.name),r.hasRanges&&s.add(`${r.name}${$}`)}})}),[f(m.variable,"Variable"),...[...e].map(i=>b(`${o}${i}`,h(i))),...[...t].map(i=>d(`${o}${i}`,h(i))),...[...a].map(([i,r])=>d(`${o}${i}`,g(i,r)))]}function g(n,e){return e=e==null?void 0:e.toLowerCase(),e&&w.has(e)?w.get(e):h(n)}function h(n){const e=n.endsWith($),t=e?n.slice(0,-4):n,a=t==="StdTime"?"Standard Time":t==="StdZ"?"Standard Z":t;return e?`${a} Max`:a}function p(n,e){return e?new Date(n):n}function W(n,e,t){t!=null&&t.length&&(e[m.variable]=t[0].variableName,t.forEach(({dimensionName:a,values:i})=>{if(a&&(i!=null&&i.length)){const r=`${o}${a}`,u=n.find(({name:s})=>s===r);if(!u)return;const c=u.type==="date",l=i[0];if(Array.isArray(l)){if(e[`${o}${a}`]=p(l[0],c),l[1]!=null){const s=`${o}${a}${$}`;if(n.some(({name:v})=>v===s)){const v=p(l[1],c);e[s]=v}}}else e[`${o}${a}`]=p(l,c)}}))}function C(n,e){if(e.pixelType.startsWith("f")&&n.forEach(({format:t,fieldName:a})=>{t&&a&&/^raster\.(item|service)pixelvalue/i.test(a)&&(t.places=2)}),e.multidimensionalInfo){const t=e.multidimensionalInfo.variables.flatMap(({dimensions:a})=>a);n.forEach(({format:a,fieldName:i})=>{var r;if(a&&(i!=null&&i.startsWith(o))){const u=i.slice(o.length),c=`${u}${$}`,l=t.find(({name:s})=>s===u||s===c);(r=l==null?void 0:l.values)!=null&&r.every(s=>Number.isInteger(s))&&(a.places=0)}})}}export{D as $,W as V,V as a,C as b,S as c,I as d,M as f,m as i,R as m,o as n,P as o,N as p,E as v};
