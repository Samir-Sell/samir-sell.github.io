import{cp as b,cE as w,dc as m,dv as _,dd as k,cF as u,Z as l,a0 as c,a1 as v}from"./index-Cv0-fPI4.js";import{n as f}from"./GraphicsLayer-FJFrV8oN.js";import{h as M,d as B,T as L,S as V}from"./Stop-Bk_yB3c-.js";import{d as S}from"./SketchViewModel-C_e0Dl1w.js";import"./networkEnums-DWdnlzOp.js";import"./hitTestSelectUtils-CmQZevxc.js";import"./projectVectorToVector-rT5JYUUy.js";import"./projectPointToVector-DKL5R6ed.js";import"./geodesicUtils-B_IgKcrp.js";import"./plane-CMgcROBJ.js";import"./vectorStacks-CCph9NQh.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-Dq9FTyYU.js";import"./elevationInfoUtils-PVRzb7p9.js";import"./quantityUtils-C5gNPzW5.js";import"./spatialReferenceEllipsoidUtils-B9213FBR.js";import"./geodeticLengthOperator-Df2F9JD1.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-Ba2Wg65Y.js";import"./lineSegment-z9z0tir6.js";function y(e,r){e.networkFeature=r}function F(e){const r=n(e.graphic);return{...e,networkFeature:r}}function G(e){const r=e.graphics.map(a=>n(a));return{...e,networkFeatures:r}}function n(e){return e.networkFeature}function N(e){return(e==null?void 0:e.type)==="point"||(e==null?void 0:e.type)==="polyline"||(e==null?void 0:e.type)==="polygon"}let s=class extends b{constructor(e){super(e),this._createMode=null,this._graphicsLayer=new f({internal:!0,listMode:"hide",title:"RouteLayerInteraction layer"}),this._updatingHandles=new w,this.enabled=!0,this._handleSketchViewModelEvents=async r=>{var a,o;switch(r.type){case"update":switch(r.state){case"active":case"complete":for(const t of r.graphics)n(t).geometry=N(t.geometry)?t.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const t of r.graphics){const p=n(t);this._removeNetworkFeature(p)}break;case"create":if(r.graphic&&r.state==="complete"&&this._createMode){const t=(a=r.graphic.geometry)==null?void 0:a.clone(),p=(o=r.graphic.symbol)==null?void 0:o.clone();if(!t)break;switch(this._createMode){case"stop":{if(t.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:h})=>!h)){i.at(0).geometry=t;break}if(i.length>1&&i.filter((h,g)=>g!==0).every(({geometry:h})=>!h)){i.at(1).geometry=t;break}const d=new V({geometry:t});i.add(d),y(r.graphic,d);break}case"point-barrier":{if(t.type!=="point")break;const i=new L({geometry:t,symbol:p});this.layer.pointBarriers.add(i),y(r.graphic,i);break}case"polyline-barrier":{if(t.type!=="polyline")break;const i=new B({geometry:t,symbol:p});this.layer.polylineBarriers.add(i),y(r.graphic,i);break}case"polygon-barrier":{if(t.type!=="polygon")break;const i=new M({geometry:t,symbol:p});this.layer.polygonBarriers.add(i),y(r.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(r.type,r.type==="create"?F(r):G(r))}}initialize(){this._sketchViewModel=new S({layer:this._graphicsLayer,view:this.view}),this.addHandles([m(()=>this.enabled,e=>{e?this._activate():this._deactivate()},k),m(()=>{const{stops:e,pointBarriers:r,polylineBarriers:a,polygonBarriers:o}=this.layer;return{stops:e,pointBarriers:r,polylineBarriers:a,polygonBarriers:o}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),_(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=u(this._graphicsLayer),this._sketchViewModel=u(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(e=>n(e))}get updating(){return this._updatingHandles.updating}create(e){var r;switch(this._createMode=e,e){case"stop":(r=this.layer.defaultSymbols.stops)!=null&&r.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(e){const r=this._graphicsLayer.graphics.find(a=>n(a)===e);r&&this._graphicsLayer.remove(r),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){var e;this._sketchViewModel.cancel(),(e=this.view.map)==null||e.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(r=>r.toArray().map(a=>{const o=a.toGraphic();return o.networkFeature=a,o}));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case"stop":this.layer.stops.remove(e);break;case"point-barrier":this.layer.pointBarriers.remove(e);break;case"polyline-barrier":this.layer.polylineBarriers.remove(e);break;case"polygon-barrier":this.layer.polygonBarriers.remove(e)}}};l([c()],s.prototype,"enabled",void 0),l([c({constructOnly:!0})],s.prototype,"layer",void 0),l([c({readOnly:!0})],s.prototype,"selectedNetworkFeatures",null),l([c()],s.prototype,"updating",null),l([c({constructOnly:!0})],s.prototype,"view",void 0),s=l([v("esri.views.2d.layers.support.RouteLayerInteraction")],s);export{s as RouteLayerInteraction};
