import{ag as g}from"./index-7LVg-iY6.js";class u{constructor(n){this.data=n,this.type="encoded-mesh-texture",this.encoding="image/ktx2"}}function p(e){return(e==null?void 0:e.type)==="encoded-mesh-texture"}async function h(e){const n=new Blob([e]),o=await n.text();return JSON.parse(o)}async function l(e,n){if(n==="image/ktx2")return new u(e);const o=new Blob([e],{type:n});let r=URL.createObjectURL(o);switch(n){case"image/jpeg":r+="#.jpg";break;case"image/png":r+="#.png"}const t=new Image;if(g("esri-iPhone"))return new Promise((s,d)=>{const a=()=>{i(),s(t)},c=m=>{i(),d(m)},i=()=>{URL.revokeObjectURL(r),t.removeEventListener("load",a),t.removeEventListener("error",c)};t.addEventListener("load",a),t.addEventListener("error",c),t.src=r});try{t.src=r,await t.decode()}catch{console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(r),t}export{u as e,h as n,l as r,p as t};
