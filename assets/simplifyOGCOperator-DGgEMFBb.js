import{s as a}from"./SimpleGeometryCursor-B92kdZ15.js";import{o as p}from"./OperatorSimplifyOGC-Bhv5x6tq.js";import{fromSpatialReference as s,getSpatialReference as u,fromGeometry as i,toGeometry as m}from"./apiConverter-MKUu7Tih.js";import"./Point2D-AUu76-L_.js";import"./ProjectionTransformation-Bu0AKopz.js";import"./Envelope2D-DXBkavsi.js";import"./Transformation2D-481oZy9q.js";import"./index-7LVg-iY6.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./jsonConverter-BKt79zJV.js";const n=new p;function c(t,e,r){return n.execute(t,e,r,null)}function f(t,e,r){const o=n.executeMany(new a(t),e,r,null);return Array.from(o)}function l(t,e,r,o){return n.isSimple(t,e,r,o,null)}function x(){return n.supportsCurves()}function j(t){const e=u(t);return m(c(i(t),s(e),!1),e)}function A(t){const e=t.map(i),r=u(t);return f(e,s(r),!1).map(o=>m(o,r))}function Z(t,e){return l(i(t),s(u(t)),e!=null,e??null)}const b=x();export{j as execute,A as executeMany,Z as isSimple,b as supportsCurves};
