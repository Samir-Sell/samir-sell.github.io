import{Z as o,a0 as c,a1 as F,cF as M,b as w,at as $,V as S,o as C,dc as R,cO as V}from"./index-MBf2dn39.js";import{s as E}from"./BitmapContainer-CDJk7Ak7.js";import{b as q}from"./LayerView2D-DCNAcCmT.js";import{M as U}from"./ExportStrategy-BztEooMJ.js";import{d as L}from"./LayerView-B9dCoYPm.js";import{i as W}from"./RefreshableLayerView-GvSLI9Ud.js";import{a as _}from"./ExportWMSImageParameters-BFYgRfo8.js";import{i as z}from"./timeSupport-_pFBrG42.js";import"./WGLContainer-Kqw7VgZL.js";import"./Utils-C1PbO-qu.js";import"./BoundingBox-pSNXXsZR.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-v4XGS9db.js";import"./VertexArrayObject-2CROiYZi.js";import"./memoryEstimations-BPPA_w8H.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexBuffer-DqjapH4o.js";import"./BufferObject-DJmVNFwp.js";import"./vec3f32-WCVSSNPR.js";import"./Container-CX2_i80M.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-8OwhMcAD.js";import"./OptimizedFeature-D0afEOhZ.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BitmapTechnique-CJS00m_9.js";import"./GraphShaderModule-D2txxt4I.js";import"./FramebufferObject-B9byaaQh.js";import"./ShaderBuilder-YGQtXrUp.js";import"./bitmapUtils-BlOS8F5O.js";import"./layerViewUtils-CcRlsi9U.js";const A=r=>{const i=r;let e=class extends i{initialize(){this.exportImageParameters=new _({layer:this.layer})}destroy(){this.exportImageParameters=M(this.exportImageParameters)}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var t;return z(this.layer,(t=this.view)==null?void 0:t.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(t,m){const{layer:h}=this;if(!t)throw new w("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:h});const{popupEnabled:a}=h;if(!a)throw new w("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:a});const s=this.createFetchPopupFeaturesQuery(t);if(!s)return[];const{extent:p,width:n,height:u,x:g,y}=s;if(!(p&&n&&u))throw new w("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:n,height:u});const d=await h.fetchFeatureInfo(p,n,u,g,y);return $(m),d}};return o([c()],e.prototype,"exportImageParameters",void 0),o([c({readOnly:!0})],e.prototype,"exportImageVersion",null),o([c()],e.prototype,"layer",void 0),o([c({readOnly:!0})],e.prototype,"timeExtent",null),e=o([F("esri.views.layers.WMSLayerView")],e),e};let l=class extends A(W(q(L))){constructor(){super(...arguments),this.bitmapContainer=new E}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(i=>{S(i)||C.getLogger(this).error(i)})}attach(){const{layer:r}=this,{imageMaxHeight:i,imageMaxWidth:e}=r;this.bitmapContainer=new E,this.container.addChild(this.bitmapContainer),this.strategy=new U({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:i,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=M(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:i,bitmapContainer:e}=this,{x:t,y:m}=r,{spatialReference:h}=i;let a,s=0,p=0;if(e.children.some(y=>{const{width:d,height:v,resolution:b,x,y:f}=y,I=x+b*d,P=f-b*v;return t>=x&&t<=I&&m<=f&&m>=P&&(a=new V({xmin:x,ymin:P,xmax:I,ymax:f,spatialReference:h}),s=d,p=v,!0)}),!a)return null;const n=a.width/s,u=Math.round((t-a.xmin)/n),g=Math.round((a.ymax-m)/n);return{extent:a,width:s,height:p,x:u,y:g}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,i,e,t){return this.layer.fetchImageBitmap(r,i,e,{timeExtent:this.timeExtent,...t})}};o([c()],l.prototype,"strategy",void 0),l=o([F("esri.views.2d.layers.WMSLayerView2D")],l);const yt=l;export{yt as default};
