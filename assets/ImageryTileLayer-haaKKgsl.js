const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/imageryUtils-t2XYkdCc.js","assets/utils-Dm3o8CYu.js","assets/index-MBf2dn39.js","assets/index-DZndqy9Z.css","assets/originUtils-HgmIxkx7.js","assets/jsonContext-B49Vdxgs.js","assets/saveUtils-oMsmBH2V.js","assets/datasetUtils-B72kKfeB.js"])))=>i.map(i=>d[i]);
import{j4 as Le,j5 as Ae,ak as B,cO as W,aW as Je,oE as ze,Z as T,a0 as O,a1 as X,f0 as ke,b as F,cb as Me,cs as ve,oF as Ue,aG as je,u as He,bE as ne,b5 as Ge,I as We,az as Y,o as ee,dl as qe,dm as Ve,fb as Ye,fc as Xe,fe as Ke,fA as Ze,fk as Qe,fd as et,af as tt,dn as st,fB as at,_ as it,f as rt,kQ as nt,bm as ot,dc as lt,dp as ct,fm as ut,d7 as ft,kZ as pt,z as Se}from"./index-MBf2dn39.js";import{i as ht}from"./isImageryTileGraphicOrigin-ZR-gBf9D.js";import{l as dt}from"./ArcGISService-C5lmGAY8.js";import{X as Q,i as fe,t as U,n as Pe,e as z,o as V,u as ie,a as mt,m as gt}from"./xmlUtilities-CgRHpTH_.js";import{e as yt,N as $e}from"./RasterJobHandlerMixin-CCtHIYuj.js";import{c as wt,f as xt,o as It}from"./RasterPresetRendererMixin-DJIPGBEj.js";import{o as bt,c as vt,v as St,d as Tt,$ as Rt,p as _t,i as Ot,b as Ct}from"./rasterFieldUtils-BuWMfW5I.js";import{p as Ft,C as kt,t as Mt,r as Pt}from"./datasetUtils-B72kKfeB.js";import{c as oe,i as $t}from"./PixelBlock-Dc6PxXka.js";import{m as ce,y as Nt,k as Ne,v as ye,L as Et,l as we,r as Dt,b as Te,H as Bt,G as Lt,c as At,e as Re,Y as Jt,t as zt,N as _e,C as Ut,d as jt}from"./RasterSymbolizer-BSYGCckg.js";import{E as Ht,W as Gt,v as Wt}from"./vectorFieldUtils-D-BW2pPN.js";import{u as xe,n as qt}from"./PolynomialTransform-Bz121gue.js";import{j as Vt}from"./TilemapCache-DR8vb5S7.js";import{w as Yt,T as Xt}from"./rasterFunctionHelper-B70uwFpA.js";import{j as Oe,$ as Kt,R as Zt}from"./elevationInfoUtils-l3tH7G6t.js";import"./QueueProcessor-DnSe9my5.js";import"./RawBlockCache-CESvB1lD.js";import"./rasterProjectionHelper-D8_xYHp-.js";import"./clipUtils-D_rCC_vF.js";import"./utils-B4r99V9e.js";import"./cimSymbolUtils-CMr_p2Ed.js";import"./ClassBreaksDefinition-PyI5BIb_.js";import"./dataUtils-CtyuARAx.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./colorUtils-CkAZgRni.js";import"./memoryEstimations-BPPA_w8H.js";var Ce;class Qt extends Le{get[(Ce=ht,Ae)](){return this.layer}constructor(e){super(),this[Ce]=!0,this.type="imagery-tile",this.layer=e}get id(){return this.layer.id}}function Ee(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function De(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function es(t){const{axes:e}=t.domain,s=Object.keys(e),r=[],a=[];let i=-1,n=-1,u=[];for(let m=0;m<s.length;m++){const w=s[m];Ee(w)?i=m:De(w)&&(n=m);const x=e[w],S=[];if("values"in x){x.values.forEach(R=>S.push(typeof R=="string"?new Date(R).getTime():R));const v=S[1]-S[0];r.push([S[0]-.5*v,S[S.length-1]+.5*v]),a.push(v)}else{const{start:v,stop:R,num:k}=x,b=(R-v)/(k-1);r.push([v-.5*b,R+.5*b]),a.push(b);for(let C=0;C<k;C++)S.push(v+b*C)}u.push({name:w,values:S,extent:[S[0],S[S.length-1]]})}i>-1&&n===-1?n=i===0?1:0:n>-1&&i===-1?i=n===0?1:0:n===-1&&i===-1&&(i=0,n=1),u=u.filter((m,w)=>!(w===i||w===n));const{referencing:o}=t.domain,l=o.find(m=>m.coordinates.includes(s[i])).system.id,c=l==null?void 0:l.slice(l.lastIndexOf("/")+1),f=c==null||c==="CRS84"?4326:Number(c),p=new B({wkid:f}),[h,y]=r[i],[g,I]=r[n],d=new W({xmin:h,xmax:y,ymin:g,ymax:I,spatialReference:p});return{width:Math.round(d.width/a[i]),height:Math.round(d.height/a[n]),extent:d,dimensions:u}}function pe(t){const e=ze();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function he(){return Math.round(255*Math.random())}function ts(t){var r,a;const e={},{parameters:s}=t;if(!s)return e;for(const[i,n]of Object.entries(s)){const{type:u,description:o,unit:l,categoryEncoding:c,observedProperty:f}=n;if(u==="Parameter"&&(e[i]={},o&&(e[i].description=pe(o)),l&&(e[i].unit=l.label?pe(l.label):null,e[i].symbol=(r=l.symbol)==null?void 0:r.value),c)){const p=Object.entries(c).map((g,I)=>({OID:I,Value:Number(g[1]),ClassName:g[0].slice(g[0].lastIndexOf("/")+1),Count:1}));let h=!1;(a=f==null?void 0:f.categories)!=null&&a.length&&(f.categories.forEach(g=>{if(!g.id)return;const I=g.id.slice(g.id.lastIndexOf("/")+1),d=p.find(w=>w.ClassName===I);if(!d)return;const m=g.label?pe(g.label):null;if(d.Label=m,g.preferredColor){const w=Je.fromHex(g.preferredColor);w&&(h=!0,d.Red=w.r,d.Green=w.g,d.Blue=w.b)}}),h&&p.forEach(g=>{g.Red==null&&(g.Red=he(),g.Green=he(),g.Blue=he())}));const y={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:p.map(g=>({attributes:g}))};h&&y.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[i].attributeTable=y}}return e}function ss(t){let e=Number.MAX_VALUE,s=-Number.MAX_VALUE;for(let r=0;r<t.length;r++){const a=t[r];a!=null&&(a<e&&(e=a),a>s&&(s=a))}return $t(e,s)}function as(t,e,s){const r=t.map((o,l)=>({name:o,count:e[l]})).sort((o,l)=>o.name>l.name?-1:1),a=(i=1,o=>i*=o.count);var i;const n=[...r.slice(1),{name:"",count:1}].reverse().map(a).reverse();let u=0;for(let o=t.length-1;o>=0;o--)u+=n[r.findIndex(({name:l})=>l===t[o])]*(s%e[o]),s=Math.floor(s/e[o]);return u}function is(t){var p;const{width:e,height:s,extent:r,dimensions:a}=es(t),{ranges:i}=t,n=Object.keys(i).sort((h,y)=>h<y?-1:1),u=[];for(let h=0;h<n.length;h++){const y=n[h];a!=null&&a.length&&u.push({name:y,dimensions:a})}const o=ts(t);u.forEach(h=>o[h.name]&&Object.assign(h,o[h.name]));const l=u.length?{variables:u}:void 0,c=[];for(let h=0;h<n.length;h++){const y=n[h],{values:g,dataType:I,axisNames:d,shape:m}=i[y],w=m.length>2?h*m.slice(0,-2).reduce((b,C)=>b*C):0,x=d.slice(0,-2),S=m.slice(0,-2),v=I==="float"?"f32":ss(g),R=e*s,k=g.length/R;for(let b=0;b<k;b++){const C=oe.createEmptyBand(v,R),M=new Uint8Array(R).fill(255);let _=!1;const N=b*R;for(let P=0;P<R;P++){const L=g[N+P];L==null?(M[P]=0,_=!0):C[P]=L}if(h===0||a!=null&&a.length){const P=new oe({width:e,height:s,mask:_?M:null,pixels:[C],pixelType:v});P.updateStatistics(),(a==null?void 0:a.length)?c[as(x,S,b)+w]=P:c.push(P)}else{const P=c[b];P.pixels.push(C),_?P.mask&&(P.mask=oe.combineBandMasks([P.mask,M])):P.mask=_?M:null}}}const f=(p=Object.values(o).find(h=>h.attributeTable))==null?void 0:p.attributeTable;return{extent:r,pixelBlocks:c,multidimensionalInfo:l,attributeTable:f,bandNames:l?void 0:n}}let K=class extends Q{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(t,e,s,r={}){if(!this._pixelBlockTiles){const{rasterInfo:i}=this,[n,u]=i.storageInfo.tileInfo.size,{sliceId:o}=r,{pixelBlocks:l}=this.source,c={pixelBlock:o==null?l[0]:l[o],useBilinear:i.dataType!=="thematic",tileSize:{width:n,height:u},level:t,row:e,col:s},f=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,r):Ht(c);return Promise.resolve(f)}const a=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(a)}async _open(t){const e=this.source,{pixelBlocks:s,attributeTable:r,statistics:a,histograms:i,name:n,nativeExtent:u,transform:o,colormap:l}=e,c=s[0],{width:f,height:p,pixelType:h}=c,y=e.extent??new W({xmin:-.5,ymin:.5,xmax:f-.5,ymax:p-.5,spatialReference:new B({wkid:3857})}),g=e.isPseudoSpatialReference??!e.extent,I={x:y.width/f,y:y.height/p},d={...e.keyProperties};e.dataType&&(d.DataType=e.dataType),e.bandInfos&&(d.BandProperties=e.bandInfos.map(w=>w.toJSON())),r&&(d.DataType="Thematic");const m=new ce({width:f,height:p,pixelType:h,extent:y,nativeExtent:u,attributeTable:r,colormap:l,transform:o,pixelSize:I,spatialReference:y.spatialReference,bandCount:c.pixels.length,keyProperties:d,multidimensionalInfo:e.multidimensionalInfo,statistics:a,isPseudoSpatialReference:g,histograms:i});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(m),this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),m.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,m.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},t),m.multidimensionalInfo||(this.source=null),this.datasetName=n}async _buildInMemoryRaster(t,e,s){var f,p;const{rasterInfo:r}=this,a=r.storageInfo.maximumPyramidLevel??0,i=r.dataType!=="thematic",n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:a,useBilinear:i},s):Promise.resolve(Gt(t,e,a,i)),u=r.statistics!=null,o=r.histograms!=null,l=this.ioConfig.skipStatistics||u?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},s):Promise.resolve(Nt(t)),c=await ke([n,l]);if(!c[0].value&&c[1].value)throw new F("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,u||(r.statistics=(f=c[1].value)==null?void 0:f.statistics),o||(r.histograms=(p=c[1].value)==null?void 0:p.histograms)}async _buildMDimStats(t,e,s){for(let r=0;r<e.variables.length;r++){const a=e.variables[r];if(a.statistics)continue;const i=a.dimensions.map(l=>{var c,f;return new Ft({variableName:a.name,dimensionName:l.name,values:[((c=l.values)==null?void 0:c[0])??((f=l.extent)==null?void 0:f[0])],isSlice:!0})}),n=kt(i,e),u=n==null?null:t[n];if(u==null)continue;const o=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:u},s):Ne(u);a.statistics=o.statistics,a.histograms||(a.histograms=o.histograms)}}};T([O({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),T([O()],K.prototype,"source",void 0),T([O()],K.prototype,"url",null),K=T([X("esri.layers.support.rasterDatasets.InMemoryRaster")],K);const Ie=K;let te=class extends Q{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,s,r,a={}){return this._inMemoryRaster.fetchRawTile(e,s,r,a)}async _open(e){const{extent:s,pixelBlocks:r,multidimensionalInfo:a,attributeTable:i,bandNames:n}=await this._fetchData(e),{statistics:u,histograms:o}=Ne(r[0]),l=n==null?void 0:n.map(h=>({BandName:h})),c={DataType:i?"Thematic":a?"Scientific":"Generic",BandProperties:l},f=new Ie({source:{extent:s,pixelBlocks:r,attributeTable:i?Me.fromJSON(i):null,multidimensionalInfo:a,statistics:u,histograms:o,keyProperties:c,isPseudoSpatialReference:!1}});await f.open(),this._inMemoryRaster=f;const p=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",p.slice(0,p.indexOf("."))),this._set("rasterInfo",f.rasterInfo)}async _fetchData(e){var i,n,u,o;const s=this.source??(await this.request(this.url,{signal:e==null?void 0:e.signal})).data,r="imagery-tile-layer:open-coverage-json";if(((i=s.type)==null?void 0:i.toLowerCase())!=="coverage"||((u=(n=s.domain)==null?void 0:n.domainType)==null?void 0:u.toLowerCase())!=="grid")throw new F(r,"Only coverage with Grid domain type is supported");if(!s.ranges)throw new F(r,"Missing ranges in the grid coverage data");if(!((o=s.domain.referencing)!=null&&o.length))throw new F(r,"Missing domain referencing in the grid coverage data");const a=Object.values(s.ranges);for(let l=0;l<a.length;l++){const{axisNames:c,shape:f,type:p,values:h}=a[l];if(!(p.toLowerCase()==="ndarray"&&(h!=null&&h.length)&&(c!=null&&c.length)&&(f!=null&&f.length)))throw new F(r,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(Ee(c[c.length-1])&&De(c[c.length-2])))throw new F(r,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return is(s)}};T([O({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),T([O({constructOnly:!0})],te.prototype,"source",void 0),te=T([X("esri.layers.support.rasterDatasets.CovJSONRaster")],te);const rs=te;function Fe(t,e){if(!t||!e)return null;const s=[];for(let r=0;r<t.length;r++)s.push(t[r]),s.push(e[r]);return s}function ns(t){const e=z(t,"GeodataXform"),s=ue(V(e,"SpatialReference/WKID")||U(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const r=V(e,"PolynomialOrder")??1,a=ie(e,"CoeffX/Double"),i=ie(e,"CoeffY/Double"),n=ie(e,"InverseCoeffX/Double"),u=ie(e,"InverseCoeffY/Double"),o=Fe(a,i),l=Fe(n,u);return{spatialReference:s,transform:o&&l&&o.length&&l.length?new xe({spatialReference:s,polynomialOrder:r,forwardCoefficients:o,inverseCoefficients:l}):null}}function os(t){var p;const e=V(t,"NoDataValue"),s=z(t,"Histograms/HistItem"),r=V(s,"HistMin"),a=V(s,"HistMax"),i=V(s,"BucketCount"),n=(p=U(s,"HistCounts"))==null?void 0:p.split("|").map(h=>Number(h));let u,o,l,c;Pe(t,"Metadata/MDI").forEach(h=>{const y=Number(h.textContent??h.nodeValue);switch(h.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":u=y;break;case"STATISTICS_MAXIMUM":o=y;break;case"STATISTICS_MEAN":l=y;break;case"STATISTICS_STDDEV":c=y}});const f=V(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:n!=null&&n.length&&r!=null&&a!=null?{min:r,max:a,size:i||n.length,counts:n}:null,sourceBandIndex:f,statistics:u!=null&&o!=null?{min:u,max:o,avg:l,stddev:c}:null}}function ue(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new B({wkid:e});if(t=String(t).trim(),Ue(t))return new B({wkt2:t});const s=t.toUpperCase();if(s.startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const r=s.indexOf("VERTCS"),a=s.indexOf("PROJCS"),i=a>-1?a:s.indexOf("GEOGCS");if(i===-1)return null;const n=t.slice(i,t.lastIndexOf("]",r)+1).trim(),u=t.slice(r,t.lastIndexOf("]")).trim();e=de(n);const o=new B(e?{wkid:e}:{wkt:n}),l=de(u);return l&&(o.vcsWkid=l),o}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(e=de(t),new B(e!==0?{wkid:e}:{wkt:t})):null}function de(t){var a;const e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(i=>i.trim()).filter(i=>i!==""),s=e[e.length-1].split(","),r=(a=s[0])==null?void 0:a.toLowerCase();if((r==="epsg"||r==="esri")&&t.endsWith('"]]')){const i=Number(s[1]);if(!isNaN(i)&&i!==0)return i}return 0}function be(t){var r;if(((r=t==null?void 0:t.documentElement.tagName)==null?void 0:r.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(a=>{if(a.nodeType===1){if(fe(a,"SRS")){if(!e.spatialReference){const i=U(a);e.spatialReference=ue(i)}}else if(fe(a,"Metadata"))if(a.getAttribute("domain")==="xml:ESRI"){const{spatialReference:i,transform:n}=ns(a);e.transform=n,e.spatialReference||(e.spatialReference=i)}else Pe(a,"MDI").forEach(i=>e.metadata[i.getAttribute("key")]=U(i));else if(fe(a,"PAMRasterBand")){const i=os(a);i.sourceBandIndex!=null&&e.rasterBands[i.sourceBandIndex]==null?e.rasterBands[i.sourceBandIndex]=i:e.rasterBands.push(i)}}});const s=e.rasterBands;if(s.length){const a=!!s[0].statistics;e.statistics=a?s.map(n=>n.statistics).filter(ve):null;const i=!!s[0].histogram;e.histograms=i?s.map(n=>n.histogram).filter(ve):null}return e}let le=class extends Q{fetchRawTile(t,e,s,r={}){return this._inMemoryRaster.fetchRawTile(t,e,s,r)}async _open(t){const e=await this._fetchData(t);let{spatialReference:s,statistics:r,histograms:a,transform:i}=await this._fetchAuxiliaryData(t);const n=!s;n&&(s=new B({wkid:3857})),a!=null&&a.length&&r==null&&(r=ye(a));const{width:u,height:o}=e;let l=new W({xmin:-.5,ymin:.5-o,xmax:u-.5,ymax:.5,spatialReference:s});const c=i?i.forwardTransform(l):l;let f=!0;if(i){const h=i.forwardCoefficients;f=h&&h[1]===0&&h[2]===0,f&&(i=null,l=c)}const p=new Ie({source:{extent:c,nativeExtent:l,transform:i,pixelBlocks:[e],statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(p.ioConfig.skipMapInfo=!0),await p.open(),p.source=null,this._set("rasterInfo",p.rasterInfo),this._inMemoryRaster=p}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),s=Et(e).toUpperCase();if(s!=="JPG"&&s!=="PNG"&&s!=="GIF"&&s!=="BMP")throw new F("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);const r=s.toLowerCase(),a=r==="gif"||r==="bmp"||!je("ios"),i=await this.decodePixelBlock(e,{format:r,useCanvas:a,hasNoZlibMask:!0});if(i==null)throw new F("image-aux-raster:open","the data cannot be decoded");return i}async _fetchAuxiliaryData(t){var c;const e=t==null?void 0:t.signal,{skipExtensions:s=[],skipMapInfo:r}=this.ioConfig,a=r||s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),i=this.datasetFormat,n=i==="JPG"?"jgw":i==="PNG"?"pgw":i==="BMP"?"bpw":null,u=n&&s.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await ke([a,u]);if(e!=null&&e.aborted)throw He();const l=be((c=o[0].value)==null?void 0:c.data);if(!l.transform){const f=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(p=>Number(p)):null;l.transform=(f==null?void 0:f.length)===6?new xe({forwardCoefficients:[f[4],f[5],f[0],-f[1],f[2],-f[3]]}):null}return l}};T([O({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=T([X("esri.layers.support.rasterDatasets.ImageAuxRaster")],le);const re=le;let se=class extends Q{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(t,e,s,r={}){var N;const{storageInfo:a,extent:i}=this.rasterInfo,{transposeInfo:n}=a,u=n!=null&&!!r.transposedVariableName;if(this._slices&&!u&&r.sliceId==null)return null;const o=u?0:a.maximumPyramidLevel-t+this._levelOffset,l=`${this.url}/tile/${o}/${e}/${s}`,c=this._slices?u?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null;let f,p;if(a.isBsqTile){const P=((N=r.bandIds)!=null&&N.length?r.bandIds:[0,1,2]).map(H=>this.request(l,{query:{...c,bandId:H},responseType:"array-buffer",signal:r.signal})),L=await Promise.all(P),E=L.map(H=>H.data.byteLength).reduce((H,Be)=>H+Be),A=new Uint8Array(E);p=[];let q=0;for(const{data:H}of L)p.push(q),A.set(new Uint8Array(H),q),q+=H.byteLength;f=A.buffer}else f=(await this.request(l,{query:c,responseType:"array-buffer",signal:r.signal})).data;if(!f)return null;const h=u?n.tileSize:a.tileInfo.size,y=await this.decodePixelBlock(f,{width:h[0],height:h[1],planes:p==null?void 0:p.length,offsets:p,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:u,noDataValue:this.rasterInfo.noDataValue});if(y==null)return null;const g=a.blockBoundary[t];if(a.compression!=="jpg"||s>g.minCol&&s<g.maxCol&&e>g.minRow&&e<g.maxRow)return y;const{origin:I,blockWidth:d,blockHeight:m}=a,{x:w,y:x}=this.getPyramidPixelSize(t),S=Math.round((i.xmin-I.x)/w)%d,v=Math.round((i.xmax-I.x)/w)%d||d,R=Math.round((I.y-i.ymax)/x)%m,k=Math.round((I.y-i.ymin)/x)%m||m,b=s===g.minCol?S:0,C=e===g.minRow?R:0,M=s===g.maxCol?v:d,_=e===g.maxRow?k:m;return Wt(y,{x:b,y:C},{width:M-b,height:_-C}),y}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;const e=t;for(let s=0;s<this._slices.length;s++){const r=this._slices[s].multidimensionalDefinition;if(r.length===e.length&&!r.some(a=>{const i=e.find(n=>a.variableName===n.variableName&&n.dimensionName===a.dimensionName);return i?(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0]):!0}))return s}return null}async fetchVariableStatisticsHistograms(t,e){var i,n,u;const s=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(o=>{var l;return(l=o.data)==null?void 0:l.statistics}),r=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(o=>{var l;return(l=o.data)==null?void 0:l.histograms}),a=await Promise.all([s,r]);return a[0]&&a[0].forEach(o=>{o.avg=o.mean,o.stddev=o.standardDeviation}),(u=(n=(i=a[1])==null?void 0:i[0])==null?void 0:n.counts)!=null&&u.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(t,0,e.datumTransformation);if(s===null)return null;let r=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let i=a-r+this._levelOffset;const n=s.srcLocation;for(;i>=0;){try{if(await this._tilemapCache.fetchAvailability(i,s.row,s.col,e)==="available")break}catch{}if(i--,r++,s=this.identifyPixelLocation(n,r,e.datumTransformation),s===null)return null}return i===-1||s==null?null:r}async _open(t){var R,k;const e=t==null?void 0:t.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=s.data;if(this.sourceJSON=r,!r)throw new F("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new F("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const a=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=r.cacheType,this.tileType==null&&(a.includes(r.tileInfo.format.toLowerCase())?this.tileType="Map":r.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((R=r.name)==null?void 0:R.slice(r.name.indexOf("/")+1))??"";const i=await this._fetchRasterInfo({signal:e});if(i==null)throw new F("image-server-raster:open","cannot initialize image service");wt(i,r);const n=this.tileType==="Map"?ls(r.tileInfo,r):ne.fromJSON(r.tileInfo);Ge(n);const[u,o]=this._computeMinMaxLOD(i,n),{extent:l,pixelSize:c}=i,f=.5/i.width*c.x,p=Math.max(c.x,c.y),{lods:h}=n;(this.tileType!=="Map"&&r.maxScale!==0||Math.abs(c.x-c.y)>f||!h.some(b=>Math.abs(b.resolution-p)<f))&&(c.x=c.y=u.resolution,i.width=Math.ceil((l.xmax-l.xmin)/c.x-.1),i.height=Math.ceil((l.ymax-l.ymin)/c.y-.1));const y=u.level-o.level,[g,I]=n.size,d=[],m=[];h.forEach((b,C)=>{b.level>=o.level&&b.level<=u.level&&d.push({x:b.resolution,y:b.resolution}),C<h.length-1&&m.push(Math.round(10*b.resolution/h[C+1].resolution)/10)}),d.sort((b,C)=>b.x-C.x);const w=this.computeBlockBoundary(l,g,I,n.origin,d,y),x=d.length>1?d.slice(1):null;let S;r.transposeInfo&&(S={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:((k=i.keyProperties)==null?void 0:k._yxs.PacketSize)??0});const v=m.length<=1||m.length>=3&&m.slice(0,-1).every(b=>b===m[0])?m[0]??2:Math.round(10/(o.resolution/u.resolution)**(-1/y))/10;if(i.storageInfo=new we({blockWidth:n.size[0],blockHeight:n.size[1],pyramidBlockWidth:n.size[0],pyramidBlockHeight:n.size[1],pyramidResolutions:x,pyramidScalingFactor:v,compression:n.format,origin:n.origin,firstPyramidLevel:1,maximumPyramidLevel:y,tileInfo:n,isBsqTile:!!r.bsq,transposeInfo:S,blockBoundary:w}),cs(i),this._set("rasterInfo",i),r.capabilities.toLowerCase().includes("tilemap")){const b={tileInfo:i.storageInfo.tileInfo,parsedUrl:We(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Vt({layer:b})}}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const n=e.fullExtent||e.extent,u=Math.ceil((n.xmax-n.xmin)/e.pixelSizeX-.1),o=Math.ceil((n.ymax-n.ymin)/e.pixelSizeY-.1),l=B.fromJSON(e.spatialReference||n.spatialReference),c=new Y({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:l});return new ce({width:u,height:o,bandCount:3,extent:W.fromJSON(n),spatialReference:l,pixelSize:c,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:s}=t,r=xt(this.url,this.sourceJSON,{signal:s,query:this.ioConfig.customFetchParameters}),a=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:s}).then(n=>{var u;return(u=n.data)==null?void 0:u.slices}).catch(()=>null):null,i=await Promise.all([r,a]);return this._slices=i[1],i[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){const{pixelSize:s}=t,r=.5/t.width*s.x,{lods:a}=e,i=e.lodAt(Math.max.apply(null,a.map(p=>p.level))),n=e.lodAt(Math.min.apply(null,a.map(p=>p.level))),{tileType:u}=this;if(u==="Map")return this._levelOffset=a[0].level,[i,n];if(u==="Raster")return[a.find(p=>p.resolution===s.x)??i,n];const{minScale:o,maxScale:l}=this.sourceJSON;let c=i;l>0&&(c=a.find(p=>Math.abs(p.scale-l)<r),c||(c=a.filter(p=>p.scale>l).sort((p,h)=>p.scale>h.scale?1:-1)[0]??i));let f=n;return o>0&&(f=a.find(p=>Math.abs(p.scale-o)<r)??n,this._levelOffset=f.level-n.level),[c,f]}};function ls(t,e){if(!t)return null;const{minScale:s,maxScale:r,minLOD:a,maxLOD:i}=e;if(a!=null&&i!=null)return ne.fromJSON({...t,lods:t.lods.filter(({level:n})=>n!=null&&n>=a&&n<=i)});if(s!==0&&r!==0){const n=l=>Math.round(1e4*l)/1e4,u=s?n(s):1/0,o=r?n(r):-1/0;return ne.fromJSON({...t,lods:t.lods.filter(l=>{const c=n(l.scale);return c<=u&&c>=o})})}return ne.fromJSON(t)}function cs(t){const{extent:e,spatialReference:s}=t;e.xmin>-1&&e.xmax>181&&(s!=null&&s.wkid)&&s.isGeographic&&(t.nativeExtent=t.extent,t.transform=new qt,t.extent=t.transform.forwardTransform(e))}T([O({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),T([O()],se.prototype,"tileType",void 0),se=T([X("esri.layers.support.rasterDatasets.ImageServerRaster")],se);const us=se,J=new Map;J.set("Int8","s8"),J.set("UInt8","u8"),J.set("Int16","s16"),J.set("UInt16","u16"),J.set("Int32","s32"),J.set("UInt32","u32"),J.set("Float32","f32"),J.set("Float64","f32"),J.set("Double64","f32");const j=new Map;j.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),j.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),j.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),j.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"}),j.set("qb3",{blobExtension:".pq3",isOneSegment:!0,decoderFormat:"qb3"});let Z=class extends Q{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,s,r,a={}){const{blockWidth:i,blockHeight:n,blockBoundary:u}=this.rasterInfo.storageInfo,o=u[e];if(!o||o.maxRow<s||o.maxCol<r||o.minRow>s||o.minCol>r)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:f,actualTileWidth:p,actualTileHeight:h}=this._getTileLocation(e,s,r);if(!f||f.length===0)return null;if(f[0].from===0&&f[0].to===0){const _=new Uint8Array(i*n);return new oe({width:i,height:n,pixels:void 0,mask:_,validPixelCount:0})}const{bandIds:y}=this.ioConfig,g=this._getBandSegmentCount(),I=[];let d=0;for(d=0;d<g;d++)y&&!y.includes(d)||I.push(this.request(this._files.data,{range:{from:f[d].from,to:f[d].to},responseType:"array-buffer",signal:a.signal}));const m=await Promise.all(I),w=m.map(_=>_.data.byteLength).reduce((_,N)=>_+N),x=new Uint8Array(w),S=[];let v=0;for(d=0;d<g;d++)S.push(v),x.set(new Uint8Array(m[d].data),v),v+=m[d].data.byteLength;const R=j.get(this.rasterInfo.storageInfo.compression).decoderFormat,k=await this.decodePixelBlock(x.buffer,{width:i,height:n,format:R,planes:(y==null?void 0:y.length)||l,offsets:S,pixelType:c}).catch(()=>null);if(k==null)return null;let{noDataValue:b}=this.rasterInfo;if(b!=null&&R!=="lerc"&&!k.mask&&(b=b[0],b!=null)){const _=k.width*k.height,N=new Uint8Array(_);if(Math.abs(b)>1e24)for(d=0;d<_;d++)Math.abs((k.pixels[0][d]-b)/b)>1e-6&&(N[d]=1);else for(d=0;d<_;d++)k.pixels[0][d]!==b&&(N[d]=1);k.mask=N}let C=0,M=0;if(p!==i||h!==n){let _=k.mask;if(_)for(d=0;d<n;d++)if(M=d*i,d<h)for(C=p;C<i;C++)_[M+C]=0;else for(C=0;C<i;C++)_[M+C]=0;else for(_=new Uint8Array(i*n),k.mask=_,d=0;d<h;d++)for(M=d*i,C=0;C<p;C++)_[M+C]=1}return k}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const s=e?e.signal:null,r=await this.request(this.url,{responseType:"xml",signal:s}),{rasterInfo:a,files:i}=this._parseHeader(r.data),{skipMapInfo:n,skipExtensions:u=[]}=this.ioConfig;if(!u.includes("aux.xml")&&!n){const m=await this._fetchAuxiliaryData(e);m!=null&&(a.statistics=m.statistics??a.statistics,a.histograms=m.histograms,m.histograms&&a.statistics==null&&(a.statistics=ye(m.histograms)))}n&&this.updateImageSpaceRasterInfo(a),this._set("rasterInfo",a),this._files=i;const o=await this.request(i.index,{responseType:"array-buffer",signal:s});this._storageIndex=fs(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,f=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:p,height:h}=this.rasterInfo,y=[],g=this._getBandSegmentCount();let I=0,d=-1;for(;I<this._storageIndex.length;){d++;const m=Math.ceil(p/l/f**d)-1,w=Math.ceil(h/c/f**d)-1;I+=(m+1)*(w+1)*g*4,y.push({maxRow:w,maxCol:m,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=y,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}_getBandSegmentCount(){return j.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,s,r){const{blockWidth:a,blockHeight:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:u,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,f,p,h=0,y=0;for(p=0;p<e;p++)y=n**p,c=Math.ceil(u/a/y),f=Math.ceil(o/i/y),h+=c*f;y=n**e,c=Math.ceil(u/a/y),f=Math.ceil(o/i/y),h+=s*c+r,h*=4*l;const g=this._storageIndex.subarray(h,h+4*l);let I=0,d=0;const m=[];for(let w=0;w<l;w++)I=g[4*w]*2**32+g[4*w+1],d=I+g[4*w+2]*2**32+g[4*w+3]-1,m.push({from:I,to:d});return{ranges:m,actualTileWidth:r<c-1?a:Math.ceil(u/y)-a*(c-1),actualTileHeight:s<f-1?i:Math.ceil(o/y)-i*(f-1)}}_parseHeader(e){const s=z(e,"MRF_META/Raster");if(!s)throw new F("mrf:open","not a valid MRF format");const r=z(s,"Size"),a=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),u=(U(s,"Compression")||"none").toLowerCase();if(!j.has(u))throw new F("mrf:open","currently does not support compression "+u);const o=U(s,"DataType")||"UInt8",l=J.get(o);if(l==null)throw new F("mrf:open","currently does not support pixel type "+o);const c=z(s,"PageSize"),f=parseInt(c.getAttribute("x"),10),p=parseInt(c.getAttribute("y"),10),h=z(s,"DataValues");let y,g;if(h&&(g=h.getAttribute("NoData"),g!=null&&(y=g.trim().split(" ").map(_=>parseFloat(_)))),z(e,"MRF_META/CachedSource"))throw new F("mrf:open","currently does not support MRF referencing other data files");const I=z(e,"MRF_META/GeoTags"),d=z(I,"BoundingBox");let m,w=!1;if(d!=null){const _=parseFloat(d.getAttribute("minx")),N=parseFloat(d.getAttribute("miny")),P=parseFloat(d.getAttribute("maxx")),L=parseFloat(d.getAttribute("maxy")),E=U(I,"Projection")||"";let A=B.WGS84;if(E!=="LOCAL_CS[]")if(E.toLowerCase().startsWith("epsg:")){const q=Number(E.slice(5));isNaN(q)||q===0||(A=new B({wkid:q}))}else A=ue(E)??B.WGS84;else w=!0,A=new B({wkid:3857});m=new W(_,N,P,L),m.spatialReference=A}else w=!0,m=new W({xmin:-.5,ymin:.5-i,xmax:a-.5,ymax:.5,spatialReference:new B({wkid:3857})});const x=z(e,"MRF_META/Rsets"),S=parseInt((x==null?void 0:x.getAttribute("scale"))||"2",10),v=m.spatialReference,R=new we({origin:new Y({x:m.xmin,y:m.ymax,spatialReference:v}),blockWidth:f,blockHeight:p,pyramidBlockWidth:f,pyramidBlockHeight:p,compression:u,pyramidScalingFactor:S}),k=new Y({x:m.width/a,y:m.height/i,spatialReference:v}),b=new ce({width:a,height:i,extent:m,isPseudoSpatialReference:w,spatialReference:v,bandCount:n,pixelType:l,pixelSize:k,noDataValue:y,storageInfo:R}),C=U(e,"datafile"),M=U(e,"IndexFile");return{rasterInfo:b,files:{mrf:this.url,index:M||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",j.get(u).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:s}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e==null?void 0:e.signal});return be(s)}catch{return null}}};function fs(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,s,r,a,i,n;if(Dt){for(s=new Uint8Array(t),a=new ArrayBuffer(t.byteLength),r=new Uint8Array(a),i=0;i<t.byteLength/4;i++)for(n=0;n<4;n++)r[4*i+n]=s[4*i+3-n];e=new Uint32Array(a)}else e=new Uint32Array(t);return e}T([O()],Z.prototype,"_files",void 0),T([O()],Z.prototype,"_storageIndex",void 0),T([O({type:String,json:{write:!0}})],Z.prototype,"datasetFormat",void 0),Z=T([X("esri.layers.support.rasterDatasets.MRFRaster")],Z);const ps=Z;function hs(t){const e=t.fields,s=t.records,r=e.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",a=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),i=a.map(l=>l.name),n=[];let u=0,o=0;return s.forEach(l=>{const c={};for(c[r]=u++,o=1;o<i.length;o++)c[i[o]]=l[o-1];n.push({attributes:c})}),{displayFieldName:"",fields:a,features:n}}class ds{static get supportedVersions(){return[5]}static parse(e){const s=new DataView(e),r=3&s.getUint8(0);if(r!==3)return{header:{version:r},recordSet:null};const a=s.getUint32(4,!0),i=s.getUint16(8,!0),n=s.getUint16(10,!0),u={version:r,recordCount:a,headerByteCount:i,recordByteCount:n};let o=32;const l=[],c=[];let f;if(r===3){for(;s.getUint8(o)!==13;)f=String.fromCharCode(s.getUint8(o+11)).trim(),l.push({name:Te(new Uint8Array(e,o,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:s.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<a&&e.byteLength-o>n;){const p=[];s.getUint8(o)===32?(o+=1,l.forEach(h=>{if(h.type==="C")p.push(Te(new Uint8Array(e,o,h.length)).trim());else if(h.type==="N")p.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,h.length)).trim(),10));else if(h.type==="F")p.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,h.length)).trim()));else if(h.type==="D"){const y=String.fromCharCode.apply(null,new Uint8Array(e,o,h.length)).trim();p.push(new Date(parseInt(y.slice(0,4),10),parseInt(y.slice(4,6),10)-1,parseInt(y.slice(6,8),10)))}o+=h.length}),c.push(p)):o+=n}}return{header:u,fields:l,records:c,recordSet:hs({fields:l,records:c})}}}const ge=(t,e)=>{var s;return(s=t.get(e))==null?void 0:s.values},ae=(t,e)=>{var s,r;return(r=(s=t.get(e))==null?void 0:s.values)==null?void 0:r[0]};let G=class extends Q{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this._chunkSize=10485760,this.datasetFormat="TIFF"}async fetchRawTile(t,e,s,r={}){var i;if(!((i=this._headerInfo)!=null&&i.isSupported)||this.isBlockOutside(t,e,s))return null;const a=await this._fetchRawTiffTile(t,e,s,!1,r);if(a!=null&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(t,e,s,!0,r);n!=null&&n.pixels[0]instanceof Uint8Array&&(a.mask=n.pixels[0])}return a}async _open(t){var I,d,m,w;const e=t?t.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!s)throw new F("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:r,firstIFDPos:a,isBigTiff:i}=Bt(s),n=[],u={fileChunk:s,posIFD:a,fileOffset:0};await this._readIFDs(n,u,r,i?8:4,e);const{imageInfo:o,rasterInfo:l}=ms(n),c=Lt(n),f=At(n);if(this._headerInfo={littleEndian:r,isBigTiff:i,ifds:n,pyramidIFDs:c,maskIFDs:f,...o},this._set("rasterInfo",l),!o.isSupported)throw new F("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new F("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");l.isPseudoSpatialReference&&ee.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const p=(d=(I=n[0].get("PREDICTOR"))==null?void 0:I.values)==null?void 0:d[0];if(((w=(m=n[0].get("SAMPLEFORMAT"))==null?void 0:m.values)==null?void 0:w[0])===3&&p===2)throw new F("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:y,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!y){const x=await this._fetchAuxiliaryMetaData(t);x!=null&&gs(x,l)}g.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||y||(l.attributeTable=await this._fetchAuxiliaryTable(t),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),y&&this.updateImageSpaceRasterInfo(l),this.updateTileInfo()}async _validateOrFetchHeaderBuffer(t,e){let{fileChunk:s,fileOffset:r,posIFD:a}=t;return(a+8>=s.byteLength||a<0)&&(r=a+r,s=(await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:e})).data,a=0),{fileChunk:s,fileOffset:r,posIFD:a}}async _readIFDs(t,e,s,r=4,a){if(!e.posIFD)return null;e=await this._validateOrFetchHeaderBuffer(e,a);const i=await this._readIFD(e,s,Re,r,a);if(!(i!=null&&i.ifd))throw new F("tiffraster:open","cannot parse tiff header. failed to open url "+this.url);if(t.push(i.ifd),!i.nextIFD)return null;e.posIFD=i.nextIFD-e.fileOffset,await this._readIFDs(t,e,s,r,a)}async _readIFD(t,e,s=Re,r=4,a){var l,c;let{fileChunk:i,posIFD:n,fileOffset:u}=t;if(!t.fileChunk)return null;const o=Jt(i,e,n,u,s,r);if(o.success){const f=[];if((l=o.ifd)==null||l.forEach(p=>{p.values||f.push(p)}),f.length>0&&await this._fillOffsets(f,e,o.nextIFD,a),(c=o.ifd)==null?void 0:c.has("GEOKEYDIRECTORY")){const p=o.ifd.get("GEOKEYDIRECTORY"),h=p==null?void 0:p.values;if(h&&h.length>4){const y=h[0]+"."+h[1]+"."+h[2];n=p.valueOffset+6-u;const g=await this._validateOrFetchHeaderBuffer({fileChunk:i,posIFD:n,fileOffset:u},a),I=await this._readIFD(g,e,zt,2,a);p.data=I==null?void 0:I.ifd,p.data&&p.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[y]})}}return o}return o.requiredBufferSize?(i=(await this.request(this.url,{range:{from:u,to:u+n+o.requiredBufferSize+8},responseType:"array-buffer",signal:a})).data,i.byteLength<n+o.requiredBufferSize?null:(t.fileChunk=i,t.fileOffset=u,this._readIFD(t,e,s,r,a))):null}async _fillOffsets(t,e,s,r){const a=t.filter(c=>c.offlineOffsetSize!=null);if(a.length===0)return;const i=a.map(c=>c.offlineOffsetSize),n=Math.min.apply(null,i.map(c=>c[0])),u=Math.max.apply(null,i.map(c=>c[0]+c[1]));let o=i.length===1||u-n<=this._bufferSize;if(!o&&i.length>1&&(i.sort((c,f)=>c[0]-f[0]),o=i.reduce((c,f)=>c===f[0]?f[0]+f[1]:0,i[0][0])===u),o){const c=await this._fetchOffsets(n,Math.max(u,n+this._bufferSize),r);return void a.forEach(f=>_e(c,e,f,n))}const l=a.map(async c=>{const f=c.offlineOffsetSize,p=await this._fetchOffsets(f[0],f[1]+f[0],r);_e(p,e,c,f[0])});await Promise.all(l)}async _fetchOffsets(t,e,s){const r=[],a=this._chunkSize,i=Math.ceil((e-t)/a);let n=t;for(let l=0;l<i;l++)r.push(this.request(this.url,{range:{from:n,to:l===i-1?e:n+a-1},responseType:"array-buffer",signal:s})),n+=a;const u=await Promise.all(r);if(i===1)return u[0].data;const o=new Uint8Array(e-t+1);for(let l=0;l<i;l++)o.set(new Uint8Array(u[l].data),l*a);return o.buffer}async _fetchRawTiffTile(t,e,s,r,a={}){const i=this._getTileLocation(t,e,s,r);if(!i)return null;const{ranges:n,actualTileWidth:u,actualTileHeight:o,ifd:l}=i,c=n.map(v=>this.request(this.url,{range:v,responseType:"array-buffer",signal:a.signal})),f=await Promise.all(c),p=f.map(v=>v.data.byteLength).reduce((v,R)=>v+R),h=f.length===1?f[0].data:new ArrayBuffer(p),y=[0],g=[0];if(f.length>1){const v=new Uint8Array(h);for(let R=0,k=0;R<f.length;R++){const b=f[R].data;v.set(new Uint8Array(b),k),y[R]=k,k+=b.byteLength,g[R]=b.byteLength}}const{blockWidth:I,blockHeight:d}=this.getBlockWidthHeight(t),m=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:y,sizes:g},width:I,height:d,planes:null,pixelType:null});if(m==null)return null;let w,x,S;if(u!==I||o!==d){let v=m.mask;if(v)for(w=0;w<d;w++)if(S=w*I,w<o)for(x=u;x<I;x++)v[S+x]=0;else for(x=0;x<I;x++)v[S+x]=0;else for(v=new Uint8Array(I*d),m.mask=v,w=0;w<o;w++)for(S=w*I,x=0;x<u;x++)v[S+x]=1}return m}_getTileLocation(t,e,s,r=!1){const{firstPyramidLevel:a,blockBoundary:i}=this.rasterInfo.storageInfo,n=t===0?0:t-(a-1),{_headerInfo:u}=this;if(!u)return null;const o=r?u.maskIFDs[n]:n===0?u==null?void 0:u.ifds[0]:u==null?void 0:u.pyramidIFDs[n-1];if(!o)return null;const l=Ut(o,u),c=ge(o,"TILEOFFSETS");if(c===void 0)return null;const f=ge(o,"TILEBYTECOUNTS"),{minRow:p,minCol:h,maxRow:y,maxCol:g}=i[n];if(e>y||s>g||e<p||s<h)return null;const I=ae(o,"IMAGEWIDTH"),d=ae(o,"IMAGELENGTH"),m=ae(o,"TILEWIDTH"),w=ae(o,"TILELENGTH"),x=[];if(l){const{bandCount:S}=this.rasterInfo;for(let v=0;v<S;v++){const R=v*(y+1)*(g+1)+e*(g+1)+s;x[v]={from:c[R],to:c[R]+f[R]-1}}}else{const S=e*(g+1)+s;x.push({from:c[S],to:c[S]+f[S]-1})}for(let S=0;S<x.length;S++)if(x[S].from==null||!x[S].to||x[S].to<0)return null;return{ranges:x,ifd:o,actualTileWidth:s===g&&I%m||m,actualTileHeight:e===y&&d%w||w}}async _fetchAuxiliaryMetaData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return be(e)}catch{return null}}async _fetchAuxiliaryTable(t){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t==null?void 0:t.signal}),s=ds.parse(e);return s!=null&&s.recordSet?Me.fromJSON(s.recordSet):null}catch{return null}}};function ms(t){var N,P;const e=jt(t),{width:s,height:r,tileWidth:a,tileHeight:i,planes:n,pixelType:u,compression:o,firstPyramidLevel:l,maximumPyramidLevel:c,pyramidBlockWidth:f,pyramidBlockHeight:p,pyramidResolutions:h,tileBoundary:y,affine:g,metadata:I}=e,d=((N=e.extent.spatialReference)==null?void 0:N.wkt)||((P=e.extent.spatialReference)==null?void 0:P.wkid);let m=ue(d),w=!!e.isPseudoGeographic;m==null&&(w=!0,m=new B({wkid:3857}));const x=new W({...e.extent,spatialReference:m}),S=new Y(x?{x:x.xmin,y:x.ymax,spatialReference:m}:{x:0,y:0}),v=new we({blockWidth:a,blockHeight:i,pyramidBlockWidth:f,pyramidBlockHeight:p,compression:o,origin:S,firstPyramidLevel:l,maximumPyramidLevel:c,pyramidResolutions:h,blockBoundary:y}),R=new Y({x:(x.xmax-x.xmin)/s,y:(x.ymax-x.ymin)/r,spatialReference:m}),k=I?{BandProperties:I.bandProperties,DataType:I.dataType}:{};let b=null;const C=ae(t[0],"PHOTOMETRICINTERPRETATION"),M=ge(t[0],"COLORMAP");if(C<=3&&(M==null?void 0:M.length)>3&&M.length%3==0){b=[];const L=M.length/3;for(let E=0;E<L;E++)b.push([E,M[E]>>>8,M[E+L]>>>8,M[E+2*L]>>>8])}const _=new ce({width:s,height:r,bandCount:n,pixelType:u,pixelSize:R,storageInfo:v,spatialReference:m,isPseudoSpatialReference:w,keyProperties:k,extent:x,colormap:b,statistics:I?I.statistics:null});if(g!=null&&g.length&&(_.nativeExtent=new W({xmin:-.5,ymin:.5-r,xmax:s-.5,ymax:.5,spatialReference:m}),_.transform=new xe({polynomialOrder:1,forwardCoefficients:[g[2]+g[0]/2,g[5]-g[3]/2,g[0],g[3],-g[1],-g[4]]}),_.extent=_.transform.forwardTransform(_.nativeExtent),_.pixelSize=new Y({x:(x.xmax-x.xmin)/s,y:(x.ymax-x.ymin)/r,spatialReference:m}),v.origin.x=-.5,v.origin.y=.5),h){const{x:L,y:E}=_.pixelSize;h.forEach(A=>{A.x*=L,A.y*=E})}return{imageInfo:e,rasterInfo:_}}function gs(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=ye(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;const s=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new Y({x:(s.xmax-s.xmin)/e.width,y:(s.ymax-s.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=s}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}T([O()],G.prototype,"_files",void 0),T([O()],G.prototype,"_headerInfo",void 0),T([O()],G.prototype,"_bufferSize",void 0),T([O()],G.prototype,"_chunkSize",void 0),T([O({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),G=T([X("esri.layers.support.rasterDatasets.TIFFRaster")],G);const ys=G,D=new Map;D.set("MRF",{desc:"Meta Raster Format",constructor:ps}),D.set("TIFF",{desc:"GeoTIFF",constructor:ys}),D.set("RasterTileServer",{desc:"Raster Tile Server",constructor:us}),D.set("JPG",{desc:"JPG Raster Format",constructor:re}),D.set("PNG",{desc:"PNG Raster Format",constructor:re}),D.set("GIF",{desc:"GIF Raster Format",constructor:re}),D.set("BMP",{desc:"BMP Raster Format",constructor:re}),D.set("CovJSON",{desc:"COVJSON Raster Format",constructor:rs}),D.set("MEMORY",{desc:"In Memory Raster Format",constructor:Ie});class me{static get supportedFormats(){const e=new Set;return D.forEach((s,r)=>e.add(r)),e}static async open(e){var f;const{url:s,ioConfig:r,source:a,sourceJSON:i}=e;let n=e.datasetFormat??(r==null?void 0:r.datasetFormat);n==null&&(s.includes(".")?n=s.slice(s.lastIndexOf(".")+1).toUpperCase():((f=a==null?void 0:a.type)==null?void 0:f.toLowerCase())==="coverage"?n="CovJSON":a!=null&&a.extent&&a.pixelblocks&&(n="MEMORY")),n==="OVR"||n==="TIF"?n="TIFF":n==="JPG"||n==="JPEG"||n==="JFIF"?n="JPG":n==="COVJSON"&&(n="CovJSON"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const u={url:s,source:a,sourceJSON:i,datasetFormat:n,ioConfig:r??{bandIds:null,sampling:null}};if(Object.keys(u).forEach(p=>{u[p]==null&&delete u[p]}),n){if(!this.supportedFormats.has(n))throw new F("rasterfactory:open","not a supported format "+n);if(n==="CRF")throw new F("rasterfactory:open",`cannot open raster: ${s}`);const p=new(D.get(n)).constructor(u);return await p.open({signal:e.signal}),p}const o=Array.from(D.keys()).filter(p=>p!=="CovJSON"&&p!=="Memory");let l=0;const c=()=>{if(n=o[l++],!n||n==="CRF")return null;const p=new(D.get(n)).constructor(u);return p.open({signal:e.signal}).then(()=>p).catch(()=>c())};return c()}static register(e,s,r){D.has(e.toUpperCase())||D.set(e.toUpperCase(),{desc:s,constructor:r})}}let $=class extends qe(Ve(Ye(Xe(It(Ke(mt(yt(Ze(dt(Qe(et(tt(st))))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.graphicOrigin=new Qt(this),this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.fields=null,this.source=void 0,this._debouncedSaveOperations=at(async(e,s,r)=>{const{save:a,saveAs:i}=await it(()=>import("./imageryUtils-t2XYkdCc.js"),__vite__mapDeps([0,1,2,3,4,5,6,7]));switch(e){case 0:return a(this,s);case 1:return i(this,r,s)}})}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(rt).then(()=>this._openRaster(e))),Promise.resolve(this)}set elevationInfo(t){(t==null?void 0:t.mode)!=="relative-to-scene"&&this._set("elevationInfo",t),this._validateElevationInfo(t)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var i,n;const t=[bt("Pixel Value"),vt("Raw Pixel Value")],e=((i=this.raster)==null?void 0:i.rasterInfo)??this.serviceRasterInfo,s=e==null?void 0:e.attributeTable;if(s){const u=St(s);t.push(...u)}const r=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((r==="vector-magdir"||r==="vector-uv")&&a!=null){const u=(n=a.variables[0].unit)==null?void 0:n.trim(),o=Tt(u),l=Rt();t.push(o,l)}if(a){const u=_t(a);t.push(...u)}return t}get renderer(){return super.renderer}set renderer(t){super.renderer=t}createPopupTemplate(t){const{rasterFields:e}=this,s=(t==null?void 0:t.visibleFieldNames)??new Set(e.map(({name:i})=>i).filter(i=>i!==Ot.rawServicePixelValue)),r=nt({fields:e,title:this.title},{...t,visibleFieldNames:s}),{rasterInfo:a}=this.raster;return r!=null&&r.fieldInfos&&a&&Ct(r.fieldInfos,a),r}async generateRasterInfo(t,e){var s;if(t=ot($e,t),await this.load(),!t||((s=t.functionName)==null?void 0:s.toLowerCase())==="none")return this.serviceRasterInfo;try{const{rasterInfo:r}=await this._openFunctionRaster(t,e);return r}catch(r){throw r instanceof F?r:new F("imagery-tile-layer","the given raster function is not supported")}}async save(t){return this._debouncedSaveOperations(0,t)}async saveAs(t,e){return this._debouncedSaveOperations(1,e,t)}supportsWrite(){const t=this._primaryRasters[0]??this.raster;return!!(this.loaded?t.datasetFormat==="RasterTileServer"&&(t.tileType==="Raster"||t.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))}write(t,e){if(this.supportsWrite())return super.write(t,e);if(e!=null&&e.messages){const s=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new F("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}async _openRaster(t){var r;let e=!1;if(this.raster)await this._openFromRaster(this.raster,t),e=Mt(this.raster),!e&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:a,rasterFunction:i,source:n}=this;if(!a&&!n)throw new F("imagery-tile-layer:open","missing url or source parameter");n?await this._openFromSource(n,t):i?await this._openFromUrlWithRasterFunction(a,i,t):await this._openFromUrl(a,t)}const s=this.raster.rasterInfo;if(!s)throw new F("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const a=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(a,{origin:"service"})}else this.read({tileInfo:(r=this.serviceRasterInfo)==null?void 0:r.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(lt(()=>this.customParameters,a=>{this.raster&&(this.raster.ioConfig.customFetchParameters=a)}))}async _openFromRaster(t,e){t.rasterInfo||await t.open({signal:e}),this._primaryRasters=Pt(t),this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(t,e,s){const r=[t];e&&Yt(e.toJSON(),r);const a=await Promise.all(r.map(n=>me.open({url:n,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:s}))),i=a.findIndex(n=>n==null);if(i>-1)throw new F("imagery-tile-layer:open",`cannot open raster: ${r[i]}`);return this._primaryRasters=a,this._initializeWithFunctionRaster(e)}async _openFromUrl(t,e){const s=await me.open({url:t,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new F("imagery-tile-layer:open",`cannot open raster: ${t}`);this._primaryRasters=[s],this.raster=s}async _openFromSource(t,e){var i;const s="the tiled imagery data source is not supported",r=((i=t.type)==null?void 0:i.toLowerCase())==="coverage"?"CovJSON":t.extent&&t.pixelBlock?"MEMORY":null;if(!r)throw new F("imagery-tile-layer:open",s);r==="MEMORY"&&(t={...t,pixelBlock:void 0,pixelBlocks:[t.pixelBlock]});const a=await me.open({url:"",source:t,datasetFormat:r,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(a==null)throw new F("imagery-tile-layer:open",s);this._primaryRasters=[a],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=a}async _openFunctionRaster(t,e){var i;const s={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>s[n.url]=n);const r=Xt(((i=t.functionDefinition)==null?void 0:i.toJSON())??t.toJSON(),s),a=new gt({rasterFunction:r});return await a.open(e),a}async _initializeWithFunctionRaster(t,e){try{this.raster=await this._openFunctionRaster(t,e)}catch(s){s instanceof F&&ee.getLogger(this).error("imagery-tile-layer:open",s.message),ee.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}_validateElevationInfo(t){Oe(ee.getLogger(this),Kt("ImageryTile layers","relative-to-scene",t)),Oe(ee.getLogger(this),Zt("ImageryTile layers",t))}};T([O({clonable:!1})],$.prototype,"_primaryRasters",void 0),T([O({type:ct,value:null,json:{name:"layerDefinition.elevationInfo",write:!0,origins:{"portal-item":{read:!1,write:!1},"web-map":{read:!1,write:!1}}}})],$.prototype,"elevationInfo",null),T([O({readOnly:!0,clonable:!1})],$.prototype,"graphicOrigin",void 0),T([O(ut)],$.prototype,"legendEnabled",void 0),T([O({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$.prototype,"isReference",void 0),T([O({type:["show","hide"]})],$.prototype,"listMode",void 0),T([O({json:{read:!0,write:!0}})],$.prototype,"blendMode",void 0),T([O({type:$e,json:{name:"renderingRule",write:!0}})],$.prototype,"rasterFunction",void 0),T([O()],$.prototype,"sourceJSON",void 0),T([O({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],$.prototype,"version",void 0),T([O({readOnly:!0,json:{read:!1}})],$.prototype,"type",void 0),T([O({type:["ArcGISTiledImageServiceLayer"]})],$.prototype,"operationalLayerType",void 0),T([O({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,s){e[s]=!t}}}})],$.prototype,"popupEnabled",void 0),T([O({type:ft,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],$.prototype,"popupTemplate",void 0),T([O({readOnly:!0})],$.prototype,"defaultPopupTemplate",null),T([O(pt)],$.prototype,"screenSizePerspectiveEnabled",void 0),T([O({readOnly:!0,type:[Se]})],$.prototype,"fields",void 0),T([O({readOnly:!0,type:[Se]})],$.prototype,"rasterFields",null),T([O({constructOnly:!0})],$.prototype,"source",void 0),$=T([X("esri.layers.ImageryTileLayer")],$);const Ws=$;export{Ws as default};
