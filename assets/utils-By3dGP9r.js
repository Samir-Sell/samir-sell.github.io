import{bS as O,bT as z,N as C,e8 as G,b6 as A,a9 as R,e9 as S,ea as U,eb as Y,b as j,ec as D}from"./index-7LVg-iY6.js";import{j as V}from"./quantizationUtils-C4h4Tggy.js";import{U as _}from"./utils-Z5PohkhY.js";import{m as v,B as L}from"./utils-CTwd30qW.js";let f=null;const P=/^(?<hh>([01][0-9])|(2[0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?(\.(?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function X(e,t,n,i){const r=G(n)?A(n):null,o=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new R(l.geometry);return V(t,a,a),l.geometry=r?k(a,o??0,i[0]):a,l})}function ee(e,t=18,n,i,r){const o=new Float64Array(i*r);t=Math.round(D(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const N=S(n);for(const{geometry:p,attributes:F}of e){const{x:g,y:c}=p,b=Math.max(0,g-t),$=Math.max(0,c-t),M=Math.min(r,c+t),w=Math.min(i,g+t),h=+N(F);for(let m=$;m<M;m++)for(let d=b;d<w;d++){const x=m*i+d,I=Y(d-g,m-c,t)*h,u=o[x]+=I;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:o}=t.groups;return Number(n)*U.hours+Number(i)*U.minutes+Number(r)*U.seconds+Number(o||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:o,fieldDelimiter:l,fieldInfos:a,timeZone:N}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&O(p),g=!!p&&_(p),c=e.valueExpression,b=e.normalizationType,$=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await z();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new C(h.spatialReference)}):null}const x=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const y=u.attributes;let s;if(c){const T=I?Object.assign({},u,{layer:I}):u,E=f.createExecContext(T,d,N);s=f.executeFunction(m,E)}else y&&(s=y[i],r?(s=`${v(s)}${l}${v(y[r])}`,o&&(s=`${s}${l}${v(y[o])}`)):typeof s=="string"&&n&&(g?s=s?new Date(s).getTime():null:F&&(s=s?q(s):null)));if(b&&typeof s=="number"&&isFinite(s)){const T=y&&parseFloat(y[$]);s=L(s,b,T,M)}w.push(s)}),w}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let o="";return o=i&&r?B(i,r):i||r,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new j(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function se(e,t,n){const i=W({layer:e,fields:t});if(i.length)return new j(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=Z({layer:e,fields:t});return r.length?new j(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function W(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Z(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ne as F,te as I,re as M,ie as N,se as T,B as U,q as b,ee as w,X as x};
