import{iI as C,aA as p,aG as M,iJ as u,c_ as d,cZ as T,iK as E,aJ as F,iL as U,iM as R,iN as N,iO as b,iP as A,o as B}from"./index-MBf2dn39.js";import{o as y}from"./BufferObject-DJmVNFwp.js";class ${constructor(t,e=0,i=e,r=!1,n=1){this.internalFormat=t,this.width=e,this.height=i,this.multisampled=r,this.samples=n}}function P(s){return s.width<=0||s.height<=0||s.internalFormat==null?0:s.width*s.height*C(s.internalFormat)}const z=!!M("esri-tests-disable-gpu-memory-measurements");class w{constructor(t,e){this._context=t,this._descriptor=e,this.type=2,this._context.instanceCounter.increment(p.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:r,height:n,internalFormat:h,multisampled:a}=e;a?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,h,r,n):i.renderbufferStorage(i.RENDERBUFFER,h,r,n),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return z?0:P(this._descriptor)}resize(t,e){const i=this._descriptor;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(p.Renderbuffer,this),this._context=null)}}const v=()=>B.getLogger("esri.views.webgl.FramebufferObject");var l;let j=(l=class{constructor(t,e,i){if(this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(p.FramebufferObject,this),e!=null){const r=H(t,e);r!=null&&(this._colorAttachments.set(u,r),f(r)?this._validateTextureDescriptor(r.descriptor):this._validateRenderbufferDescriptor(r.descriptor)),this._validateColorAttachmentPoint(u)}if(i!=null)if(L(i))this._depthStencilTexture=f(i)?i:new d(t,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const r=S(i)?i:new w(t,i);this._depthStencilBuffer=r,this._validateRenderbufferDescriptor(r.descriptor)}}dispose(){var n,h;const{_colorAttachments:t,_glName:e}=this;if(t.size===0&&!this._depthStencilBuffer&&!this._depthStencilTexture&&!e)return;const{_context:i}=this,r=i.getBoundFramebufferObject();t.forEach((a,c)=>{var o;return(o=this.detachColorTexture(c))==null?void 0:o.dispose()}),(n=this.detachDepthStencilBuffer())==null||n.dispose(),(h=this.detachDepthStencilTexture())==null||h.dispose(),i.gl.deleteFramebuffer(e),this._glName=null,i.bindFramebuffer(r===this?null:r),i.instanceCounter.decrement(p.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){const t=this._colorAttachments.get(u);return f(t)?t:null}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){var e;const t=this._colorAttachments.get(u)??this._depthStencilTexture??this._depthStencilBuffer;return((e=t==null?void 0:t.descriptor)==null?void 0:e.width)??0}get height(){var e;const t=this._colorAttachments.get(u)??this._depthStencilTexture??this._depthStencilBuffer;return((e=t==null?void 0:t.descriptor)==null?void 0:e.height)??0}get usedMemory(){var t;return[...this._colorAttachments].reduce((e,[i,r])=>e+r.usedMemory,((t=this.depthStencil)==null?void 0:t.usedMemory)??0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&f(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t,e=u){var r;if(!t)return;this._validateColorAttachmentPoint(e);const{descriptor:i}=t;this._validateTextureDescriptor(i),(r=this.detachColorTexture(e))==null||r.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)}detachColorTexture(t=u){const e=this._colorAttachments.get(t);if(!e)return;const i=f(e);return this._initialized&&this._context.temporaryBindFramebufferObject(this,()=>{if(i)this._framebufferTexture2D(null,t);else{const r=this._context.gl;r.framebufferRenderbuffer(r.FRAMEBUFFER,t,r.RENDERBUFFER,null)}}),this._colorAttachments.delete(t),i?e:void 0}setColorTextureTarget(t,e=u,i=0){const r=this._colorAttachments.get(e);r&&(t===35866?this._framebufferTextureLayer(r.glName,e,36160,0,i):this._framebufferTexture2D(r.glName,e,t,36160,0))}attachDepthStencil(t){if(t)switch(t.type){case 1:return this._attachDepthStencilTexture(t);case 2:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){var n;if(t==null)return;const{descriptor:e}=t,{pixelFormat:i,dataType:r}=e;i===34041||i===6402?i!==34041||r===T.UNSIGNED_INT_24_8?i!==6402||r===T.UNSIGNED_INT||r===T.UNSIGNED_SHORT?(this._validateTextureDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,m(i))),(n=this._depthStencilTexture)==null||n.dispose(),this._depthStencilTexture=t):console.error("Depth texture must have data type of UNSIGNED_INT or UNSIGNED_SHORT!"):console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"):console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!")}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&this._context.temporaryBindFramebufferObject(this,()=>{this._framebufferTexture2D(null,m(t.descriptor.pixelFormat))}),this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(t==null)return;const e=t.descriptor;if(this._validateRenderbufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const{gl:i}=this._context,r=this._getGLAttachmentPoint(e);i.framebufferRenderbuffer(36160,r,i.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){const{_context:e}=this,i=e.getBoundFramebufferObject();e.bindFramebuffer(this);const{gl:r}=e,n=this._getGLAttachmentPoint(t.descriptor);r.framebufferRenderbuffer(36160,n,r.RENDERBUFFER,null),e.bindFramebuffer(i)}return this._depthStencilBuffer=null,t}invalidateAttachments(t){const{_context:e}=this;e.temporaryBindFramebufferObject(this,()=>e.gl.invalidateFramebuffer(36160,t),!0)}copyToTexture(t,e,i,r,n,h,a){(t<0||e<0||n<0||h<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const c=a.descriptor;a.descriptor.target!==3553&&console.error("Texture target must be TEXTURE_2D!"),((c==null?void 0:c.width)==null||(c==null?void 0:c.height)==null||t+i>this.width||e+r>this.height||n+i>c.width||h+r>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const o=this._context,g=o.bindTexture(a,d.TEXTURE_UNIT_FOR_UPDATES);o.setActiveTexture(d.TEXTURE_UNIT_FOR_UPDATES),o.bindFramebuffer(this),o.gl.copyTexSubImage2D(3553,0,n,h,t,e,i,r),o.bindTexture(g,d.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,n,h,a){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),a||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,n,h,a)}async readPixelsAsync(t,e,i,r,n,h,a){const{gl:c}=this._context,o=y.createPixelPack(this._context,35041,a.byteLength);this._context.bindBuffer(o);const g=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),c.readPixels(t,e,i,r,n,h,0),this._context.unbindBuffer(35051),this._context.bindFramebuffer(g),await o.getSubDataAsync(a),o.dispose()}resize(t,e){var r,n;if(this.width===t&&this.height===e)return;const i={width:t,height:e};if(_(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach(h=>h.resize(i.width,i.height)),(r=this._depthStencilTexture)==null||r.resize(i.width,i.height),this._initialized&&(_(i,this._context.parameters.maxRenderbufferSize),(n=this._depthStencilBuffer)==null||n.resize(i.width,i.height),E())){const{gl:h}=this._context;h.checkFramebufferStatus(36160)!==h.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!")}}initializeAndBind(t=36160){const{gl:e}=this._context;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=e.createFramebuffer();if(e.bindFramebuffer(t,i),this._colorAttachments.forEach((r,n)=>{if(f(r)){const h=D(r);h===35866?this._framebufferTextureLayer(r.glName,n,t,0,0):this._framebufferTexture2D(r.glName,n,h,t)}else if(S(r)){const h=this._context.gl;h.framebufferRenderbuffer(t,n,h.RENDERBUFFER,r.glName)}}),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,r,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else if(this._depthStencilTexture){const r=m(this._depthStencilTexture.descriptor.pixelFormat);this._framebufferTexture2D(this._depthStencilTexture.glName,r,D(this._depthStencilTexture),t)}E()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(t,e=u,i=3553,r=36160,n=0){this._context.gl.framebufferTexture2D(r,e,i,t,n)}_framebufferTextureLayer(t,e=u,i=36160,r=0,n=0){this._context.gl.framebufferTextureLayer(i,e,t,r,n)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(36160,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=F(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,m(this._depthStencilTexture.descriptor.pixelFormat))),this._depthStencilTexture=F(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==3553&&t.target!==34067&&t.target!==35866&&console.error("Texture type must be TEXTURE_2D, TEXTURE_2D_ARRAY or TEXTURE_CUBE_MAP!"),_(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderbufferDescriptor(t){_(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case b.DEPTH_COMPONENT16:case b.DEPTH_COMPONENT24:case b.DEPTH_COMPONENT32F:return A;case R.DEPTH24_STENCIL8:case R.DEPTH32F_STENCIL8:return N;case 36168:return U;default:return u}}_validateColorAttachmentPoint(t){if(l._MAX_COLOR_ATTACHMENTS===-1){const{gl:i}=this._context;l._MAX_COLOR_ATTACHMENTS=i.getParameter(i.MAX_COLOR_ATTACHMENTS)}const e=t-u;e+1>l._MAX_COLOR_ATTACHMENTS&&B.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${l._MAX_COLOR_ATTACHMENTS} color attachments`)}},l._MAX_COLOR_ATTACHMENTS=-1,l);function f(s){return x(s)===1}function S(s){return x(s)===2}function L(s){return f(s)||O(s)}function O(s){return x(s)===0}function I(s){return x(s)===3||s!=null&&"samples"in s}function x(s){return s!=null&&"type"in s?s.type:null}function H(s,t){return f(t)||S(t)?t:O(t)?new d(s,t):I(t)?new w(s,t):null}function _(s,t){const e=Math.max(s.width,s.height);if(e>t){v().warnOnce(`Resizing FBO attachment size ${s.width}x${s.height} to device limit ${t}`);const i=t/e;return s.width=Math.round(s.width*i),s.height=Math.round(s.height*i),!1}return!0}function D(s){return s.descriptor.target===34067?34069:s.descriptor.target===35866?35866:3553}function m(s){return s===6402?A:N}export{$ as i,j as m,w as s};
