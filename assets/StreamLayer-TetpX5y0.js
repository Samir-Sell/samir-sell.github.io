const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/streamLayerUtils-CstGNlfN.js","assets/utils-CO6VGsot.js","assets/index-7LVg-iY6.js","assets/index-KamasC9I.css","assets/originUtils-BVted3L-.js","assets/jsonContext-X78iQOqb.js","assets/saveUtils-CZCdPUoQ.js","assets/createConnection-LHj_KBIX.js","assets/query-BAoHL1WT.js","assets/pbfQueryUtils-Di9m46Vy.js","assets/pbf-Dt0FYVfe.js","assets/memoryEstimations-OaiSRTQo.js","assets/OptimizedFeature-B76Ba1pI.js","assets/OptimizedFeatureSet-BR8EEvDc.js","assets/queryZScale-DlDf33Wr.js"])))=>i.map(i=>d[i]);
import{j4 as O,kx as F,ky as _,j5 as P,z as D,D as t,F as s,Z as $,kK as E,kL as A,kM as L,dl as N,fA as U,kO as C,dm as V,fk as G,fb as J,fc as z,fd as M,fe as W,y as q,dn as H,N as x,fB as Q,_ as f,b as p,f as Z,kP as g,k_ as B,m as K,k$ as X,eJ as y,h7 as Y,kQ as ee,c7 as te,H as ie,bx as se,kR as re,dp as oe,kS as ne,cO as ae,kV as le,kT as de,kU as pe,fm as ce,fH as v,l0 as ue,l1 as he,kW as ye,d7 as me,kX as fe,kY as ge,bl as b,g as ve,kZ as be,cs as we}from"./index-7LVg-iY6.js";import{l as Ie}from"./ArcGISService-1aWK0Y4t.js";import{_ as Se}from"./streamLayerUtils-DFlbJ4P1.js";import{t as $e}from"./styleUtils-C0RNObXb.js";const xe=Symbol("isStreamGraphicOrigin");var w;class ke extends O{get[(w=xe,F)](){return this.layer}get[_](){return this.layer}get[P](){return this.layer}constructor(r){super(),this[w]=!0,this.type="stream",this.layer=r}get id(){return this.layer.id}}var m,c;let d=(c=class extends D{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new m({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}},m=c,c);t([s({type:Number,json:{write:!0}})],d.prototype,"age",void 0),t([s({type:Number,json:{write:!0}})],d.prototype,"ageReceived",void 0),t([s({type:Number,json:{write:!0}})],d.prototype,"displayCount",void 0),t([s({type:Number,json:{write:!0}})],d.prototype,"maxObservations",void 0),d=m=t([$("esri.layers.support.PurgeOptions")],d);const I=ne();function S(e,r){return new p("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${r}`,{layer:e})}let i=class extends E(A(L(N(U(C(V(G(Ie(J(z(M(W(q(H)))))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.graphicOrigin=new ke(this),this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new d,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=x.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=Q(async(r,o,a)=>{const{save:n,saveAs:l}=await f(()=>import("./streamLayerUtils-CstGNlfN.js"),__vite__mapDeps([0,1,2,3,4,5,6]));switch(r){case 0:return n(this,o);case 1:return l(this,a,o)}})}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new p("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(Z).then(()=>this._fetchService(r))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const r=this._normalizeFeatureReduction(e);this._set("featureReduction",r)}set renderer(e){g(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,r,o){var n;r=r.layerDefinition||r;const a=(n=r.drawingInfo)==null?void 0:n.renderer;if(a){const l=B(a,r,o)||void 0;return l||K.getLogger(this).error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:o}),l}return X(r,o)}async connect(e){const[{createConnection:r}]=await Promise.all([f(()=>import("./createConnection-LHj_KBIX.js"),__vite__mapDeps([7,2,3,8,9,10,11,12,13,14])),this.load()]),o=this.geometryType?y.toJSON(this.geometryType):null,{customParameters:a=null,definitionExpression:n=null,geometryDefinition:l=null,maxReconnectionAttempts:k=0,maxReconnectionInterval:j=20,spatialReference:R=this.spatialReference}=e||this.createConnectionParameters(),u=r(this.parsedUrl,this.spatialReference,R,o,n,l,k,j,a??void 0),T=Y([this.on("send-message-to-socket",h=>u.sendMessageToSocket(h)),this.on("send-message-to-client",h=>u.sendMessageToClient(h))]);return u.once("destroy",T.remove),u}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return ee(this,e)}createQuery(){const e=new te;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,r){if(!this.fields)return null;let o=null;return this.fields.some(a=>(a.name===e&&(o=a.domain),!!o)),o}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,r){return this._debouncedSaveOperations(1,r,e)}write(e,r){const o=r==null?void 0:r.messages;return this.webSocketUrl?(o==null||o.push(S(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,r):(o==null||o.push(S(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){var r,o,a;if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:n}=await ie(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=n}}else{if(!((r=this.timeInfo)!=null&&r.trackIdField))throw new p("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const n=(o=this.fields.find(l=>l.type==="oid"))==null?void 0:o.name;if(!n)throw new p("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=n}if(!this.fields)throw new p("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(n=>n.name===this.objectIdField)||this.fields.push(new se({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new p("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(a=this.portalItem)==null?void 0:a.portal,url:this.parsedUrl}),g(this.renderer,this.fieldsIndex),re(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField=Se),$e(this,{origin:"service"})}};t([s({type:String})],i.prototype,"copyright",void 0),t([s({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([s({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([s({type:String})],i.prototype,"displayField",void 0),t([s({type:oe})],i.prototype,"elevationInfo",void 0),t([s({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([s(I.fields)],i.prototype,"fields",void 0),t([s(I.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([s({type:ae,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([s({type:y.apiValues,json:{read:{reader:y.read}}})],i.prototype,"geometryType",void 0),t([s({readOnly:!0,clonable:!1})],i.prototype,"graphicOrigin",void 0),t([s(le)],i.prototype,"labelsVisible",void 0),t([s({type:[pe],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:de},write:!0}})],i.prototype,"labelingInfo",void 0),t([s(ce)],i.prototype,"legendEnabled",void 0),t([s({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],i.prototype,"listMode",void 0),t([s({type:v})],i.prototype,"maxReconnectionAttempts",void 0),t([s({type:v})],i.prototype,"maxReconnectionInterval",void 0),t([s(ue)],i.prototype,"maxScale",void 0),t([s(he)],i.prototype,"minScale",void 0),t([s({type:String})],i.prototype,"objectIdField",void 0),t([s({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([s({readOnly:!0})],i.prototype,"outFields",void 0),t([s(ye)],i.prototype,"popupEnabled",void 0),t([s({type:me,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([s({type:d})],i.prototype,"purgeOptions",void 0),t([s({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([s({types:ge,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:fe,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([b("service","renderer",["drawingInfo.renderer","defaultSymbol"]),b("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([s((()=>{const e=ve(be);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],i.prototype,"screenSizePerspectiveEnabled",void 0),t([s()],i.prototype,"sourceJSON",void 0),t([s({type:x,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([s({json:{read:!1}})],i.prototype,"type",void 0),t([s(we)],i.prototype,"url",void 0),t([s({type:Number})],i.prototype,"updateInterval",void 0),t([s({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([s({type:String})],i.prototype,"webSocketUrl",void 0),i=t([$("esri.layers.StreamLayer")],i);const Fe=i;export{Fe as default};
