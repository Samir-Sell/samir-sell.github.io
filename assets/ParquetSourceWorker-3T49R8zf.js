import{N as B,b as c,bx as D,O as L,m as Y,ar as K,hT as b,d1 as _,dC as E,hU as X,dD as ee,eq as te,ai as G,d4 as J,hV as se,ag as re,d2 as q,ee as ae}from"./index-DalZQxea.js";import{QueueProcessor as oe}from"./QueueProcessor-DZuEN6N2.js";import{Y as ie,E as R,W as ne}from"./QueryEngine-DIyR0L1R.js";import{s as ue,a as le,y as pe,f as fe,p as M}from"./parquetUtils-BTKr_aks.js";import{d as N,w as ce}from"./parquet-CDZRdxmy.js";import{r as de}from"./FeatureStoreQueryAdapter-DMZkEvLi.js";import{i as j,t as z,n as me}from"./SourceChunkStore-s3Utof9w.js";import{i as ye}from"./FeatureMetadata-CJzVmzzu.js";import"./featureConversionUtils-BmwuvCkf.js";import"./OptimizedFeature-CIbaylOR.js";import"./memoryEstimations-8aoGHWgf.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./WhereClauseCache-CKxzw6YW.js";import"./WhereClause-D55gKuCF.js";import"./timeSupport-DE744COr.js";import"./queryUtils-C0kkxnUU.js";import"./quantizationUtils-Cg8aT734.js";import"./utils-s78bCeR-.js";import"./utils-CFjJWc1n.js";import"./utils-DBe9O2nJ.js";import"./ClassBreaksDefinition-D7Y6k7cL.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-UypphbZw.js";import"./locationUtils-CDRR2p7m.js";import"./labelPoint-Cxwr-WO2.js";function he(a){switch(a.type){case"wkb":return le.fromJSON(a);case"location":return ue.fromJSON(a)}}const S=new de,ge=4,F=8e3,k="__OBJECTID";class $e{constructor(){this._fileInfos=new Map,this._queue=new oe({concurrency:ge,process:(e,s)=>this._executeQuery(e,s)})}async load(e){var m,d,y,O,v,Q,A,T;const s=e.spatialReference?B.fromJSON(e.spatialReference):void 0;if(s&&!s.isWGS84&&!s.isWebMercator)throw new c("parquet:unsupported-projection","Only WGS84 and Web Mercator are supported");const t=await pe({urls:new L(e.urls),fields:(m=e.fields)==null?void 0:m.map(p=>D.fromJSON(p)),encoding:e.encoding?he(e.encoding):e.encoding,geometryType:e.geometryType?fe(e.geometryType):null,spatialReference:s},{customParameters:e.customParameters});let r;if(t.geometryType&&t.encoding){if(!t.spatialReference)throw new c("parquet:unsupported","SpatialReference must be defined");if(!t.spatialReference.isGeographic&&!t.spatialReference.isWebMercator)throw new c("parquet:unsupported-projection","Only WGS84 and Web Mercator are supported");t.spatialReference.isGeographic&&!t.spatialReference.isWGS84&&(Y.getLogger("parquet:unsupported-projection").warn("Found a geographic projection that is not WGS84. Handling as WGS84.",{spatialReference:t.spatialReference}),t.spatialReference=B.WGS84),r={geometryType:M(t.geometryType),spatialReference:t.spatialReference.toJSON(),encoding:t.encoding.toJSON(),displayOptimization:t.displayOptimization}}this.setCustomParameters(e.customParameters),this._geometryInfo=r;const o=e.urls;for(const p of o){const w=await N(p,{geometryInfo:r,outSpatialReference:null,getCustomParameters:()=>this._customParameters});this._fileInfos.set(p,{index:this._fileInfos.size,file:w})}this._capabilities=W(await this.getFileStatistics());const i=(d=this._fileInfos.values().next().value)==null?void 0:d.file;if(!i)return{layerDefinition:{},capabilities:W(null)};const{fields:n}=t;if(n==null)throw new c("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer fields",n);n.push(new D({name:k,type:"oid",alias:k}));const u={fields:n.map(p=>({...p.toJSON(),column:i.columnForFieldName(p.name)})),timeZoneByFieldName:null},l=K.fromJSON(u);this._fieldsIndex=l;const f=M(t.geometryType??"point");if(this._metadata=ye.createFeature({fieldsIndex:u,geometryType:f,featureIdInfo:{type:"object-id",fieldName:"rowId"},subtypes:null,subtypeField:null,types:null,typeIdField:null,globalIdField:null,spatialReference:t.spatialReference,outSpatialReference:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null}),this._queryEngineParams={fieldsIndex:this._metadata.fieldsIndex,geometryType:(r==null?void 0:r.geometryType)??"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"rowId"},hasM:!1,hasZ:!1,spatialReference:(r==null?void 0:r.spatialReference)??{wkid:4326},aggregateAdapter:null,timeInfo:null,definitionExpression:null},t.spatialReference&&(this._fullExtent=we(this._fileInfos.values(),t.spatialReference.toJSON())),this._fullExtent==null&&((y=t.encoding)==null?void 0:y.type)==="location"){const{latitudeFieldName:p,longitudeFieldName:w}=t.encoding,V=(O=this._fieldsIndex.get(p))==null?void 0:O.column,$=(v=this._fieldsIndex.get(w))==null?void 0:v.column,h=b(_(),q);for(const H of this._fileInfos.values())for(const x of H.file.rowGroups()){const g={stack:[],error:void 0,hasError:!1};try{const I=E(g,x.columnDescriptorForAttribute(V),!1),P=E(g,x.columnDescriptorForAttribute($),!1),Z=[P.minValue(),I.minValue(),P.maxValue(),I.maxValue()];X(h,Z),x.free()}catch(I){g.error=I,g.hasError=!0}finally{ee(g)}}this._fullExtent={xmin:h[0],ymin:h[1],xmax:h[3],ymax:h[4],spatialReference:(Q=t.spatialReference)==null?void 0:Q.toJSON()}}return{capabilities:this._capabilities,layerDefinition:{fields:(A=t.fields)==null?void 0:A.map(p=>p.toJSON()),drawingInfo:te(f),extent:this._fullExtent??void 0,geometryType:f,encoding:(T=t.encoding)==null?void 0:T.toJSON(),displayOptimization:t.displayOptimization}}}destroy(){for(const e of this._fileInfos.values())e.file.free();this._fileInfos.clear(),this._queue.destroy()}setCustomParameters(e){this._customParameters=e}getFileStatistics(){if(!this._fileInfos.size)return null;const e=Array.from(this._fileInfos.values()).reduce((s,t)=>s+t.file.byteLength(),0);return{featureCount:this._getFeatureCount(),byteLength:e}}async updateFiles(e){const s=new Set(e);for(const[t,r]of this._fileInfos.entries())s.has(t)?s.delete(t):(r.file.free(),this._fileInfos.delete(t));for(const t of s){const r=await N(t,{geometryInfo:this._geometryInfo,outSpatialReference:null,getCustomParameters:()=>this._customParameters});this._fileInfos.set(t,{index:this._fileInfos.size,file:r})}}async queryFeatures(e,s){return this._validateQuery(e),xe(e)||(e.resultRecordCount=e.resultRecordCount?Math.min(e.resultRecordCount,8e3):8e3,e.resultOffset=e.resultOffset??0),(e.outStatistics||e.returnDistinctValues)&&delete e.returnGeometry,(await this._enqueueQuery(e,s)).createQueryResponse()}async queryFeatureCount(e,s){return this._validateQuery(e),C(e)?(delete e.outFields,delete e.returnGeometry,(await this._enqueueQuery(e,s)).createQueryResponseForCount()):this._getFeatureCount()}async queryObjectIds(e,s){return this._validateQuery(e),C(e)?(e.resultRecordCount=e.resultRecordCount?Math.min(e.resultRecordCount,8e3):8e3,e.resultOffset=e.resultOffset??0,delete e.returnGeometry,delete e.outFields,(await this._enqueueQuery(e,s)).items.map(t=>t.getObjectId())):Array.from({length:this._getFeatureCount()},(t,r)=>r)}async queryExtent(e,s){if(this._validateQuery(e),this._fullExtent&&!C(e))return{count:this._getFeatureCount(),extent:this._fullExtent};const t=G(this._metadata.spatialReference);e.returnGeometry=!0,delete e.outFields;const r=b(_(),q),o=_(),i=await this._enqueueQuery(e,s);let n=0;for(const u of i.items)u.getBounds(o)&&(J(r,o),n+=1);return{count:n,extent:ie(r,t,e.outSR?G(e.outSR):t,t,!1)}}_getFeatureCount(){return Array.from(this._fileInfos.values()).reduce((e,s)=>e+s.file.numRows(),0)}_validateQuery(e){var s;if(!this._capabilities.query.supportsStatistics&&e.outStatistics)throw new c("parquet:unsupported","Statistics queries are not supported",{query:e});if(!this._capabilities.query.supportsOrderBy&&((s=e.orderByFields)!=null&&s.length))throw new c("parquet:unsupported","Queries using orderBy are not supported",{query:e});if(!this._capabilities.query.supportsDistinct&&e.returnDistinctValues)throw new c("parquet:unsupported","Queries using returnDistinctValues are not supported",{query:e})}async*_fetchChunks(e,s){for(const t of this._fileInfos.values()){const r=t.file.numRows(),o=Math.ceil(r/F);for(let i=0;i<o;i++){const n=i*F,u=await t.file.readChunk(n,F,e.fields,e.returnGeometry,s);for(const l of u){const f=new j(this._metadata,this._fieldsIndex,l,0,t.index);yield U([new z(f,null,0,!1)],this._queryEngineParams)}}}}_enqueueQuery(e,s){return this._queue.push(e,s)}async _executeQuery(e,s){var n;const t=await this._getReadParams(e);if((n=e.objectIds)!=null&&n.length)for(const u of this._fileInfos.values()){const l=[],f=U((await u.file.readChunksByRowId(new Uint32Array(e.objectIds),t.fields,t.returnGeometry,s)).map((d,y)=>new j(this._metadata,this._fieldsIndex,d,y,u.index)).map((d,y)=>new z(d,null,y,!1)),this._queryEngineParams),m=await f.executeQueryForOpaqueFeatures(e,s);for(const d of m)l.push(d);return new R(l,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._queryEngineParams.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:S})}let r=e.resultRecordCount??this._getFeatureCount(),o=e.resultOffset??0;delete e.resultRecordCount,delete e.resultOffset;const i=[];for await(const u of this._fetchChunks(t,s)){const l=await u.executeQueryForOpaqueFeatures(e,s);if(l.length>o){const f=l.slice(o,Math.min(o+r,l.length));for(const m of f)i.push(m);if(o=0,r-=f.length,r===0)return new R(i,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._queryEngineParams.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:S})}else o-=l.length}return new R(i,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._queryEngineParams.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:S})}async _getReadParams(e){const s=new Set;if(e.where&&await se(s,this._fieldsIndex,e.where),e.outStatistics)for(const t of e.outStatistics)t.onStatisticField!=null&&s.add(t.onStatisticField);if(e.outFields)for(const t of e.outFields)s.add(t);return{fields:this._getAttributeIds(Array.from(s)),returnGeometry:!!e.returnGeometry||!!e.geometry}}_getAttributeIds(e){if(e==null)return new Uint32Array;if(e.includes("*"))return new Uint32Array(this._fieldsIndex.fields.map(t=>t.column).filter(t=>t!=null));const s=[];for(const t of e){const r=this._fieldsIndex.get(t);if(r==null)throw new c("unknown-field",`Field ${t} does not exist`);r.column==null||s.push(r.column)}return new Uint32Array(s)}}function C(a){return Object.keys(a).some(e=>_e(e))}function _e(a){switch(a){case"resultOffset":case"resultRecordCount":case"aggregateIds":case"distance":case"gdbVersion":case"geometry":case"having":case"timeExtent":case"where":case"objectIds":case"historicMoment":return!0;default:return!1}}function U(a,e){const s=new me;for(const t of a)s.insert(t);return new ne({...e,featureStore:s})}function Ie(a){switch(a.length){case 4:return ae(_(),a);case 6:return a;default:throw new c("parquet:protocol-violation","Invalid Geoparquet file. BoundingBox size must be 4 or 6.",{bbox:a})}}function we(a,e){const s=b(_(),q);for(const t of a){const r=ce(t.file);if(!r)return null;const o=r.columns[r.primary_column];if(!o.bbox)return null;const i=Ie(o.bbox);J(s,i)}return{xmin:s[0],ymin:s[1],xmax:s[3],ymax:s[4],spatialReference:e}}function W(a){const e=a==null?void 0:a.featureCount;let s=!1;return e!=null&&e<re("parquetlayer-full-query-feature-count")&&(s=!0),{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryBins:!1,supportsQueryPivot:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:8e3,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!0,supportsCentroidOnDegeneratedQuantizedGeometry:!1,supportsCurrentUser:!1,supportsDegeneratedQuantizedGeometry:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:s,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:s,supportsPagination:!0,supportsPaginationOnAggregatedQueries:!1,supportsPercentileStatistics:!1,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:s,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,supportsTrueCurve:!1,tileMaxRecordCount:void 0},queryAttributeBins:{supportsDate:!1,supportsFixedInterval:!1,supportsAutoInterval:!1,supportsFixedBoundaries:!1,supportsStackBy:!1,supportsSplitBy:!1,supportsSnapToData:!1,supportsReturnFullIntervalBin:!1,supportsFirstDayOfWeek:!1,supportsNormalization:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}function xe(a){var e,s;return!!((e=a.objectIds)!=null&&e.length||a.outStatistics||(s=a.orderByFields)!=null&&s.length||a.returnDistinctValues)}export{$e as default};
