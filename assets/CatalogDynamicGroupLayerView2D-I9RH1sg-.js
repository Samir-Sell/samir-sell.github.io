import{Z as n,a0 as l,a1 as S,a3 as b,fB as U,h7 as x,T as H,du as I,o as O,da as g}from"./index-MBf2dn39.js";import{b as T}from"./LayerView2D-DCNAcCmT.js";import{d as A}from"./LayerView-B9dCoYPm.js";import"./Container-CX2_i80M.js";import"./layerViewUtils-CcRlsi9U.js";const c=Symbol(),E=u=>{const m=u;let r=class extends m{constructor(...e){super(...e),this.layerViews=new b,this._debouncedUpdate=U(async()=>{const{layer:t,parent:s}=this,i=s==null?void 0:s.footprintLayerView;let d=[];const y=this._createQuery();if(y&&i){const{features:w}=await i.queryFeatures(y);this.suspended||(d=w.map(p=>t.acquireLayer(p)))}this.removeHandles(c),this.addHandles(d,c)})}get creatingLayerViews(){var e;return((e=this.view)==null?void 0:e.layerViewManager.isCreatingLayerViewsForLayer(this.layer))??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(e=>e.updating)}enableLayerUpdates(){return x([this._updatingHandles.addWhen(()=>{var e,t;return((t=(e=this.parent)==null?void 0:e.footprintLayerView)==null?void 0:t.dataUpdating)===!1},()=>this.updateLayers()),this._updatingHandles.add(()=>{var e,t,s,i,d;return[this.layer.maximumVisibleSublayers,(e=this.layer.parent)==null?void 0:e.orderBy,(s=(t=this.parent)==null?void 0:t.footprintLayerView)==null?void 0:s.filter,(d=(i=this.parent)==null?void 0:i.footprintLayerView)==null?void 0:d.timeExtent,this.suspended]},()=>this.updateLayers()),H(()=>this.removeHandles(c))])}updateLayers(){this.suspended?this.removeHandles(c):this._updatingHandles.addPromise(I(this._debouncedUpdate()).catch(e=>{O.getLogger(this).error(e)}))}_createQuery(){var $,v;const e=($=this.parent)==null?void 0:$.footprintLayerView,t=(v=this.layer)==null?void 0:v.parent;if(!e||!t||t.destroyed)return null;const{layer:{maximumVisibleSublayers:s},view:{scale:i}}=this;if(!s)return null;const{itemTypeField:d,itemSourceField:y,itemNameField:w,minScaleField:p,maxScaleField:V,objectIdField:C,orderBy:f}=t,F=g(`${p} IS NULL OR ${i} <= ${p} OR ${p} = 0`,`${V} IS NULL OR ${i} >= ${V}`),o=f==null?void 0:f.find(h=>h.field&&!h.valueExpression),a=e.createQuery();if(a.returnGeometry=!1,a.num=s,a.outFields=[C,y,w],a.where=g(a.where,F),this.unsupportedItemTypes!=null){const h=`${d} NOT IN (${this.unsupportedItemTypes.map(_=>`'${_}'`)})`;a.where=g(a.where,h)}return o!=null&&o.field&&(a.orderByFields=[`${o.field} ${o.order==="descending"?"DESC":"ASC"}`],a.outFields.push(o.field)),a}};return n([l({readOnly:!0})],r.prototype,"creatingLayerViews",null),n([l()],r.prototype,"layer",void 0),n([l()],r.prototype,"layerViews",void 0),n([l({readOnly:!0})],r.prototype,"unsupportedItemTypes",void 0),n([l()],r.prototype,"parent",void 0),n([l({readOnly:!0})],r.prototype,"isUpdating",null),r=n([S("esri.views.layers.CatalogDynamicGroupLayerView")],r),r};let L=class extends E(T(A)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new b}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(u){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((u,m)=>this.container.addChildAt(u.container,m))}};L=n([S("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],L);const Q=L;export{Q as default};
