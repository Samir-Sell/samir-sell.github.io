import{a3 as s,b as p,g as i}from"./index-DalZQxea.js";import{c as m}from"./MeshVertexAttributes-eiIMDTbw.js";import{e as a}from"./meshProperties-BrNWSC8G.js";import{q as l}from"./vertexSpaceConversion-CNximQ65.js";import"./spatialReferenceEllipsoidUtils-C1Kj_TYX.js";import"./computeTranslationToOriginAndRotation-BQszjICM.js";import"./projectPointToVector-BiWrznA3.js";import"./meshVertexSpaceUtils-C6NjK3-P.js";import"./MeshLocalVertexSpace-CS1cHWTK.js";import"./vec3-4edjBEkt.js";import"./BufferView-CJ8xV7yf.js";import"./vec4-BPHHAkAp.js";async function E(r,e,t){await Promise.resolve(),s(t);const o=l(r,e,{useEllipsoid:t==null?void 0:t.useEllipsoid});if(!o)throw new p("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");return r.clone(a(void 0,{vertexAttributes:new m({...o,uv:i(r.vertexAttributes.uv),color:i(r.vertexAttributes.color)}),vertexSpace:e,transform:null}))}export{E as convertMeshVertexSpace};
