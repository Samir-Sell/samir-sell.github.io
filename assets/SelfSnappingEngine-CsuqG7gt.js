import{cQ as B,na as G,dy as F,nb as J,nc as H,it as j,ge as O,gd as N,nd as K,ne as W,nf as X,hR as Y,dx as ee,eQ as te,ng as se,cp as ie,a3 as re,Z as L,a0 as R,a1 as ne}from"./index-MBf2dn39.js";import{v as z,c as A}from"./quantityUtils-DzEnXnWn.js";import{U as S}from"./elevationInfoUtils-l3tH7G6t.js";import{p as P,m as f,n as T,s as d,o as u,q as M,b as k,j as Q,O as oe,r as q,c as D,D as ae,t as he,y as le}from"./hitTestSelectUtils-10aaYjxP.js";import{s as v,i as ce,h as pe,r as de,f as ge}from"./SketchViewModel-CRnEH5k2.js";import{y as $,U as Z}from"./angularMeasurementUtils-B0U9V7HW.js";import"./projectVectorToVector-BNBlDXwZ.js";import"./projectPointToVector-B6nSm9iu.js";import"./geodesicUtils-Cv-uNZC_.js";import"./plane-DE-0I0cS.js";import"./vectorStacks-F901fm2H.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-CE7i_KZR.js";import"./spatialReferenceEllipsoidUtils-mSxEU2KY.js";import"./GraphicsLayer-Ba0J3wFG.js";import"./geodeticLengthOperator-B4nqKAmY.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-Cssjwt09.js";import"./lineSegment-BybilsXP.js";class C{constructor(s,e){this.view=s,this.options=e,this.squaredShortLineThreshold=P.shortLineThreshold*P.shortLineThreshold}snap(s,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(s,e):this.snapNewVertex(s,e)}edgeExceedsShortLineThreshold(s,e){return this.exceedsShortLineThreshold(f(s.leftVertex.pos,this.view,e),f(s.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(s,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||T(v(e,t,S,this.view),v(s,t,S,this.view))>this.squaredShortLineThreshold}isVertical(s,e,{spatialReference:t}){const i=B(t);return G(d(s),d(e))*i<P.verticalLineThresholdMeters}squaredProximityThreshold(s){return s==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:s,touchSensitivityMultiplier:e}=this.options,t=s*e;return t*t}}class fe extends C{constructor(s,e,t){super(s,e),this._geodesicLengthMeasurementUtils=t}snapNewVertex(s,e){const t=e.editGeometryOperations.data.parts[0],i=t.segments.length,n=[];if(i<1)return n;const{spatialReference:o}=e,a=v(s,o,S,this.view),{view:r}=this,h=t.segments[i-1];let l=h;do{if(u(l)&&this.edgeExceedsShortLineThreshold(l,e)){const p=M(l,r,e);this._processCandidateProposal(p.left,p.right,s,a,e,n)}l=l.leftVertex.leftSegment}while(l&&l!==h);return n}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,n=i.part;if(n.segments.length<2)return t;const{view:o}=this,{spatialReference:a}=e,r=v(s,a,S,o),h=i.leftSegment,l=i.rightSegment;u(h)&&u(l)&&this.edgeExceedsShortLineThreshold(h,e)&&this.edgeExceedsShortLineThreshold(l,e)&&this._processCandidateProposal(f(h.leftVertex.pos,o,e),f(l.rightVertex.pos,o,e),s,r,e,t);const p=n.segments[0];let g=p;do{if(u(g)&&g!==i.leftSegment&&g!==i.rightSegment&&this.edgeExceedsShortLineThreshold(g,e)){const m=M(g,o,e);this._processCandidateProposal(m.left,m.right,s,r,e,t)}g=g.rightVertex.rightSegment}while(g&&g!==p);return t}_processCandidateProposal(s,e,t,i,n,o){var p;const{spatialReference:a,pointer:r}=n,h=F();ue(h,s,e,t,n,this._geodesicLengthMeasurementUtils);const l=k(Q(h));T(i,v(l,a,S,this.view))<this.squaredProximityThreshold(r)&&o.push(new ce({lineStart:s,lineEnd:e,targetPoint:l,isDraped:((p=n.elevationInfo)==null?void 0:p.mode)==="on-the-ground"}))}}function ue(c,s,e,t,i,n){me(c,s,e,t,i,n)||xe(c,t,s,e)}function me(c,s,e,t,{spatialReference:i},n){const o=$(s,e,i,i);if(o==null)return!1;const a=$(e,t,i,i);if(a==null)return!1;const r=n.geodesicDistance(e,t,i);if(r==null)return!1;const h=Math.abs(J.shortestSignedDiff(o,a))>Math.PI/2?H.normalize(o+Math.PI):o;return Z(c,e,i,z(r,"meters"),A(h,"radians","geographic"),"geodesic"),c[2]=t[2],!0}function xe(c,s,e,t){oe(s,{start:e,end:t,type:1},c),c[2]=s[2]}class Se extends C{snapNewVertex(s,e){const t=e.editGeometryOperations.data.parts[0],i=t.segments.length,n=t.vertices.length,o=[];if(i<2)return o;const{view:a}=this,r=v(s,e.spatialReference,S,a),h=t.vertices[0],l=t.vertices[n-1],p=u(l.leftSegment)?f(l.pos,a,e):null,g=u(h.rightSegment)?f(h.pos,a,e):null,m=t.segments[i-1];let x=m;do{if(u(x)&&this.edgeExceedsShortLineThreshold(x,e)){const y=M(x,a,e);p&&this._checkEdgeForParallelLines(y,p,s,r,e,o),g&&this._checkEdgeForParallelLines(y,g,s,r,e,o)}x=x.leftVertex.leftSegment}while(x&&x!==m);return o}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,n=i.part;if(n.segments.length<3)return t;const{view:o}=this,a=v(s,e.spatialReference,S,o),r=i.leftSegment,h=i.rightSegment,l=n.vertices[0],p=f(l.pos,o,e),g=n.vertices.length,m=n.vertices[g-1],x=f(m.pos,o,e),y=n.segments[0];let w=y;do{if(u(w)&&w!==r&&w!==h&&this.edgeExceedsShortLineThreshold(w,e)){const E=M(w,o,e);u(r)&&this._checkEdgeForParallelLines(E,f(r.leftVertex.pos,o,e),s,a,e,t),u(h)&&this._checkEdgeForParallelLines(E,f(h.rightVertex.pos,o,e),s,a,e,t),i===l?this._checkEdgeForParallelLines(E,x,s,a,e,t):i===m&&this._checkEdgeForParallelLines(E,p,s,a,e,t)}w=w.rightVertex.rightSegment}while(w&&w!==y);return t}_checkEdgeForParallelLines(s,e,t,i,n,o){var g;const a=s.left,r=s.right;if(q(V,d(e),d(a),d(r)),j(V,d(e))<P.parallelLineThreshold)return;q(V,d(t),d(a),d(r),d(e));const{spatialReference:h,pointer:l}=n,p=k(D(V[0],V[1],t[2]));if(T(i,v(p,h,S,this.view))<this.squaredProximityThreshold(l)){if(this.isVertical(p,e,n)||this.isVertical(a,r,n)||ve(s,o))return;o.push(new pe({referenceLine:s,lineStart:e,targetPoint:p,isDraped:((g=n.elevationInfo)==null?void 0:g.mode)==="on-the-ground"}))}}}function ve(c,s){const e=c.left,t=c.right;for(const i of s)if(q(V,d(t),d(i.constraint.start),d(i.constraint.end),d(e)),j(V,d(t))<P.parallelLineThreshold)return i.addReferenceLine(c),!0;return!1}const V=O();class we extends C{constructor(s,e,t){super(s,e),this._geodesicLengthMeasurementUtils=t}snapNewVertex(s,e){const t=e.editGeometryOperations.data.parts[0],i=[];if(t.vertices.length<2)return i;const{view:n}=this,o=v(s,e.spatialReference,S,n),a=t.vertices.at(-1);u(a.leftSegment)&&this._checkForSnappingCandidate(1,i,a.leftSegment,a,a.leftSegment.leftVertex,s,o,e);const r=t.vertices[0];return u(r.rightSegment)&&this._checkForSnappingCandidate(2,i,r.rightSegment,r,r.rightSegment.rightVertex,s,o,e),i}snapExistingVertex(s,e){const t=[],i=e.vertexHandle;if(i.part.vertices.length<3)return t;const{view:n}=this,o=v(s,e.spatialReference,S,n),a=i.leftSegment,r=i.rightSegment;if(u(a==null?void 0:a.leftVertex.leftSegment)){const h=a.leftVertex.leftSegment;this._checkForSnappingCandidate(3,t,h,h.rightVertex,h.leftVertex,s,o,e)}if(u(r)&&u(r.rightVertex.rightSegment)){const h=r.rightVertex.rightSegment;this._checkForSnappingCandidate(3,t,h,h.leftVertex,h.rightVertex,s,o,e)}return t}_checkForSnappingCandidate(s,e,t,i,n,o,a,r){if(!u(t)||!this.edgeExceedsShortLineThreshold(t,r))return;const h=this.view,l=f(i.pos,h,r),p=f(n.pos,h,r);ye(I,p,l,o,r,this._geodesicLengthMeasurementUtils),this._checkForSnappingCandidateAlongProjectedRay(s,e,p,l,I,o,a,r)}_checkForSnappingCandidateAlongProjectedRay(s,e,t,i,n,o,a,r){var w;const{spatialReference:h,pointer:l}=r,p=N(U,d(o),d(i)),g=K(n,p)/W(n),m=X(U,d(i),n,g),x=k(D(m[0],m[1],o[2]));if(T(a,v(x,h,S,this.view))>this.squaredProximityThreshold(l)||this.isVertical(x,i,r)||this.isVertical(i,t,r))return;const y=Y(F(),i,n,Math.sign(g));e.push(new de({targetPoint:x,constraint:new ae(i,Q(y)),previousVertex:t,otherVertex:i,otherVertexType:1,selfSnappingType:s,isDraped:((w=r.elevationInfo)==null?void 0:w.mode)==="on-the-ground"}))}}function ye(c,s,e,t,i,n){Ve(c,s,e,t,i,n)||_e(c,s,e)}function Ve(c,s,e,t,{spatialReference:i},n){const o=$(s,e,i,i);if(o==null)return!1;const a=$(e,t,i,i);if(a==null)return!1;const r=Math.sign(H.shortestSignedDiff(o,a))*Math.PI*.5,h=A(o+r,"radians","geographic"),l=F(),p=n.geodesicDistance(e,t,i);return p!=null&&(Z(l,e,i,z(p,"meters"),h,"geodesic"),ee(c,l,e),!0)}function _e(c,s,e){const t=N(U,d(e),d(s));te(c,t[1],-t[0],0)}const U=O(),I=F();class Le extends C{snapNewVertex(s,e){const t=e.editGeometryOperations.data.parts[0],i=[],n=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||n<2)return i;const{view:o}=this,a=t.vertices[0],r=t.vertices[n-1];if(r.leftSegment&&r.leftSegment.type!=="line"||r.rightSegment&&r.rightSegment.type!=="line")return i;const h=f(a.pos,o,e),l=f(r.pos,o,e);return this._processCandidateProposal(h,l,s,e,i),i}snapExistingVertex(s,e){var h,l;const t=[],i=e.vertexHandle,n=i.part;if(n.segments.length<2||e.editGeometryOperations.data.type==="polyline"&&(i.index===0||i.index===n.vertices.length-1)||((h=i.leftSegment)==null?void 0:h.type)!=="line"||((l=i.rightSegment)==null?void 0:l.type)!=="line")return t;const{view:o}=this,a=f(i.leftSegment.leftVertex.pos,o,e),r=f(i.rightSegment.rightVertex.pos,o,e);return this._processCandidateProposal(a,r,s,e,t),t}_processCandidateProposal(s,e,t,i,n){var m;if(!this.exceedsShortLineThreshold(s,e,i))return;const o=se(b,d(s),d(e),.5),a=.5*G(d(s),d(e)),r=he(b,d(t),o,a),h=k(D(r[0],r[1],t[2])),{spatialReference:l,pointer:p}=i,g=v(t,l,S,this.view);if(T(g,v(h,l,S,this.view))<this.squaredProximityThreshold(p)){if(this.isVertical(s,h,i)||this.isVertical(h,e,i))return;n.push(new ge({targetPoint:h,point1:s,point2:e,isDraped:((m=i.elevationInfo)==null?void 0:m.mode)==="on-the-ground"}))}}}const b=O();let _=class extends ie{constructor(c){super(c),this.updating=!1,this._snappers=new re,this._domain=2}initialize(){this._snappers.push(new Se(this.view,this.options),new fe(this.view,this.options,this.geodesicLengthMeasurementUtils),new we(this.view,this.options,this.geodesicLengthMeasurementUtils),new Le(this.view,this.options))}set options(c){this._set("options",c);for(const s of this._snappers)s.options=c}async fetchCandidates(c,s,e){if(!(s&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const i of this._snappers.items)for(const n of i.snap(c,e))t.push(n);return le(c,t),t}};L([R({readOnly:!0})],_.prototype,"updating",void 0),L([R({constructOnly:!0})],_.prototype,"view",void 0),L([R({constructOnly:!0})],_.prototype,"geodesicLengthMeasurementUtils",void 0),L([R()],_.prototype,"options",null),_=L([ne("esri.views.interactive.snapping.SelfSnappingEngine")],_);export{_ as SelfSnappingEngine};
