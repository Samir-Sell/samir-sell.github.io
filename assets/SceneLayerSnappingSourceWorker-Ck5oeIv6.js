import{e0 as y,hR as v,eR as l,d$ as m,dy as a,a3 as w,dB as u,D as L,Z as $}from"./index-7LVg-iY6.js";import{v as j,b as x,j as S}from"./lineSegment-FrGs-k93.js";import{q as I,z as P,l as C,I as V}from"./sphere-DzCsVWDK.js";import{S as f}from"./Octree-C5JjjiMz.js";import{g as T}from"./edgeProcessing-DGc-RjtQ.js";import"./vectorStacks-C4W7rb0Q.js";import"./quatf64-aQ5IuZRd.js";import"./frustum-BRF-5aSr.js";import"./plane-BNp5RSXM.js";import"./BufferView-k4yB9h9M.js";import"./deduplicate-CsrXgNgJ.js";import"./Indices-4XmParll.js";import"./InterleavedLayout-Cm0qBh5m.js";import"./types-BKo2foNY.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./Normals-Dbj8w10q.js";const q=1e3;function N(t,o,n){const s=k;y(s,t,.5),v(s,s,o,.5);const r=l(s,t);return m(s,s,n),I(s,r)}const k=a();let g=class{constructor(){this._idToComponent=new Map,this._components=new f(t=>t.bounds),this._edges=new f(t=>t.bounds),this._tmpLineSegment=j(),this._tmpP1=a(),this._tmpP2=a(),this._tmpP3=a(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),w(o),await this._ensureEdgeLocations(t,o);const n=[];return this._edges.forEachNeighbor(s=>(this._addCandidates(t,s,n),n.length<q),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,o){const n=[];if(this._components.forEachNeighbor(e=>{if(e.info==null){const{id:c,uid:i}=e;n.push({id:c,uid:i})}return!0},t.bounds),!n.length)return;const s={components:n},r=await this.remoteClient.invoke("fetchAllEdgeLocations",s,o??{});for(const e of r.components)this._setFetchEdgeLocations(e)}async add(t){const o=new _(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const n=[];this._edges.forEachNeighbor(s=>(s.component===o&&n.push(s),!0),o.bounds),this._edges.remove(n),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const n=T.createView(t.locations),s=new Array(n.count),r=a(),e=a();for(let d=0;d<n.count;d++){n.position0.getVec(d,r),n.position1.getVec(d,e);const p=N(r,e,t.origin),E=new A(o,d,p);s[d]=E}this._edges.add(s);const{objectIds:c,origin:i}=t;o.info={locations:n,objectIds:c,origin:i}}_addCandidates(t,o,n){const{info:s}=o.component,{origin:r,objectIds:e}=s,c=s.locations,i=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);m(i,i,r),m(d,d,r);const p=e[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,p,i,d,n),b(t,p,i,n),b(t,p,d,n)}_addEdgeCandidate(t,o,n,s,r){if(!t.returnEdge)return;const e=P(t.bounds,F),c=x(n,s,this._tmpLineSegment),i=S(c,e,this._tmpP3);C(t.bounds,i)&&r.push({type:"edge",objectId:o,target:u(i),distance:l(e,i),start:u(n),end:u(s)})}};g=L([$("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const ot=g;function b(t,o,n,s){t.returnVertex&&C(t.bounds,n)&&s.push({type:"vertex",objectId:o,target:u(n),distance:l(V(t.bounds),n)})}const h=class h{constructor(o,n){this.id=o,this.bounds=n,this.info=null,this.uid=++h.uid}};h.uid=0;let _=h;class A{constructor(o,n,s){this.component=o,this.index=n,this.bounds=s}}const F=a();export{ot as default};
