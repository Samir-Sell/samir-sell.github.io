import{cP as O}from"./index-Cv0-fPI4.js";import{c as P}from"./PixelBlock-B39J6nNT.js";function I({distance:a,yaw:e,horizontalFieldOfView:o,pitch:i,verticalFieldOfView:f,origin:n=[0,0,0],positionLength:t=25}){const h=t-1,g=t*t,p=new Float32Array(2*g),m=new Float64Array(3*g),w=new Float32Array(3*g).fill(0),s=new Uint32Array(h**2*6);for(let r=0,c=0;r<g;r++){const A=Math.floor(r/t),b=r%t,d=1-b/h,y=A/h,F=2*r,l=3*r;p[F]=d,p[F+1]=y;const v=i+f/2-y*f,M=O(e-o/2+d*o),D=O(v),L=Math.sin(D),x=Math.cos(D),u=[L*Math.sin(M),Math.cos(M)*L,-x];m[l]=n[0]+a*u[0],m[l+1]=n[1]+a*u[1],m[l+2]=n[2]+a*u[2],w[l]=-u[0],w[l+1]=-u[1],w[l+2]=-u[2],A!==h&&b!==h&&(s[c++]=r,s[c++]=r+t,s[c++]=r+t+1,s[c++]=r,s[c++]=r+t+1,s[c++]=r+1)}return{result:{position:m,uv:p,normal:w,faces:s},transferList:[m.buffer,p.buffer,w.buffer,s==null?void 0:s.buffer]}}function j(a){const e=P.fromJSON(a);e.premultiplyAlpha=!0;const o=e.getAsRGBA(),i=e.width,f=e.height,n=new ImageData(o,i,f);return{result:n,transferList:[n.data.buffer]}}function k({oldDistance:a,newDistance:e,position:o,origin:i=[0,0,0]}){const f=o.length/3;for(let n=0;n<f;n+=3){const t=3*n;o[t]=i[0]+(o[t]-i[0])*(e/a),o[t+1]=i[1]+(o[t+1]-i[1])*(e/a),o[t+2]=i[2]+(o[t+2]-i[2])*(e/a)}return{result:o,transferList:[o.buffer]}}export{j as convertPixelBlockToImageData,I as getFacesWithVertexAttributes,k as recomputePositions};
