import{z as l,fD as n,er as f,D as s,F as i,N as d,Z as S,a0 as g,c6 as y,eX as R,H as w,hW as F}from"./index-DalZQxea.js";let e=class extends l{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({type:d,json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([S("esri.rest.support.ProjectParameters")],e);const N=g(e);async function v(o,t,r){t=N(t);const a=y(o),p={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,c=f(t.geometries[0]),u=R(p,r);return w(a.path+"/project",u).then(({data:{geometries:h}})=>F(h,c,m))}export{v as n,e as p};
