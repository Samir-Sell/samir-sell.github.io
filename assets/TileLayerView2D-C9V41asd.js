import{J as w,N as y,O as I,P as T,S as V,T as u,U as H,V as n,X as f,Y as v,o as C,Z as m,a0 as d,a1 as U}from"./index-MBf2dn39.js";import"./rasterizingUtils-iNYyg3Ta.js";import"./CIMSymbolHelper-BRaZBPzC.js";import"./OverrideHelper-Bqjxw-c_.js";import"./Container-CX2_i80M.js";import"./WGLContainer-Kqw7VgZL.js";import"./ProgramTemplate-v4XGS9db.js";import"./BufferObject-DJmVNFwp.js";import"./Utils-C1PbO-qu.js";import"./GridShader-Crwr0egj.js";import"./pbf-oB5JazCN.js";import"./FramebufferObject-B9byaaQh.js";import"./FeatureCommandQueue-C1pKzgz9.js";import"./UpdateTracking2D-BToUQooi.js";import"./TexturedLineMeshWriter-GVSDNrBN.js";import"./renderState-CKc66y4x.js";import"./glsl-B5bJgrnA.js";import"./testSVGPremultipliedAlpha-Dz2HDxOr.js";import{O as q}from"./GraphicsView2D-D3qDqcU6.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as b,o as p,n as _}from"./imageUtils-Cvhv-tUl.js";import{b as P}from"./LayerView2D-DCNAcCmT.js";import{o as S}from"./HighlightGraphicContainer-Bmddt9b1.js";import{d as Q}from"./LayerView-B9dCoYPm.js";import{i as G}from"./RefreshableLayerView-GvSLI9Ud.js";import{S as L,P as k,i as F}from"./MapServiceLayerViewHelper-BY06kREU.js";import{r as z}from"./drapedUtils-DDsKkVhx.js";import{r as E}from"./highlightOptionsUtils-5LSgdU_B.js";import"./BidiEngine-BvER9tXK.js";import"./labelPoint-qi2ospRL.js";import"./OptimizedFeature-D0afEOhZ.js";import"./memoryEstimations-BPPA_w8H.js";import"./GeometryUtils-xBiWa7uV.js";import"./Rect-CUzevAry.js";import"./BoundingBox-pSNXXsZR.js";import"./colorUtils-CkAZgRni.js";import"./callExpressionWithFeature-BRfG9Jrf.js";import"./quantizationUtils-BEptSagi.js";import"./VertexArrayObject-2CROiYZi.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexBuffer-DqjapH4o.js";import"./config-BOD8--da.js";import"./featureConversionUtils-8OwhMcAD.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./GraphShaderModule-D2txxt4I.js";import"./ShaderBuilder-YGQtXrUp.js";import"./utils-CMMeaAAH.js";import"./constants-BBnGEY1d.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-i9u0EiEG.js";import"./constants-BHYAGdRm.js";import"./streamLayerUtils-DFlbJ4P1.js";import"./QueueProcessor-DnSe9my5.js";import"./TurboLine-DaXptytv.js";import"./AttributeStore-DossEVDj.js";import"./FeatureStoreQueryAdapter-D-NRNaxM.js";import"./queryUtils-B8Ay1q0D.js";import"./timeSupport-CzlZL4l0.js";import"./FeatureMetadata-BeixVTSj.js";import"./normalizeUtilsSync-Cp-xHgP3.js";import"./dehydratedFeatures-DJmaQf4Y.js";import"./BitmapTechnique-CJS00m_9.js";import"./bitmapUtils-BlOS8F5O.js";import"./TileContainer-CstvQbmV.js";import"./layerViewUtils-CcRlsi9U.js";import"./AGraphicContainer-6h90IClw.js";import"./TechniqueInstance-BDNy9HM4.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-CLrdRyiA.js";import"./popupUtils-D50f_DM3.js";const W=[0,0];let l=class extends G(b(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(h,r)=>z(h,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:r})=>e.graphicUpdateHandler({graphic:h,property:r}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return u();const h=E(i);return this._addHighlightGraphics(e,h),u(()=>!this.destroyed&&this._removeHighlightGraphics(e,h))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return H((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(r){if(n(r))throw r;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const s=this._tileInfoView.getTileParentId(t.id);if(s){const a=new f(s),o=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return _(this._tileInfoView,o,a,t)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:r=0}=i,s=new f(0,0,0,0);let a,o=null;try{if(o=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:h}),!this.resampling&&s.level!==t.level)return await v(i),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,h)}catch(c){if(n(c))throw c;if(this.resampling&&o==="unknown"&&r<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){s.set(g);try{a=await this._fetchTileWithTilemapCache(s,{...i,resamplingLevel:r+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,s,t):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){n(i)||C.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([d()],l.prototype,"resampling",null),m([d()],l.prototype,"tilemapCache",null),l=m([U("esri.views.2d.layers.TileLayerView2D")],l);const hi=l;export{hi as default};
