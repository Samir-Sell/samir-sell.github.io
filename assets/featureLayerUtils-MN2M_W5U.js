const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-CPLA55V2.js","assets/index-Cv0-fPI4.js","assets/index-DZndqy9Z.css","assets/utils-22CP1Yif.js","assets/ClassBreaksDefinition-DGkykSID.js","assets/FormTemplate-CY9ipN52.js","assets/FeatureLayerSource-DwdQDDqh.js","assets/MeshLocalVertexSpace-0KGRSdMe.js","assets/meshVertexSpaceUtils-33Pp2MTB.js","assets/External-wo3PMdGo.js","assets/infoFor3D-dHKPbXlj.js","assets/MeshTransform-C4AyjZAz.js","assets/quat-Ch0VBzF_.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-DNNI3iFk.js","assets/editingSupport-BA6R0k8R.js","assets/EditBusLayer-0-FkBq39.js","assets/QueryTask-Da1OXgXe.js","assets/executeForIds-D0RkngHd.js","assets/query-BurU-78t.js","assets/pbfQueryUtils-6vaooj-7.js","assets/pbf-BdgP76zG.js","assets/memoryEstimations-djtQljaD.js","assets/OptimizedFeature-BV9bW67H.js","assets/OptimizedFeatureSet-BR8EEvDc.js","assets/queryZScale-Hrs_mNhO.js","assets/executeQueryJSON-DxKqCX-X.js","assets/featureConversionUtils-HUfCD0i2.js","assets/editsZScale-PjYYNejF.js","assets/APIKeyMixin-D0FD_BkO.js","assets/ArcGISService-C53qe3G4.js","assets/FeatureLayerBase-DHaR7mUB.js","assets/LayerFloorInfo-Dogovv3A.js","assets/multiLayerServiceUtils-BBUZSlDc.js","assets/Relationship-CmJoiz4O.js","assets/serviceCapabilitiesUtils-B-02Iw-y.js","assets/FeatureType-evyU49Mi.js","assets/versionUtils-DlhDY8LB.js","assets/FeatureLayer-BkuEi8qS.js","assets/TitleCreator-CyaqvOKU.js","assets/styleUtils-B2ZjnoOT.js","assets/OrientedImageryLayer-DIkA8iMt.js"])))=>i.map(i=>d[i]);
import{p as m,cs as k,g4 as A,g5 as y,g6 as u,b as f,d as B,g7 as K,f1 as z,g8 as H,_ as I,g9 as j}from"./index-Cv0-fPI4.js";import{i as b}from"./originUtils-Dl_3sZfB.js";import{P as q,w as O,d as Q,v as W,$ as X,p as N,f as Z,I as x,m as E}from"./utils-BaKfbwP-.js";import{n as ee,l as ae}from"./fetchService-COtSTHtx.js";import{o as te}from"./jsonContext-wr5H8zRo.js";import"./saveUtils-CrcyNRut.js";const T="Feature Service",v="feature-layer-utils",re=`${v}-save`,ne=`${v}-save-as`,p=`${v}-saveall`,d=`${v}-saveall-as`;function S(e){return{isValid:j(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function w(e,a){const t=te(e,"portal-item");return a!=null&&a.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=w(e),t=w(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)se(r)?t.push(o):a.push(o);return{layers:a,tables:t}}function se(e,a){return e.isTable}function J(e){return D([e])}async function G(e,a){return/\/\d+\/?$/.test(e.url)?J(a[0]):U(a,e)}async function U(e,a){if(e.reverse(),!a)return D(e);const t=await oe(a,e);for(const r of e)C(r.layer,r.layerJSON,t);return ce(t,e),t}async function oe(e,a){let t=await e.fetchData("json");if(le(t)&&!B(e,u.HOSTED_SERVICE))return t;t||(t={}),ie(t);const{layer:{url:r,customParameters:o,apiKey:s}}=a[0];return await ue(t,{url:r??"",customParameters:o,apiKey:s},a.map(n=>n.layer.layerId)),t}function le(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function ie(e){e.layers||(e.layers=[]),e.tables||(e.tables=[])}function ce(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}L(e.layers,t),L(e.tables,r)}function L(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);z(t.sort(P),a.slice().sort(P))&&e.sort((r,o)=>{const s=a.indexOf(r.id),n=a.indexOf(o.id);return s<n?-1:s>n?1:0})}function P(e,a){return e<a?-1:e>a?1:0}async function ue(e,a,t){const{url:r,customParameters:o,apiKey:s}=a,{serviceJSON:n,layersJSON:l}=await ee(r,{customParameters:o,apiKey:s}),i=g(e.layers,n.layers,t),c=g(e.tables,n.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],V=l?[...l.layers,...l.tables]:[];await ye(e,h,r,V)}function g(e,a,t){const r=H(e,a,(s,n)=>s.id===n.id);e=e.filter(s=>!r.removed.some(n=>n.id===s.id));const o=r.added;return o.forEach(({id:s})=>{e.push({id:s})}),{itemResources:e,added:o.filter(({id:s})=>!t.includes(s))}}async function ye(e,a,t,r){const o=await fe(a),s=a.map(({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find(({id:i})=>i===n)}));await Promise.allSettled(s.map(n=>n.load())),s.forEach(n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};C(n,n.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:n.operationalLayerType},e)})}async function fe(e){const a=[];e.forEach(({type:o})=>{switch(ae(o)){case"CatalogLayer":a.push(I(()=>import("./CatalogLayer-CPLA55V2.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37])).then(s=>s.default));break;case"FeatureLayer":a.push(I(()=>import("./FeatureLayer-BkuEi8qS.js"),__vite__mapDeps([38,1,2,5,28,25,29,30,16,31,32,33,34,35,10,36,39,37,40])).then(s=>s.default));break;case"OrientedImageryLayer":a.push(I(()=>import("./OrientedImageryLayer-DIkA8iMt.js"),__vite__mapDeps([41,1,2,38,5,28,25,29,30,16,31,32,33,34,35,10,36,39,37,40])).then(s=>s.default))}});const t=await Promise.all(a),r=new Map;return e.forEach(({type:o},s)=>{r.set(o,t[s])}),r}function C(e,a,t){e.isTable?_(t.tables,a):_(t.layers,a)}function _(e,a){const t=e.findIndex(({id:r})=>r===a.id);t===-1?e.push(a):e[t]=a}function F(e,a){if(!e.length)throw new f(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function pe(e,a){const t=e.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new f(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(e,a){const t=e.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new f(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function de(e){F(e,p),await Promise.all(e.map(a=>a.load()));for(const a of e)N(a,p,S),Z({layer:a,itemType:T,errorNamePrefix:p});pe(e,p),M(e,p)}function me(e){var a,t,r,o;if(!("layerType"in e))return!!((a=e.charts)!=null&&a.length);switch(e.layerType){case"OrientedImageryLayer":return!!((t=e.charts)!=null&&t.length);case"SubtypeGroupLayer":return!!e.layers.some(s=>{var n;return!!((n=s.charts)!=null&&n.length)});case"SubtypeGroupTable":return!!e.tables.some(s=>{var n;return!!((n=s.charts)!=null&&n.length)});case"CatalogLayer":return!!((o=(r=e.footprintLayer)==null?void 0:r.charts)!=null&&o.length)}}function $(e,a){let t=0,r=0,o=0,s=0;for(const n of[...a.layers,...a.tables])if(me(n)&&s++,"layerType"in n)switch(n.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}y(e,u.ORIENTED_IMAGERY_LAYER,t>0),y(e,u.SUBTYPE_GROUP_LAYER,r>0),y(e,u.SUBTYPE_GROUP_TABLE,o>0),y(e,u.CHARTS,s>0)}function Y(e,a,t){K(a,u.METADATA),y(a,u.MULTI_LAYER,e.length>1),y(a,u.SINGLE_LAYER,e.length===1),y(a,u.TABLE,t.tables.length>0&&t.layers.length===0),$(a,t)}async function he(e,a,t){$(a,t)}async function be(e,a,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=e,i=m(r);a.url=((i==null?void 0:i.serverType)==="FeatureServer"?r:`${r}/${o}`)??null,a.title||(a.title=s),a.extent=null,l||n==null||(a.extent=await A(n)),Y([e],a,t)}function we(e,a){for(const s of e){const n=s.parsedUrl.path,l=m(n);if(!(l==null?void 0:l.url.path))throw new f(`${a}:invalid-parameters`,E(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l==null?void 0:l.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new f(`${a}:invalid-parameters`,E(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&e.length>1)throw new f(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(e[0].parsedUrl.path),r=t==null?void 0:t.url.path;if(!e.every(s=>{const n=m(s.parsedUrl.path);return(n==null?void 0:n.url.path)===r}))throw new f(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function Te(e){F(e,d),await Promise.all(e.map(a=>a.load()));for(const a of e)N(a,d,S);we(e,d),M(e,d)}function ve(e,a){$(e,a),x(e)}async function Se(e,a,t){let r=0;for(const{isTable:n}of e)n||r++;const o=e[0].parsedUrl.path,s=m(o);if(a.url=(s==null?void 0:s.serverType)==="FeatureServer"?s.url.path:o,a.title||(a.title=s.title),a.extent=null,r>0){const n=e.map(l=>l.fullExtent).filter(k).reduce((l,i)=>l.clone().union(i));n&&(a.extent=await A(n))}Y(e,a,t),x(a)}async function _e(e,a){return q({layer:e,itemType:T,validateLayer:S,createJSONContext:t=>w(t,e),createItemData:(t,r)=>G(r,[t]),errorNamePrefix:re,setItemProperties:he},a)}async function Ae(e,a){await de(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map(n=>O(n,n.isTable?r.forTables:r.forLayers,a))),s=await G(t,e.map((n,l)=>({layer:n,layerJSON:o[l]})));return ve(t,s),await t.update({data:s}),await Promise.all(e.slice(1).map(n=>n.portalItem.reload())),b(r.forLayers),b(r.forTables),t.clone()}async function Oe(e,a,t){return X({layer:e,itemType:T,validateLayer:S,createJSONContext:r=>w(r,e),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:ne,newItem:a,setItemProperties:be},t)}async function Ne(e,a,t){await Te(e);const r=Q({itemType:T,errorNamePrefix:d,newItem:a}),o=R(r),s=await Promise.all(e.map(l=>O(l,l.isTable?o.forTables:o.forLayers,t))),n=await U(e.map((l,i)=>({layer:l,layerJSON:s[i]})));await Se(e,r,n),await W(r,n,t);for(const l of e)l.portalItem=r.clone();return b(o.forLayers),b(o.forTables),r}export{_e as save,Ae as saveAll,Ne as saveAllAs,Oe as saveAs};
