function u(n,t,o){return t.flatten(({sublayers:i})=>i).length!==n.length?!0:!!n.some(i=>i.originIdOf("minScale")>o||i.originIdOf("maxScale")>o||i.originIdOf("renderer")>o||i.originIdOf("labelingInfo")>o||i.originIdOf("opacity")>o||i.originIdOf("labelsVisible")>o||i.originIdOf("source")>o)||!s(n,t)}function d(n,t,o){return!!n.some(e=>{var l,a,f;const i=e.source,r=!i||i.type==="map-layer"&&i.mapLayerId===e.id&&(i.gdbVersion==null||i.gdbVersion===o);e.commitProperty("renderer"),e.commitProperty("labelingInfo"),e.commitProperty("opacity"),e.commitProperty("labelsVisible"),e.commitProperty("orderBy");const c=((f=(a=(l=e.layer)==null?void 0:l.capabilities)==null?void 0:a.exportMap)==null?void 0:f.supportsSublayerOrderBy)??!1;return!r||e.originIdOf("renderer")>2||e.originIdOf("labelingInfo")>2||e.originIdOf("opacity")>2||e.originIdOf("labelsVisible")>2||c&&e.originIdOf("orderBy")>2})||!s(n,t)}function s(n,t){if(!(n!=null&&n.length)||t==null)return!0;const o=t.slice().reverse().flatten(({sublayers:r})=>r&&r.toArray().reverse()).map(r=>r.id).toArray();if(n.length>o.length)return!1;let e=0;const i=o.length;for(const{id:r}of n){for(;e<i&&o[e]!==r;)e++;if(e>=i)return!1}return!0}function g(n){return!!n&&n.some(t=>{var o;return t.minScale!=null||((o=t.layerDefinition)==null?void 0:o.minScale)!=null})}export{d as e,g as n,u as r};
