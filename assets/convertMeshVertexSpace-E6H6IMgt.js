import{at as s,b as p,a2 as i}from"./index-Cv0-fPI4.js";import{c as m}from"./MeshVertexAttributes-DIbDYLF6.js";import{e as a}from"./meshProperties-BrNWSC8G.js";import{q as l}from"./vertexSpaceConversion-BvpusJ0I.js";import"./spatialReferenceEllipsoidUtils-B9213FBR.js";import"./computeTranslationToOriginAndRotation-CCe0ibwp.js";import"./projectPointToVector-DKL5R6ed.js";import"./meshVertexSpaceUtils-33Pp2MTB.js";import"./MeshLocalVertexSpace-0KGRSdMe.js";import"./vec3-DHTLHD1_.js";import"./BufferView-DWNkXJgb.js";import"./vec4-DF5gJdUA.js";async function E(r,e,t){await Promise.resolve(),s(t);const o=l(r,e,{useEllipsoid:t==null?void 0:t.useEllipsoid});if(!o)throw new p("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");return r.clone(a(void 0,{vertexAttributes:new m({...o,uv:i(r.vertexAttributes.uv),color:i(r.vertexAttributes.color)}),vertexSpace:e,transform:null}))}export{E as convertMeshVertexSpace};
