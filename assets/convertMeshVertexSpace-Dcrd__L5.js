import{a3 as s,b as p,g as i}from"./index-7LVg-iY6.js";import{c as m}from"./MeshVertexAttributes-ByTkExdJ.js";import{e as a}from"./meshProperties-BrNWSC8G.js";import{q as l}from"./vertexSpaceConversion-CF2V7qPo.js";import"./spatialReferenceEllipsoidUtils-YSk8guFm.js";import"./computeTranslationToOriginAndRotation-COM3Qr1z.js";import"./projectPointToVector-DB9mtevM.js";import"./meshVertexSpaceUtils-CVbju_nQ.js";import"./MeshLocalVertexSpace-T1vzY46g.js";import"./vec3-CyfSCT_v.js";import"./BufferView-k4yB9h9M.js";import"./vec4-CMCwkZSn.js";async function E(r,e,t){await Promise.resolve(),s(t);const o=l(r,e,{useEllipsoid:t==null?void 0:t.useEllipsoid});if(!o)throw new p("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");return r.clone(a(void 0,{vertexAttributes:new m({...o,uv:i(r.vertexAttributes.uv),color:i(r.vertexAttributes.color)}),vertexSpace:e,transform:null}))}export{E as convertMeshVertexSpace};
