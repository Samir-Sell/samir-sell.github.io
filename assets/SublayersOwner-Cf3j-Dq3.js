const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/FeatureLayer-BkuEi8qS.js","assets/index-Cv0-fPI4.js","assets/index-DZndqy9Z.css","assets/FormTemplate-CY9ipN52.js","assets/editsZScale-PjYYNejF.js","assets/queryZScale-Hrs_mNhO.js","assets/APIKeyMixin-D0FD_BkO.js","assets/ArcGISService-C53qe3G4.js","assets/EditBusLayer-0-FkBq39.js","assets/FeatureLayerBase-DHaR7mUB.js","assets/LayerFloorInfo-Dogovv3A.js","assets/multiLayerServiceUtils-BBUZSlDc.js","assets/Relationship-CmJoiz4O.js","assets/serviceCapabilitiesUtils-B-02Iw-y.js","assets/infoFor3D-dHKPbXlj.js","assets/FeatureType-evyU49Mi.js","assets/TitleCreator-CyaqvOKU.js","assets/versionUtils-DlhDY8LB.js","assets/styleUtils-B2ZjnoOT.js"])))=>i.map(i=>d[i]);
import{Z as a,a0 as n,bD as v,cO as ie,fl as ue,kW as ye,ak as se,a1 as Q,l8 as pe,no as H,at as G,bI as K,H as N,p as W,g as de,j4 as ae,j5 as le,fd as ce,cB as he,i7 as fe,aR as be,np as me,aG as ge,kP as Se,g$ as we,o as L,nq as C,aq as ve,a3 as J,fJ as Ie,h$ as j,kQ as xe,cd as Oe,_ as Le,b,a2 as D,lH as Fe,nr as _e,cc as Te,da as Pe,ns as De,eJ as V,fx as R,lV as qe,z as Ee,fH as M,kU as je,cn as O,nt as $e,lC as Ae,d7 as Me,kX as ke,kY as Ne,kC as z,bm as X,fK as Ce,de as Ve,dc as Z,ft as Y,fw as ee}from"./index-Cv0-fPI4.js";import{S as Re}from"./QueryTask-Da1OXgXe.js";import{c as Be}from"./FeatureType-evyU49Mi.js";import{i as Qe}from"./LayerFloorInfo-Dogovv3A.js";import{n as Je}from"./Relationship-CmJoiz4O.js";import{c as Ue}from"./serviceCapabilitiesUtils-B-02Iw-y.js";import{n as He}from"./sublayerUtils-CLrdRyiA.js";const ot=p=>{const t=p;let e=class extends t{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(r,i){const s=i.capabilities&&i.capabilities.split(",").map(ne=>ne.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const o=this.type,y=o!=="tile"&&!!i.supportsDynamicLayers,d=s.includes("query"),u=s.includes("map"),f=!!i.exportTilesAllowed,S=s.includes("tilemap"),c=s.includes("data"),m=o!=="tile"&&(!i.tileInfo||y),w=o!=="tile"&&(!i.tileInfo||y),_=o!=="tile",h=o!=="tile"&&y&&i.currentVersion>=11.1,g=i.cimVersion?pe.parse(i.cimVersion):null,T=(g==null?void 0:g.greaterEqual(1,4))??!1,P=(g==null?void 0:g.greaterEqual(2,0))??!1;return{operations:{supportsExportMap:u,supportsExportTiles:f,supportsIdentify:d,supportsQuery:c,supportsTileMap:S},exportMap:u?{supportsArcadeExpressionForLabeling:T,supportsCIMSymbols:P,supportsDynamicLayers:y,supportsSublayerOrderBy:h,supportsSublayerDefinitionExpression:w,supportsSublayerVisibility:m,supportsSublayersChanges:_}:null,exportTiles:f?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(r,i){let s=i.currentVersion;return s||(s=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchRelatedService(r){const i=this.portalItem;if(!i||!H(i))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=i.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},r).then(o=>o.find(y=>y.type==="Feature Service")??null,()=>null));const s=await this._relatedFeatureServicePromise;return G(r),s?{itemId:s.id,url:s.url}:null}async fetchSublayerInfo(r,i){var d;const{source:s}=r;if(this!=null&&this.portalItem&&this.type==="tile"&&(s==null?void 0:s.type)==="map-layer"&&H(this.portalItem)&&r.originIdOf("url")<2){const u=await this.fetchRelatedService(i);u&&(r.url=K(u.url,s.mapLayerId.toString()),r.layerItemId=u.itemId)}const{url:o}=r;let y;if(s.type==="data-layer")y=(await N(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...i})).data;else if(o&&r.originIdOf("url")>2)try{const u=await this._fetchAllLayersAndTablesFromService(o),f=((d=W(o))==null?void 0:d.sublayer)??s.mapLayerId;y=u.get(f)}catch{}else{let u=r.id;(s==null?void 0:s.type)==="map-layer"&&(u=s.mapLayerId);try{y=(await this.fetchAllLayersAndTables(i)).get(u)}catch{}}return y}async fetchAllLayersAndTables(r){var i;return this._fetchAllLayersAndTablesFromService((i=this.parsedUrl)==null?void 0:i.path,r)}async _fetchAllLayersAndTablesFromService(r,i){await this.load(i),this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const s=W(r),o=de(this._allLayersAndTablesMap,s==null?void 0:s.url.path,()=>N(K(s==null?void 0:s.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(d=>{const u=new Map,{layers:f,tables:S}=d.data,c=[...f??[],...S??[]];for(const m of c)u.set(m.id,m);return{result:u}},d=>({error:d}))),y=await o;if(G(i),"result"in y)return y.result;throw y.error}};return a([n({readOnly:!0})],e.prototype,"capabilities",void 0),a([v("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],e.prototype,"readCapabilities",null),a([n({json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0),a([n({type:ie})],e.prototype,"fullExtent",void 0),a([n(ue)],e.prototype,"id",void 0),a([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],e.prototype,"legendEnabled",void 0),a([n(ye)],e.prototype,"popupEnabled",void 0),a([n({type:se})],e.prototype,"spatialReference",void 0),a([n({readOnly:!0})],e.prototype,"version",void 0),a([v("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],e.prototype,"readVersion",null),e=a([Q("esri.layers.mixins.ArcGISMapService")],e),e},Ge=Symbol("isMapImageGraphicOriginSymbol");var te;let Ke=class extends ae{get[(te=Ge,le)](){return this.layer}constructor(t,e){super(),this[te]=!0,this.type="map-image",this.layer=t,this.sublayer=e}get id(){return`${this.layer.id}:__${this.sublayer.id}__`}};const We=Symbol("isTileGraphicOriginSymbol");var re;class ze extends ae{get[(re=We,le)](){return this.layer}constructor(t,e){super(),this[re]=!0,this.type="tile",this.layer=t,this.sublayer=e}get id(){return`${this.layer.id}:__${this.sublayer.id}__`}}var $;function k(p){return(p==null?void 0:p.type)==="esriSMS"}function U(p,t,e){const r=e.minimumWritableOrigin||e.origin;return!!r&&p.originIdOf(t)>=R(r)}function F(p,t,e){var i;const r=U(this,t,e);return{ignoreOrigin:!0,allowNull:r,enabled:!!e&&((i=e.layer)==null?void 0:i.type)==="map-image"&&(e.writeSublayerStructure||r)}}function B(p,t,e){var r;return{enabled:!!e&&((r=e.layer)==null?void 0:r.type)==="tile"&&(U(this,t,e)||this._isOverridden(t))}}function I(p,t,e){return{ignoreOrigin:!0,enabled:e&&e.writeSublayerStructure||!1}}function A(p,t,e){return{ignoreOrigin:!0,enabled:!!(e!=null&&e.writeSublayerStructure)&&this.originIdOf(t)>2}}function q(p,t,e){return{ignoreOrigin:!0,enabled:!!e&&(e.writeSublayerStructure||U(this,t,e))}}let Xe=0;const Ze=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);var x;let l=(x=class extends ce(he(fe)){constructor(t){super(t),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(t){return this.addResolvingPromise(this.reload(t)),this}readCapabilities(t,e){e=e.layerDefinition||e;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:s},query:{supportsFormatPBF:o,supportsOrderBy:y,supportsPagination:d},data:{supportsAttachment:u},queryRelated:f}=Ue(e,this.url);return{attachment:{supportsOrderByFields:(r==null?void 0:r.supportsOrderByFields)??!1,supportsResize:(r==null?void 0:r.supportsResize)??!1,supportsTypeWildcard:(r==null?void 0:r.supportsTypeWildcard)??!1},exportMap:{supportsModification:!!e.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:s},data:{supportsAttachment:u},query:{supportsFormatPBF:o,supportsOrderBy:y,supportsPagination:d},queryRelated:f}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(t){this._setAndNotifyLayer("definitionExpression",t)}get effectiveScaleRange(){const{minScale:t,maxScale:e}=this;return{minScale:t,maxScale:e}}readMaxScaleRange(t,e){return{minScale:(e=e.layerDefinition||e).minScale??0,maxScale:e.maxScale??0}}get fieldsIndex(){return new be(this.fields||[])}set floorInfo(t){this._setAndNotifyLayer("floorInfo",t)}readGlobalIdFieldFromService(t,e){if((e=e.layerDefinition||e).globalIdField)return e.globalIdField;if(e.fields){for(const r of e.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get graphicOrigin(){if(!this.layer)return null;switch(this.layer.type){case"tile":return new ze(this.layer,this);case"map-image":return new Ke(this.layer,this)}}get id(){return this._get("id")??Xe++}set id(t){var e,r,i;this._get("id")!==t&&(((i=(r=(e=this.layer)==null?void 0:e.capabilities)==null?void 0:r.exportMap)==null?void 0:i.supportsDynamicLayers)!==!1?this._set("id",t):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(t,e){return e.type==="Table"}set labelingInfo(t){this._setAndNotifyLayer("labelingInfo",t)}writeLabelingInfo(t,e,r,i){t&&t.length&&(e.layerDefinition={drawingInfo:{labelingInfo:t.map(s=>s.write({},i))}})}set labelsVisible(t){this._setAndNotifyLayer("labelsVisible",t)}set layer(t){var e;this._set("layer",t),(e=this.sublayers)==null||e.forEach(r=>r.layer=t)}set listMode(t){this._set("listMode",t)}set minScale(t){this._setAndNotifyLayer("minScale",t)}readMinScale(t,e){var r;return e.minScale||((r=e.layerDefinition)==null?void 0:r.minScale)||0}set maxScale(t){this._setAndNotifyLayer("maxScale",t)}readMaxScale(t,e){var r;return e.maxScale||((r=e.layerDefinition)==null?void 0:r.maxScale)||0}readObjectIdFieldFromService(t,e){var i;if((e=e.layerDefinition||e).objectIdField)return e.objectIdField;const r=(i=e.fields)==null?void 0:i.find(s=>s.type==="esriFieldTypeOID");return r==null?void 0:r.name}set opacity(t){this._setAndNotifyLayer("opacity",t)}readOpacity(t,e){var i;const{layerDefinition:r}=e;return 1-.01*((r==null?void 0:r.transparency)??((i=r==null?void 0:r.drawingInfo)==null?void 0:i.transparency)??0)}writeOpacity(t,e,r,i){e.layerDefinition={drawingInfo:{transparency:100-100*t}}}set orderBy(t){this._setAndNotifyLayer("orderBy",t)}writeParent(t,e){this.parent&&this.parent!==this.layer?e.parentLayerId=me(this.parent.id):e.parentLayerId=-1}get queryTask(){var d;if(!this.layer)return null;const{capabilities:t,fieldsIndex:e,layer:r,url:i}=this,{spatialReference:s}=r,o="gdbVersion"in r?r.gdbVersion:void 0,y=ge("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF);return new Re({fieldsIndex:e,gdbVersion:o,pbfSupported:y,queryAttachmentsSupported:((d=t==null?void 0:t.operations)==null?void 0:d.supportsQueryAttachments)??!1,sourceSpatialReference:s,url:i})}set renderer(t){if(Se(t,this.fieldsIndex),t){for(const e of t.symbols)if(we(e)){L.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",t)}get source(){return this._get("source")||new C({mapLayerId:this.id})}set source(t){this._setAndNotifyLayer("source",t)}set sublayers(t){this._handleSublayersChange(t,this._get("sublayers")),this._set("sublayers",t)}castSublayers(t){return ve(J.ofType($),t)}writeSublayers(t,e,r){var i;(i=this.sublayers)!=null&&i.length&&(e[r]=this.sublayers.map(s=>s.id).toArray().reverse())}readTitle(t,e){var r;return((r=e.layerDefinition)==null?void 0:r.name)??e.name}readTypeIdField(t,e){let r=(e=e.layerDefinition||e).typeIdField;if(r&&e.fields){r=r.toLowerCase();const i=e.fields.find(s=>s.name.toLowerCase()===r);i&&(r=i.name)}return r}get url(){var i;const t=((i=this.layer)==null?void 0:i.parsedUrl)??this._lastParsedUrl,e=this.source;if(!t)return null;if(this._lastParsedUrl=t,(e==null?void 0:e.type)==="map-layer")return`${t.path}/${e.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${t.path}/dynamicLayer?${Ie(r)}`}set url(t){this._overrideIfSome("url",t)}set visible(t){this._setAndNotifyLayer("visible",t)}writeVisible(t,e,r,i){e[r]=this.getAtOrigin("defaultVisibility","service")||t}clone(){const{store:t}=j(this),e=new $;return j(e).store=t.clone(Ze),this.commitProperty("url"),e._lastParsedUrl=this._lastParsedUrl,e}createPopupTemplate(t){return xe(this,t)}createQuery(){return new Oe({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var s;if(this.hasOwnProperty("sublayers"))return null;const t=(await Le(async()=>{const{default:o}=await import("./FeatureLayer-BkuEi8qS.js");return{default:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]))).default,{layer:e,url:r}=this;let i;if(r&&this.originIdOf("url")>2)i=new t({url:r});else{if(!(e!=null&&e.parsedUrl))throw new b("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const o=e.parsedUrl;i=new t({url:o.path}),o&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return(e==null?void 0:e.refreshInterval)!=null&&(i.refreshInterval=e.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=D(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(i.labelingInfo=D(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(i.visible=this.visible),this.originIdOf("minScale")>0&&(i.minScale=this.minScale),this.originIdOf("maxScale")>0&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(i.popupTemplate=D(this.popupTemplate)),this.originIdOf("renderer")>2&&(i.renderer=D(this.renderer)),((s=this.source)==null?void 0:s.type)==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(i.title=this.title),(e==null?void 0:e.type)==="map-image"&&e.originIdOf("customParameters")>0&&(i.customParameters=e.customParameters),(e==null?void 0:e.type)==="tile"&&e.originIdOf("customParameters")>0&&(i.customParameters=e.customParameters),i}getField(t){return this.fieldsIndex.get(t)}getFeatureType(t){return Fe(this.types,this.typeIdField,t)}getFieldDomain(t,e){const r=e==null?void 0:e.feature,i=this.getFeatureType(r);if(i){const s=i.domains&&i.domains[t];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(t)}async queryAttachments(t,e){var S,c,m,w;await this.load(),t=_e.from(t);const r=this.capabilities;if(!((S=r==null?void 0:r.data)!=null&&S.supportsAttachment))throw new b("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:o,num:y,size:d,start:u,where:f}=t;if(!((c=r==null?void 0:r.operations)!=null&&c.supportsQueryAttachments)&&((i==null?void 0:i.length)>0||(o==null?void 0:o.length)>0||(d==null?void 0:d.length)>0||y||u||f))throw new b("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",t);if(!(s!=null&&s.length||o!=null&&o.length||f))throw new b("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",t);return!((m=r==null?void 0:r.attachment)!=null&&m.supportsOrderByFields)&&((w=t.orderByFields)!=null&&w.length)&&((t=t.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(t,e)}async queryFeatureCount(t=this.createQuery(),e){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryFeatureCount:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeForCount(t,{...e,query:{...(s=this.layer)==null?void 0:s.customParameters,token:r}})}async queryFeatures(t=this.createQuery(),e){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(t,{...e,query:{...(i=this.layer)==null?void 0:i.customParameters,token:(s=this.layer)==null?void 0:s.apiKey}});if(r!=null&&r.features){const o=this.graphicOrigin;for(const y of r.features)y.sourceLayer=this,y.origin=o}return r}async queryObjectIds(t=this.createQuery(),e){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryObjectIds:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeForIds(t,{...e,query:{...(s=this.layer)==null?void 0:s.customParameters,token:r}})}async queryRelatedFeatures(t,e){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryRelatedFeatures:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeRelationshipQuery(t,{...e,query:{...(s=this.layer)==null?void 0:s.customParameters,token:r}})}async queryRelatedFeaturesCount(t,e){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new b("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new b("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeRelationshipQueryForCount(t,{...e,query:{...(s=this.layer)==null?void 0:s.customParameters,token:r}})}async reload(t){if(this.loadStatus==="not-loaded")return this.load(t).then(()=>{});const{layer:e,url:r}=this;if(!e&&!r)throw new b("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=e?await e.fetchSublayerInfo(this,t):(await N(r,{query:{f:"json"},...t})).data;if(this.loaded&&this.originIdOf("url")>2){const s=new Set(["drawingInfo","maxScale","minScale","name"]);if(i!=null)for(const o of Object.keys(i))s.has(o)&&delete i[o]}i&&(this.sourceJSON={...this.sourceJSON,...i},this.read({layerDefinition:i},{origin:"service",layer:e,url:Te(r)}))}toExportImageJSON(t){var o,y,d,u,f,S;const e={id:this.id,source:((o=this.source)==null?void 0:o.toJSON())||{mapLayerId:this.id,type:"mapLayer"}},r=Pe(t,this.definitionExpression);r!=null&&(e.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((c,m)=>(c[m]=this.originIdOf(m),c),{});if(Object.keys(i).some(c=>i[c]>2)){const c=e.drawingInfo={};if(i.renderer>2&&(c.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>2&&(c.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>2)if(this.labelingInfo){!this.loaded&&((y=this.labelingInfo)!=null&&y.some(w=>!w.labelPlacement))&&L.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let m=this.labelingInfo;this.geometryType!=null&&(m=De(this.labelingInfo,V.toJSON(this.geometryType))),c.showLabels=!0,c.labelingInfo=m.filter(w=>w.labelPlacement).map(w=>w.toJSON({origin:"service",layer:this.layer}))}else c.showLabels=!1;i.opacity>2&&(c.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(c.renderer)}return(((f=(u=(d=this.layer)==null?void 0:d.capabilities)==null?void 0:u.exportMap)==null?void 0:f.supportsSublayerOrderBy)??!1)&&this.originIdOf("orderBy")>2&&(e.orderBy=((S=this.orderBy)==null?void 0:S.map(c=>c.toJSON()))??null),e}_assignDefaultSymbolColors(t){this._forEachSimpleMarkerSymbols(t,e=>{var r;e.color||e.style!=="esriSMSX"&&e.style!=="esriSMSCross"||((r=e.outline)!=null&&r.color?e.color=e.outline.color:e.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(t,e){if(t){const r=("uniqueValueInfos"in t?t.uniqueValueInfos:"classBreakInfos"in t?t.classBreakInfos:null)??[];for(const i of r)k(i.symbol)&&e(i.symbol);"symbol"in t&&k(t.symbol)&&e(t.symbol),"defaultSymbol"in t&&k(t.defaultSymbol)&&e(t.defaultSymbol)}}_setAndNotifyLayer(t,e){var d,u,f,S;const r=this.layer,i=this._get(t);let s,o;switch(t){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",o="supportsModification";break;case"orderBy":s="supportsSublayerOrderBy",o="supportsModification"}const y=j(this).getDefaultOrigin();if(y!=="service"){if(s&&((f=(u=(d=this.layer)==null?void 0:d.capabilities)==null?void 0:u.exportMap)==null?void 0:f[s])===!1)return void this._logLockedError(t,`capability not available 'layer.capabilities.exportMap.${s}'`);if(o&&((S=this.capabilities)==null?void 0:S.exportMap[o])===!1)return void this._logLockedError(t,`capability not available 'capabilities.exportMap.${o}'`)}t!=="source"||this.loadStatus==="not-loaded"?(this._set(t,e),y!=="service"&&i!==e&&(r!=null&&r.emit)&&r.emit("sublayer-update",{propertyName:t,target:this})):this._logLockedError(t,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(t,e){e&&(e.forEach(r=>{r.parent=null,r.layer=null}),this.removeAllHandles()),t&&(t.forEach(r=>{r.parent=this,r.layer=this.layer}),this.addHandles([t.on("after-add",({item:r})=>{r.parent=this,r.layer=this.layer}),t.on("after-remove",({item:r})=>{r.parent=null,r.layer=null}),t.on("before-changes",r=>{var i,s,o;(((o=(s=(i=this.layer)==null?void 0:i.capabilities)==null?void 0:s.exportMap)==null?void 0:o.supportsSublayersChanges)??1)||(L.getLogger(this).error(new b("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())})]))}_logLockedError(t,e){const{layer:r,declaredClass:i}=this;L.getLogger(i).error(new b("sublayer:locked",`Property '${String(t)}' can't be changed on Sublayer from the layer '${r==null?void 0:r.id}'`,{reason:e,sublayer:this,layer:r}))}_getLayerDomain(t){var e;return((e=this.fieldsIndex.get(t))==null?void 0:e.domain)??null}},$=x,x.test={isMapImageLayerOverridePolicy:t=>t===A||t===I||t===F,isTileImageLayerOverridePolicy:t=>t===B},x);a([n({type:qe,json:{name:"attributeTableInfo",write:{overridePolicy:F},origins:{"web-scene":{write:!1}}}})],l.prototype,"attributeTableTemplate",void 0),a([n({readOnly:!0})],l.prototype,"capabilities",void 0),a([v("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null),a([n()],l.prototype,"defaultPopupTemplate",null),a([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:F}}})],l.prototype,"definitionExpression",null),a([n({readOnly:!0})],l.prototype,"effectiveScaleRange",null),a([v("service","maxScaleRange",["minScale","maxScale"])],l.prototype,"readMaxScaleRange",null),a([n({type:[Ee],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0),a([n({readOnly:!0})],l.prototype,"fieldsIndex",null),a([n({type:Qe,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:F},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null),a([n({type:ie,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0),a([n({type:V.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:V.read}}}}})],l.prototype,"geometryType",void 0),a([n({type:String})],l.prototype,"globalIdField",void 0),a([v("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null),a([n({readOnly:!0})],l.prototype,"graphicOrigin",null),a([n({type:M,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null),a([n({readOnly:!0})],l.prototype,"isTable",void 0),a([v("service","isTable",["type"])],l.prototype,"readIsTable",null),a([n({value:null,type:[je],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:A}}})],l.prototype,"labelingInfo",null),a([O("labelingInfo")],l.prototype,"writeLabelingInfo",null),a([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:I}}})],l.prototype,"labelsVisible",null),a([n({value:null})],l.prototype,"layer",null),a([n({type:String,json:{write:{overridePolicy:B}}})],l.prototype,"layerItemId",void 0),a([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:q}}})],l.prototype,"legendEnabled",void 0),a([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null),a([n({type:Number,value:0,json:{write:{overridePolicy:I}}})],l.prototype,"minScale",null),a([v("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null),a([n({type:Number,value:0,json:{write:{overridePolicy:I}}})],l.prototype,"maxScale",null),a([v("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null),a([n()],l.prototype,"objectIdField",void 0),a([v("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null),a([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:I}}})],l.prototype,"opacity",null),a([v("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null),a([O("opacity")],l.prototype,"writeOpacity",null),a([n({value:null,type:[Ae],json:{name:"layerDefinition.orderBy",read:{reader:$e},write:{overridePolicy:F},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"orderBy",null),a([n({json:{type:M,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:I}}})],l.prototype,"parent",void 0),a([O("parent")],l.prototype,"writeParent",null),a([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(p,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:q,writer(p,t,e){t[e]=!p}}}})],l.prototype,"popupEnabled",void 0),a([n({type:Me,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:q}}})],l.prototype,"popupTemplate",void 0),a([n({readOnly:!0})],l.prototype,"queryTask",null),a([n({type:[Je],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],l.prototype,"relationships",void 0),a([n({types:Ne,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:A},origins:{"web-scene":{types:ke,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:A}}}}})],l.prototype,"renderer",null),a([n({types:{key:"type",base:null,typeMap:{"data-layer":z,"map-layer":C}},cast(p){if(p){if("mapLayerId"in p)return X(C,p);if("dataSource"in p)return X(z,p)}return p},json:{name:"layerDefinition.source",write:{overridePolicy:I}}})],l.prototype,"source",null),a([n()],l.prototype,"sourceJSON",void 0),a([n({type:se,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],l.prototype,"spatialReference",void 0),a([n({value:null,json:{type:[M],write:{target:"subLayerIds",allowNull:!0,overridePolicy:I}}})],l.prototype,"sublayers",null),a([Ce("sublayers")],l.prototype,"castSublayers",null),a([O("sublayers")],l.prototype,"writeSublayers",null),a([n({type:String,json:{name:"name",write:{overridePolicy:q}}})],l.prototype,"title",void 0),a([v("service","title",["name","layerDefinition.name"])],l.prototype,"readTitle",null),a([n({type:String})],l.prototype,"typeIdField",void 0),a([n({json:{read:!1},readOnly:!0,value:"sublayer"})],l.prototype,"type",void 0),a([v("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null),a([n({type:[Be],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0),a([n({type:String,json:{name:"layerUrl",write:{overridePolicy:B}}})],l.prototype,"url",null),a([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:I}}})],l.prototype,"visible",null),a([O("visible")],l.prototype,"writeVisible",null),l=$=a([Q("esri.layers.support.Sublayer")],l);function Ye(p,t){const e=[],r={};return p&&p.forEach(i=>{const s=new l;if(s.read(i,t),r[s.id]=s,i.parentLayerId!=null&&i.parentLayerId!==-1){const o=r[i.parentLayerId];o.sublayers||(o.sublayers=[]),o.sublayers.unshift(s)}else e.unshift(s)}),e}const E=J.ofType(l);function oe(p,t){p&&p.forEach(e=>{t(e),e.sublayers&&e.sublayers.length&&oe(e.sublayers,t)})}const ut=p=>{const t=p;let e=class extends t{constructor(...r){super(...r),this.allSublayers=new Ve({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{},6:{}},this.subtables=null,this.addHandles([Z(()=>this.sublayers,(i,s)=>this._handleSublayersChange(i,s),Y),Z(()=>this.subtables,(i,s)=>this._handleSublayersChange(i,s),Y)])}destroy(){this.allSublayers.destroy()}readSublayers(r,i){if(!i||!r)return;const{sublayersSourceJSON:s}=this,o=R(i.origin);if(o<2||(s[o]={context:i,visibleLayers:r.visibleLayers||s[o].visibleLayers,layers:r.layers||s[o].layers},o>2))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:y,origin:d}=this.createSublayersForOrigin("web-document"),u=j(this);u.setDefaultOrigin(d),this._set("sublayers",new E(y)),u.setDefaultOrigin("user")}findSublayerById(r){return this.allSublayers.find(i=>i.id===r)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(r){let i;const s=R(r==="web-document"?"web-map":r);let o=2,y=this.sublayersSourceJSON[2].layers,d=this.sublayersSourceJSON[2].context,u=null;const f=[3,4,5].filter(h=>h<=s);for(const h of f){const g=this.sublayersSourceJSON[h];He(g.layers)&&(o=h,y=g.layers,d=g.context,g.visibleLayers&&(u={visibleLayers:g.visibleLayers,context:g.context}))}const S=[3,4,5].filter(h=>h>o&&h<=s);let c=null;for(const h of S){const{layers:g,visibleLayers:T,context:P}=this.sublayersSourceJSON[h];g&&(c={layers:g,context:P},i??(i=h)),T&&(u={visibleLayers:T,context:P})}const m=Ye(y,d),w=new Map,_=new Set;if(c)for(const h of c.layers)w.set(h.id,h);if(u!=null&&u.visibleLayers)for(const h of u.visibleLayers)_.add(h);return oe(m,h=>{c&&h.read(w.get(h.id),c.context),u&&h.read({defaultVisibility:_.has(h.id)},u.context)}),{origin:ee(o),originWithPartialOverrides:i?ee(i):null,sublayers:new E({items:m})}}read(r,i){super.read(r,i),this.readSublayers(r,i)}_handleSublayersChange(r,i){i&&(i.forEach(s=>{s.parent=null,s.layer=null}),this.removeHandles("sublayers-owner")),r&&(r.forEach(s=>{s.parent=this,s.layer=this}),this.addHandles([r.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),r.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(r.on("before-changes",s=>{L.getLogger("esri.layers.TileLayer").error(new b("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([n({readOnly:!0})],e.prototype,"allSublayers",void 0),a([n({readOnly:!0,type:J.ofType(l)})],e.prototype,"serviceSublayers",void 0),a([n({value:null,type:E,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0),a([n({readOnly:!0})],e.prototype,"sublayersSourceJSON",void 0),a([n({type:E,json:{read:{source:"tables"}}})],e.prototype,"subtables",void 0),e=a([Q("esri.layers.mixins.SublayersOwner")],e),e};export{ot as h,l,ut as m};
