import{iY as p,cf as D,iZ as U,m as z,i_ as R}from"./index-7LVg-iY6.js";const L=15.5,S=4,P=64,Z=1024,_={outlineWidth:.75,referenceWidth:.75,cap:p.CIMSolidStroke.capstyle,join:p.CIMSolidStroke.joinstyle,miterLimit:p.CIMSolidStroke.miterlimit};function $(t,s,n=0){const e=D(t,0,G);for(let a=0;a<4;a++)s[n+a]=Math.floor(256*W(e*q[a]))}function b(t,s=0){let n=0;for(let e=0;e<4;e++)n+=t[s+e]*E[e];return n}const q=[1,256,65536,16777216],E=[1/256,1/65536,1/16777216,1/4294967296],G=b(new Uint8ClampedArray([255,255,255,255]));b(new Uint8ClampedArray([255,255,255,0]));function W(t){return t-Math.floor(t)}const I=()=>z.getLogger("esri.symbols.cim.rasterizingUtils"),j=32,B=t=>t==="vertical"||t==="horizontal"||t==="cross"||t==="esriSFSCross"||t==="esriSFSVertical"||t==="esriSFSHorizontal";function J(t,s,n){const e=s.style,a=U(Math.ceil(n)),o=B(e)?8*a:16*a,r=2*a;t.width=o,t.height=o;const i=t.getContext("2d");i.strokeStyle="#ffffff",i.lineWidth=a,i.beginPath(),e!=="vertical"&&e!=="cross"&&e!=="esriSFSCross"&&e!=="esriSFSVertical"||(i.moveTo(o/2,-r),i.lineTo(o/2,o+r)),e!=="horizontal"&&e!=="cross"&&e!=="esriSFSCross"&&e!=="esriSFSHorizontal"||(i.moveTo(-r,o/2),i.lineTo(o+r,o/2)),e!=="backward-diagonal"&&e!=="diagonal-cross"&&e!=="esriSFSDiagonalCross"&&e!=="esriSFSBackwardDiagonal"||(i.moveTo(-r,-r),i.lineTo(o+r,o+r),i.moveTo(o-r,-r),i.lineTo(o+r,r),i.moveTo(-r,o-r),i.lineTo(r,o+r)),e!=="forward-diagonal"&&e!=="diagonal-cross"&&e!=="esriSFSForwardDiagonal"&&e!=="esriSFSDiagonalCross"||(i.moveTo(o+r,-r),i.lineTo(-r,o+r),i.moveTo(r,-r),i.lineTo(-r,r),i.moveTo(o+r,o-r),i.lineTo(o-r,o+r)),i.stroke();const h=i.getImageData(0,0,t.width,t.height),l=new Uint8Array(h.data);let f;for(let c=0;c<l.length;c+=4)f=l[c+3]/255,l[c]=l[c]*f,l[c+1]=l[c+1]*f,l[c+2]=l[c+2]*f;return[l,t.width,t.height,a]}function K(t){t.length%2==1&&(t=[...t,...t]);const s=t.reduce((c,u)=>c+u,0),n=Math.round(s*S),e=1,a=new Float32Array(n*e);let o=0,r=0,i=.5,h=!0;for(const c of t){for(o=r,r+=c*S;i<=r;){const u=i-.5,m=Math.min(Math.abs(i-o),Math.abs(i-r));a[u]=h?-m:m,i++}h=!h}const l=a.length,f=new Uint8Array(4*l);for(let c=0;c<l;++c){const u=a[c]/S;$(u/P*.5+.5,f,4*c)}return[f,n,e]}function Q(t,s){t==null&&(t=[]);const n=s==="Butt",e=s==="Square",a=!n&&!e;t.length%2==1&&(t=[...t,...t]);const o=L,r=2*o;let i=0;for(const d of t)i+=d;const h=Math.round(i*o),l=new Float32Array(h*r),f=.5*o;let c=0,u=0,m=.5,y=!0;for(const d of t){for(c=u,u+=d*o;m<=u;){let C=.5;for(;C<r;){const A=(C-.5)*h+m-.5,g=a?(C-o)*(C-o):Math.abs(C-o);l[A]=y?n?Math.max(Math.max(c+f-m,g),Math.max(m-u+f,g)):g:a?Math.min((m-c)*(m-c)+g,(m-u)*(m-u)+g):e?Math.min(Math.max(m-c,g),Math.max(u-m,g)):Math.min(Math.max(m-c+f,g),Math.max(u+f-m,g)),C++}m++}y=!y}const T=l.length,v=new Uint8Array(4*T);for(let d=0;d<T;++d){const C=(a?Math.sqrt(l[d]):l[d])/o;$(C,v,4*d)}return[v,h,r]}function X(t,s){const{colorRamp:n,gradientType:e}=s,a=n.type==="CIMFixedColorRamp",o=s.interval||p.CIMGradientFill.interval;let r=w(n);return a&&(r=N(r,o)),e==="Discrete"||a?V(t,r,o):H(t,r)}let x;function tt(t,s){const{colorRamp:n,gradientType:e}=s,a=w(n),o=n.type==="CIMFixedColorRamp";if(e==="Continuous"&&!o)return M(t,a);const r=s.interval??p.CIMGradientFill.interval;if(o)return M(t,N(a,r));const i=[];x??(x=document.createElement("canvas")),F(x,a,r,1,0);const h=x.getContext("2d").getImageData(0,0,r,1).data;for(let l=0,f=0;l<r;l++,f=4*l){const c=[h[f+0],h[f+1],h[f+2],h[f+3]];i.push({offset:l/r,color:c}),i.push({offset:(l+1)/r,color:c})}return M(t,i)}function w(t){const s=[];switch(t.type){case"CIMPolarContinuousColorRamp":case"CIMLinearContinuousColorRamp":{t.type==="CIMPolarContinuousColorRamp"&&I().warnOnce("CIMPolarContinuousColorRamp is currently unsupported. Falling back to CIMLinearContinuousColorRamp.");const n=t;s.push({offset:0,color:[n.fromColor[0],n.fromColor[1],n.fromColor[2],n.fromColor[3]/255]}),s.push({offset:1,color:[n.toColor[0],n.toColor[1],n.toColor[2],n.toColor[3]/255]});break}case"CIMFixedColorRamp":{const n=t,e=1/(n.colors.length-1);let a=0;for(const o of n.colors)s.push({offset:a,color:[o[0],o[1],o[2],o[3]/255]}),a+=e;break}case"CIMMultipartColorRamp":{const n=t,e=n.weights.reduce((o,r)=>o+r,0);let a=0;for(let o=0;o<n.colorRamps.length;o++){const r=n.colorRamps[o],i=n.weights[o],h=w(r);for(const l of h)s.push({offset:(a+l.offset*i)/e,color:l.color});a+=i}break}default:I().error(`Color ramp "${t.type}" currently unsupported.`)}return s}function N(t,s){const n=[],e=(t.length-1)/(s-1);for(let a=0;a<s;a++){const o=t[Math.round(a*e)].color;n.push({offset:a/s,color:o}),n.push({offset:(a+1)/s,color:o})}return n}function H(t,s){return F(t,s,j,1,R),k(t)}function V(t,s,n){return F(t,s,n,1,R),k(t)}function M(t,s,n=0){for(const{offset:e,color:a}of s)t.addColorStop(Math.min(Math.max(e,n),1-n),`rgba(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`)}function F(t,s,n,e,a){const o=n+2*a;t.width=o,t.height=e;const r=(a+1)/o,i=t.getContext("2d",{willReadFrequently:!0});if(s.length>0){const h=i.createLinearGradient(0,0,o,e);M(h,s,r),i.fillStyle=h}else i.fillStyle="rgba(128, 128, 128, 1)";i.fillRect(0,0,o,e)}function k(t){const{width:s,height:n}=t,e=t.getContext("2d").getImageData(0,0,s,n),a=new Uint8Array(e.data);for(let o=0;o<a.length;o+=4){const r=a[o+3]/255;a[o]*=r,a[o+1]*=r,a[o+2]*=r}return[a,s,n]}function O(t){var a,o,r,i;const s=((o=(a=t[0])==null?void 0:a[0])==null?void 0:o[0])??0,n=((i=(r=t[0])==null?void 0:r[0])==null?void 0:i[1])??0,e={ymin:n,xmin:s,ymax:n,xmax:s,width:0,height:0};for(let h=0;h<t.length;h++){const l=t[h];for(let f=0;f<l.length;f++){const c=l[f][0],u=l[f][1];c<e.xmin&&(e.xmin=c),c>e.xmax&&(e.xmax=c),u<e.ymin&&(e.ymin=u),u>e.ymax&&(e.ymax=u)}}return e.width=Math.abs(e.xmax-e.xmin),e.height=Math.abs(e.ymax-e.ymin),e}function ot(t,s){const n=O(t),e=n.width===0?1:n.width,a=n.height===0?1:n.height,o=[];for(let r=0;r<t.length;r++){const i=t[r],h=[];for(let l=0;l<i.length;l++){let f=Math.round(i[l][0]-n.xmin),c=Math.round(i[l][1]-n.ymin);if(f=s.xmin+f*s.width/e,c=s.ymin+c*s.height/a,isNaN(f)||isNaN(c))throw new Error("Scaled shape has NaN values");h.push([f,c])}o.push(h)}return o}function et(t,s,n){const e=[];for(let a=0;a<t.length;a++){const o=t[a],r=[];for(let i=0;i<o.length;i++){const h=o[i][0]+s,l=o[i][1]+n;if(isNaN(h)||isNaN(l))throw new Error("Scaled shape has NaN values");r.push([h,l])}e.push(r)}return e}export{et as R,ot as T,P as a,J as f,X as g,S as i,_ as l,K as m,$ as o,tt as p,Z as r,Q as u};
