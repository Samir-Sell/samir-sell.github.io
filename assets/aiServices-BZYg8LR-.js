import{z as b,D as a,F as i,Z as k,tI as H,c6 as Z,eX as E,H as W,b as X,m as Y,fU as j,fW as B,bw as T,M as $,bF as G}from"./index-DalZQxea.js";import{o as Q,t as F,Y as J,p as C}from"./Dictionary-DvAYV-J4.js";import{t as V}from"./commonProperties-DHiB1uzW.js";import{r as tt}from"./arcadeEnvironment-DFNr3Rut.js";let g=class extends b{constructor(r){super(r),this.text=null,this.detectedLanguage="en",this.detectedLanguageScore=-1}};a([i({type:String,json:{write:!0}})],g.prototype,"key",void 0),a([i({type:String,json:{write:!0}})],g.prototype,"text",void 0),a([i({type:String,json:{read:{source:"detectedLanguage.language"},write:{target:"detectedLanguage.language"}}})],g.prototype,"detectedLanguage",void 0),a([i({type:Number,json:{read:{source:"detectedLanguage.score"},write:{target:"detectedLanguage.score"}}})],g.prototype,"detectedLanguageScore",void 0),a([i({type:Object,json:{write:!0}})],g.prototype,"translation",void 0),g=a([k("esri.rest.support.TranslateResult")],g);async function et(o,r,s){const t=r.toJSON();t.contents=JSON.stringify(t.contents),t.token=await H(r.portalUrl,r.apiKey,{signal:s==null?void 0:s.signal,prompt:(s==null?void 0:s.authMode)!=="no-prompt"});const n=Z(o),e=E(n.query,{...s,query:t,method:"post",authMode:"anonymous"});return(await W(n.path,e)).data.results.map(c=>g.fromJSON(c))}let S=class extends b{constructor(o){super(o)}};a([i({type:String,json:{write:!0}})],S.prototype,"key",void 0),a([i({type:String,json:{write:!0}})],S.prototype,"text",void 0),S=a([k("esri.rest.support.TranslateContent")],S);let h=class extends b{constructor(o){super(o),this.to=null,this.contents=null,this.portalUrl="https://www.arcgis.com",this.translator="esri",this.from=null,this.apiKey=null,this.requestSource=null}};a([i({type:[String],json:{write:!0}})],h.prototype,"to",void 0),a([i({type:[S],json:{write:!0}})],h.prototype,"contents",void 0),a([i({type:String,json:{write:!0}})],h.prototype,"portalUrl",void 0),a([i({type:String,json:{write:!0,default:"esri"}})],h.prototype,"translator",void 0),a([i({type:String,json:{write:!0}})],h.prototype,"from",void 0),a([i(V)],h.prototype,"apiKey",void 0),a([i({type:String,json:{name:"x-esri-request-source"}})],h.prototype,"requestSource",void 0),h=a([k("esri.rest.support.TranslateParameters")],h);class z{constructor(r,s){this.portal=r,this._debugLog=s}async translate(r){var n;this.portal.loaded||await this.portal.load();const s=(n=this.portal.helperServices)==null?void 0:n.aiUtilityServices;if(s==null)return{success:!1};const t=s.url+s.translateUtility;try{return r.requestSource??(r.requestSource="arcade"),{success:!0,results:(await et(t,r,{authMode:"no-prompt"})).map(e=>e.toJSON())}}catch(e){return this._debugLog!=null&&(e instanceof Error||e instanceof X)&&this._debugLog(`TranslateText error: ${e.message}`),Y.getLogger("esri.arcade.functions.aiServices").error(e),{success:!1}}}}class st{constructor(r,s,t){this._parameters=r,this._maxTotalContentSize=s,this._maxContentsLength=t,this._requests=[],this._normalizedContents=new Map,this._contentsTotalSize=0}tryAdd(r){const s=new Set(r.filter(e=>!this._normalizedContents.has(e.text)).map(e=>e.text));if(this._requests.length+s.size>this._maxContentsLength)return null;let t=0;for(const e of s)t+=e.length;if((t+this._contentsTotalSize)*(this._parameters.to.length??1)>this._maxTotalContentSize)return null;const n=this._requests.length;for(const{key:e,text:c}of r)G(this._normalizedContents,c,()=>[]).push({batchIdx:n,key:e});return this._requests.push(r),this._contentsTotalSize+=t,n}async send(r){const s=[],t=[];let n=0;for(const[y,f]of this._normalizedContents)s.push(new S({key:String(n++),text:y})),t.push(f);const e=new h(this._parameters);e.contents=s;const c=await r.translate(e);if(!c.success)return Array.from(this._requests,()=>c);const x=Array.from(this._requests,()=>({success:!0,results:[]}));for(const y of c.results){const f=Number(y.key);for(const p of t[f])x[p.batchIdx].results.push({...y,key:p.key})}return x}}function L(o){const r=[...new Set(o.to)].sort(),s=o.from??null,t=o.portalUrl,n=o.translator,e=o.apiKey??null;return JSON.stringify([r,s,t,n,e])}async function K(o,r,s){try{return(await o.yieldFor(s))[r]}catch{return{success:!1}}}class I{constructor(r,s,{maxTotalContentSize:t=5e4,maxContentsLength:n=1e3}={}){this._executor=r,this._service=s,this._openBatches=new Map,this._maxTotalContentSize=t,this._maxContentsLength=n}create(r){return{translate:async s=>{const t=L(s),{contents:n,to:e,from:c,translator:x,portalUrl:y,apiKey:f}=s;if(e==null)return{success:!1};if(n==null||n.every(u=>u.text.length===0))return{success:!1};const p=this._openBatches.get(t);if(p!=null){const u=p.data.tryAdd(n);if(u!=null)return await K(r,u,p);p.send()}const d=new st({to:e,from:c,translator:x,portalUrl:y,apiKey:f},this._maxTotalContentSize,this._maxContentsLength),v=d.tryAdd(n);if(v!=null){const u=this._executor.openBatch(d,{open:w=>{this._openBatches.set(t,w)},execute:w=>w.send(this._service),close:w=>{this._openBatches.get(t)===w&&this._openBatches.delete(t)}});return await K(r,v,u)}return await this._service.translate(s)}}}}function R(o){o.mode==="async"&&(o.functions[tt("TranslateText")]=function(r,s){return o.standardFunctionAsync(r,s,async(t,n,e)=>{var q,O,N,U,P,M;if(Q(e,2,3,t,n),!j(e[0])&&!B(e[0])&&!F(e[0]))throw new T(t,"InvalidParameter",n);const c=J(e[0]);if(!j(e[1])&&!B(e[1])&&!F(e[1]))throw new T(t,"InvalidParameter",n);const x=J(e[1]);let y=null;if(e.length>=3){if(!j(e[2]))throw new T(t,"InvalidParameter",n);y=e[2]}const f=c.map((m,l)=>new S({key:String(l),text:m})),p=((q=t.services)==null?void 0:q.portal)??$.getDefault(),d=new h({to:x,contents:f,from:y,portalUrl:p.restUrl.replace(/\/sharing\/rest$/,"")}),v=new Map;let u=null;if(t.lrucache!=null){const m=t.lrucache;u??(u=L(d)),d.contents=(O=d.contents)==null?void 0:O.filter(l=>{const _=m.getCachedTranslation(u,l.text);return _==null||(v.set(l.key,{..._,key:l.key,text:l.text}),!1)})}if((N=d.contents)!=null&&N.length){const m=((U=t.services)==null?void 0:U.translation)??new z(p,t.console),l=await m.translate(d);if(!l.success)return new C({__proto__:null,success:!1});for(const _ of l.results){const A=(M=(P=d.contents)==null?void 0:P.find(D=>D.key===_.key))==null?void 0:M.text;if(A==null)throw new T(null,"NeverReach",null);v.set(_.key,_),t.lrucache!=null&&(u??(u=L(d)),t.lrucache.setCachedTranslation(u,A,{detectedLanguage:_.detectedLanguage,translation:_.translation}))}}const w=Array.from(f,m=>{const l=g.fromJSON(v.get(m.key));if(l==null)throw new T(null,"NeverReach",null);return l.text=m.text,C.convertJsonToArcade(l.toJSON(),t.timeZone??"system",!0)});return new C({__proto__:null,success:!0,results:w})})})}const lt=Object.freeze(Object.defineProperty({__proto__:null,BatchTranslationServiceFactory:I,PortalTranslationService:z,getTranslateParametersKey:L,registerFunctions:R},Symbol.toStringTag,{value:"Module"})),ct=Object.freeze(Object.defineProperty({__proto__:null,BatchTranslationServiceFactory:I,PortalTranslationService:z,getTranslateParametersKey:L,registerFunctions:R},Symbol.toStringTag,{value:"Module"}));export{lt as T,ct as a};
