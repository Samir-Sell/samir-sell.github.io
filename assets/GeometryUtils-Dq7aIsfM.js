import{gO as R}from"./index-7LVg-iY6.js";const z=512;let f=class T{constructor(t,i){this.x=t,this.y=i}static fromArray(t){return new T(t[0],t[1])}clone(){return new T(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){return this.x=t,this.y=i,this}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);return this.x/=s,this.y/=s,this}rightPerpendicular(){const t=this.x;return this.x=this.y,this.y=-t,this}leftPerpendicular(){const t=this.x;return this.x=-this.y,this.y=t,this}move(t,i){return this.x+=t,this.y+=i,this}assign(t){return this.x=t.x,this.y=t.y,this}assignAdd(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}assignSub(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}rotate(t,i){const s=this.x,h=this.y;return this.x=s*t-h*i,this.y=s*i+h*t,this}rotateReverse(t,i){const s=this.x,h=this.y;return this.x=s*t+h*i,this.y=-s*i+h*t,this}scale(t){return this.x*=t,this.y*=t,this}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new T(t.x+i.x,t.y+i.y)}static sub(t,i){return new T(t.x-i.x,t.y-i.y)}},P=class{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}},k=class{constructor(t,i,s,h=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=e,this._tileSize=z*h,this._dz=t,this._yPos=i,this._xPos=s}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let i=this._pixelRatio*this._pixelMargin;i/=this._finalRatio;const s=t>>this._dz;i>s&&(i=s),this._margin=i,this._xmin=s*this._xPos-i,this._ymin=s*this._yPos-i,this._xmax=this._xmin+s+2*i,this._ymax=this._ymin+s+2*i}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new f(t,i),this._firstPt=new f(t,i),this._dist=0}lineTo(t,i){const s=this._isIn(t,i),h=new f(t,i),e=f.distance(this._prevPt,h);let n,l,_,r,g,m,o,p;if(s)this._prevIsIn?this._lineTo(t,i,!0):(n=this._prevPt,l=h,_=this._intersect(l,n),this._start=this._dist+e*(1-this._r),this._lineTo(_.x,_.y,!0),this._lineTo(l.x,l.y,!0));else if(this._prevIsIn)l=this._prevPt,n=h,_=this._intersect(l,n),this._lineTo(_.x,_.y,!0),this._lineTo(n.x,n.y,!1);else{const x=this._prevPt,a=h;if(x.x<=this._xmin&&a.x<=this._xmin||x.x>=this._xmax&&a.x>=this._xmax||x.y<=this._ymin&&a.y<=this._ymin||x.y>=this._ymax&&a.y>=this._ymax)this._lineTo(a.x,a.y,!1);else{const c=[];if((x.x<this._xmin&&a.x>this._xmin||x.x>this._xmin&&a.x<this._xmin)&&(r=(this._xmin-x.x)/(a.x-x.x),p=x.y+r*(a.y-x.y),p<=this._ymin?m=!1:p>=this._ymax?m=!0:c.push(new P(r,this._xmin,p))),(x.x<this._xmax&&a.x>this._xmax||x.x>this._xmax&&a.x<this._xmax)&&(r=(this._xmax-x.x)/(a.x-x.x),p=x.y+r*(a.y-x.y),p<=this._ymin?m=!1:p>=this._ymax?m=!0:c.push(new P(r,this._xmax,p))),(x.y<this._ymin&&a.y>this._ymin||x.y>this._ymin&&a.y<this._ymin)&&(r=(this._ymin-x.y)/(a.y-x.y),o=x.x+r*(a.x-x.x),o<=this._xmin?g=!1:o>=this._xmax?g=!0:c.push(new P(r,o,this._ymin))),(x.y<this._ymax&&a.y>this._ymax||x.y>this._ymax&&a.y<this._ymax)&&(r=(this._ymax-x.y)/(a.y-x.y),o=x.x+r*(a.x-x.x),o<=this._xmin?g=!1:o>=this._xmax?g=!0:c.push(new P(r,o,this._ymax))),c.length===0)g?m?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):m?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(c.length>1&&c[0].ratio>c[1].ratio)this._start=this._dist+e*c[1].ratio,this._lineTo(c[1].x,c[1].y,!0),this._lineTo(c[0].x,c[0].y,!0);else{this._start=this._dist+e*c[0].ratio;for(let u=0;u<c.length;u++)this._lineTo(c[u].x,c[u].y,!0)}this._lineTo(a.x,a.y,!1)}}this._dist+=e,this._prevIsIn=s,this._prevPt=h}close(){if(this._line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(t=!0){return this._pushLine(),this._lines.length===0?null:(this._type===3&&t&&D.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==2)throw new Error("Only valid for lines");this._pushLine();const t=this._lines,i=t.length;if(i===0)return null;const s=[];for(let h=0;h<i;h++)s.push({line:t[h],start:this._starts[h]||0});return s}_isIn(t,i){return t>=this._xmin&&t<=this._xmax&&i>=this._ymin&&i<=this._ymax}_intersect(t,i){let s,h,e;if(i.x>=this._xmin&&i.x<=this._xmax)h=i.y<=this._ymin?this._ymin:this._ymax,e=(h-t.y)/(i.y-t.y),s=t.x+e*(i.x-t.x);else if(i.y>=this._ymin&&i.y<=this._ymax)s=i.x<=this._xmin?this._xmin:this._xmax,e=(s-t.x)/(i.x-t.x),h=t.y+e*(i.y-t.y);else{h=i.y<=this._ymin?this._ymin:this._ymax,s=i.x<=this._xmin?this._xmin:this._xmax;const n=(s-t.x)/(i.x-t.x),l=(h-t.y)/(i.y-t.y);n<l?(e=n,h=t.y+n*(i.y-t.y)):(e=l,s=t.x+l*(i.x-t.x))}return this._r=e,new f(s,h)}_pushLine(){this._line&&(this._type===1?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===2?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===3&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(t,i,s){this._type!==3?s&&(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line.push(new f(t,i))):(s||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),i<this._ymin&&(i=this._ymin),i>this._ymax&&(i=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line.push(new f(t,i)),this._isH=!1,this._isV=!1)}_lineTo(t,i,s){let h,e;if(this._type!==3)if(s){if(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(h=this._line[this._line.length-1],h.equals(t,i)))return;this._line.push(new f(t,i))}else this._line&&this._line.length>0&&this._pushLine();else if(s||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),i<this._ymin&&(i=this._ymin),i>this._ymax&&(i=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){h=this._line[this._line.length-1];const n=h.x===t,l=h.y===i;if(n&&l)return;this._isH&&n||this._isV&&l?(h.x=t,h.y=i,e=this._line[this._line.length-2],e.x===t&&e.y===i?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(e=this._line[this._line.length-2],this._isH=e.x===t,this._isV=e.y===i)):(this._isH=e.x===t,this._isV=e.y===i)):(this._line.push(new f(t,i)),this._isH=n,this._isV=l)}else this._line.push(new f(t,i))}};class C{setExtent(t){this._ratio=t===4096?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,i){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new f(t*s,i*s))}lineTo(t,i){const s=this._ratio;this._line.push(new f(t*s,i*s))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),this._lines.length===0?null:this._lines}}let D=class d{static simplify(t,i,s){if(!s)return;const h=-i,e=t+i,n=-i,l=t+i,_=[],r=[],g=s.length;for(let o=0;o<g;++o){const p=s[o];if(!p||p.length<2)continue;let x,a=p[0];const c=p.length;for(let u=1;u<c;++u)x=p[u],a.x===x.x&&(a.x<=h&&(a.y>x.y?(_.push(o),_.push(u),_.push(0),_.push(-1)):(r.push(o),r.push(u),r.push(0),r.push(-1))),a.x>=e&&(a.y<x.y?(_.push(o),_.push(u),_.push(1),_.push(-1)):(r.push(o),r.push(u),r.push(1),r.push(-1)))),a.y===x.y&&(a.y<=n&&(a.x<x.x?(_.push(o),_.push(u),_.push(2),_.push(-1)):(r.push(o),r.push(u),r.push(2),r.push(-1))),a.y>=l&&(a.x>x.x?(_.push(o),_.push(u),_.push(3),_.push(-1)):(r.push(o),r.push(u),r.push(3),r.push(-1)))),a=x}if(_.length===0||r.length===0)return;d.fillParent(s,r,_),d.fillParent(s,_,r);const m=[];d.calcDeltas(m,r,_),d.calcDeltas(m,_,r),d.addDeltas(m,s)}static fillParent(t,i,s){const h=s.length,e=i.length;for(let n=0;n<e;n+=4){const l=i[n],_=i[n+1],r=i[n+2],g=t[l][_-1],m=t[l][_];let o=8092,p=-1;for(let x=0;x<h;x+=4){if(s[x+2]!==r)continue;const a=s[x],c=s[x+1],u=t[a][c-1],M=t[a][c];switch(r){case 0:case 1:if(v(g.y,u.y,M.y)&&v(m.y,u.y,M.y)){const w=Math.abs(M.y-u.y);w<o&&(o=w,p=x)}break;case 2:case 3:if(v(g.x,u.x,M.x)&&v(m.x,u.x,M.x)){const w=Math.abs(M.x-u.x);w<o&&(o=w,p=x)}}}i[n+3]=p}}static calcDeltas(t,i,s){const h=i.length;for(let e=0;e<h;e+=4){const n=[],l=d.calcDelta(e,i,s,n);t.push(i[e]),t.push(i[e+1]),t.push(i[e+2]),t.push(l)}}static calcDelta(t,i,s,h){const e=i[t+3];if(e===-1)return 0;const n=h.length;return n>1&&h[n-2]===e?0:(h.push(e),d.calcDelta(e,s,i,h)+1)}static addDeltas(t,i){const s=t.length;let h=0;for(let e=0;e<s;e+=4){const n=t[e+3];n>h&&(h=n)}for(let e=0;e<s;e+=4){const n=i[t[e]],l=t[e+1],_=h-t[e+3];switch(t[e+2]){case 0:n[l-1].x-=_,n[l].x-=_,l===1&&(n[n.length-1].x-=_),l===n.length-1&&(n[0].x-=_);break;case 1:n[l-1].x+=_,n[l].x+=_,l===1&&(n[n.length-1].x+=_),l===n.length-1&&(n[0].x+=_);break;case 2:n[l-1].y-=_,n[l].y-=_,l===1&&(n[n.length-1].y-=_),l===n.length-1&&(n[0].y-=_);break;case 3:n[l-1].y+=_,n[l].y+=_,l===1&&(n[n.length-1].y+=_),l===n.length-1&&(n[0].y+=_)}}}};const v=(y,t,i)=>y>=t&&y<=i||y>=i&&y<=t,O=Number.POSITIVE_INFINITY,I=Math.PI,F=2*I,N=128/I,S=256/360,W=I/180,q=1/Math.LN2;function b(y,t){return(y%=t)>=0?y:y+t}function Y(y){return b(y*N,256)}function j(y){return b(y*S,256)}function B(y){return Math.log(y)*q}function G(y,t,i){return y*(1-i)+t*i}const E=8,V=14,H=16;function J(y){return E+Math.max((y-V)*H,0)}function K(y,t,i){let s,h,e,n=0;for(const l of i){s=l.length;for(let _=1;_<s;++_)h=l[_-1],e=l[_],h.y>t!=e.y>t&&((e.x-h.x)*(t-h.y)-(e.y-h.y)*(y-h.x)>0?n++:n--)}return n!==0}function Q(y,t,i,s){let h,e,n,l;const _=s*s;for(const r of i){const g=r.length;if(!(g<2)){h=r[0].x,e=r[0].y;for(let m=1;m<g;++m){if(n=r[m].x,l=r[m].y,R(y,t,h,e,n,l)<_)return!0;h=n,e=l}}}return!1}function U(y,t,i,s,h,e,n){const l=Math.max(s,Math.min(t,e))-t,_=Math.max(h,Math.min(i,n))-i;return l*l+_*_<=y*y}function X(y,t){if(t===0||Number.isNaN(t))return y;const i=[],s=new f(0,0),h=new f(0,0),e=new f(0,0);for(let n=0;n<y.length;n++){const l=y[n],_=[];for(let r=0;r<l.length;r++){const g=l[r-1],m=l[r],o=l[r+1];r===0?s.setCoords(0,0):s.assignSub(m,g).normalize().rightPerpendicular(),r===l.length-1?h.setCoords(0,0):h.assignSub(o,m).normalize().rightPerpendicular(),e.assignAdd(s,h).normalize();const p=e.x*h.x+e.y*h.y;p!==0&&e.scale(1/p),_.push(f.add(m,e.scale(t)))}i.push(_)}return i}function Z(y,t,i,s){const h=new f(y[0],y[1]);if(h.scale(s),t==="viewport"){const e=-i*(Math.PI/180),n=Math.cos(e),l=Math.sin(e);h.rotate(n,l)}return h}export{K as I,Q as N,X as P,b as a,k as b,Z as c,J as d,F as e,Y as f,B as h,f as i,j as l,C as n,I as o,G as p,O as r,W as s,U as w};
