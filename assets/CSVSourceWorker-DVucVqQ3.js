import{cK as R,en as V,b as F,eC as j,cq as P,V as A,o as $,I as G,H as L,aR as _,ca as T,em as Q,ep as J,U as M,ad as B,gJ as Z,gI as Y,ak as U,ek as H,eq as W,q as K}from"./index-Cv0-fPI4.js";import{e as z,n as X}from"./date-Ctp1FiBW.js";import{s as ee,e as te}from"./OptimizedFeature-BV9bW67H.js";import{f as ie}from"./FeatureStore-0HAWND_Y.js";import{f as ne}from"./queryUtils-DeVm81Zw.js";import{W as se}from"./QueryEngine-CQQP-URc.js";import{c as re}from"./number-DuDLp1tj.js";import{n as oe}from"./locationUtils-7xMKN9t3.js";import"./memoryEstimations-djtQljaD.js";import"./featureConversionUtils-HUfCD0i2.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BoundsStore-5rrloH6V.js";import"./PooledRBush-WD1DMkkg.js";import"./timeSupport-QyVmT76e.js";import"./optimizedFeatureQueryEngineAdapter-DfuIQjU4.js";import"./WhereClauseCache-DLBjjzl-.js";import"./WhereClause--eO5j_0m.js";import"./quantizationUtils-Cv5HCpcD.js";import"./utils-6y3lEKt7.js";import"./utils-B_s1f2FV.js";import"./utils-22CP1Yif.js";import"./ClassBreaksDefinition-DGkykSID.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-DbzPOgNH.js";const E=/^\s*"([\S\s]*)"\s*$/,b=/""/g,S=`
`,ae=[","," ",";","|","	"];function*q(s,t,e){let i=0;for(;i<=s.length;){const n=s.indexOf(t,i),r=s.slice(i,n>-1?n:void 0);i+=r.length+t.length,e&&!r.trim()||(yield r)}}function C(s){const t=s.includes(`\r
`)?`\r
`:S;return q(s,t,!0)}function O(s,t){return q(s,t,!1)}function le(s,t,e){s=s.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...ae])).filter(o=>o!=null);for(const o of n){const c=N(s,o).length,u=N(t,o).length??c;c>1&&i.push({weight:Math.min(c,u),delimiter:o})}const r=i.sort(({weight:o},{weight:c})=>c-o).map(({delimiter:o})=>o);for(const o of r){const c=v(s,o).names,u=oe(c,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(u.longitudeFieldName&&u.latitudeFieldName)return{delimiter:o,locationInfo:u}}return{delimiter:r[0],locationInfo:null}}function*k(s,t,e,i=()=>Object.create(null)){const n=C(s);n.next();let r="",o="",c=0,u=i(),f=0;e:for(const h of n){const m=O(h,e);for(const y of m)if(r+=o+y,o="",c+=D(y),c%2==0){if(c>0){const g=E.exec(r);if(!g){u=i(),f=0,r="",c=0;continue e}u[t[f]]=g[1].replaceAll(b,'"'),f++}else u[t[f]]=r,f++;r="",c=0}else o=e;c===0?(yield u,u=i(),f=0):o=S}}function v(s,t){const e=N(s,t).filter(n=>n!=null),i=e.map(n=>R(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function N(s,t){if(!(s!=null&&s.length))return[];const e=[];let i="",n="",r=0;const o=O(s,t);for(const c of o)if(i+=n+c,n="",r+=D(c),r%2==0){if(r>0){const u=E.exec(i);u&&e.push(u[1].replaceAll(b,'"'))}else e.push(i);i="",r=0}else n=t;return e}function D(s){let t=0,e=0;for(e=s.indexOf('"',e);e>=0;)t++,e=s.indexOf('"',e+1);return t}function ce(s,t,e,i,n){const r=[],o=k(s,e,t),c=[];for(const u of o){if(c.length===10)break;c.push(u)}for(let u=0;u<e.length;u++){const f=e[u],h=i[u];if(f===n.longitudeFieldName||f===n.latitudeFieldName)r.push({name:f,type:"esriFieldTypeDouble",alias:h});else{let m;switch(ue(c.map(y=>y[f]))){case"integer":m="esriFieldTypeInteger";break;case"double":m="esriFieldTypeDouble";break;case"date":m="esriFieldTypeDate";break;default:m="esriFieldTypeString"}r.push({name:f,type:m,alias:h,length:V(m)})}}return r}function ue(s){if(!s.length)return"string";const t=/[^+\-.,0-9]/;return s.map(e=>{if(e!==""){if(!t.test(e)){let i=w(e);if(!isNaN(i))return/[.,]/.test(e)||!Number.isInteger(i)||i>214783647||i<-214783648?"double":"integer";if(e.includes("E")&&(i=Number(e),!Number.isNaN(i)||e.includes(",")&&(e=e.replace(",","."),i=Number(e),!Number.isNaN(i))))return"double"}return z(e)?"date":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}const w=function(){const s=re(),t=new RegExp("^"+s.regexp+"$"),e=new RegExp("["+s.group+"\\s\\xa0]","g"),i=s.factor;return n=>{const r=t.exec(n);if(s.factor=i,!r)return NaN;let o=r[1];if(!r[1]){if(!r[2])return NaN;o=r[2],s.factor*=-1}return o=o.replace(e,"").replace(s.decimal,"."),+o*s.factor}}();function fe(s){return JSON.parse(JSON.stringify(s))}const de=W("esriGeometryPoint"),me=["csv"],pe=[0,0];class he{constructor(t,e){this.x=t,this.y=e}}class Le{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var u;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((u=t==null?void 0:t.parsingOptions)==null?void 0:u.spatialReference)]),n=ye(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const r=this._createFeatures(i);this._queryEngine.featureStore.addMany(r);const{fullExtent:o,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=o,c){const{start:f,end:h}=c;n.layerDefinition.timeInfo.timeExtent=[f,h]}return n}async applyEdits(){throw new F("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(j)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),await this._queryEngine.executeQueryForSnapping(t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=P(this._snapshotFeatures),this._snapshotTask.promise.then(r=>{this._queryEngine.featureStore.clear(),r&&this._queryEngine.featureStore.addMany(r)},r=>{this._queryEngine.featureStore.clear(),A(r)||$.getLogger("esri.layers.CSVLayer").error(new F("csv-layer:refresh","An error occurred during refresh",{error:r}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new F("csv-layer:invalid-source","url not defined");const n=G(e);return(await L(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:r}=t.layerDefinition,o=new ie({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1}),c={type:"object-id",fieldName:e};return new se({fieldsIndex:_.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:T}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:r,featureIdInfo:c,spatialReference:n.spatialReference||{wkid:4326},featureStore:o})}_createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:r,spatialReference:o}=this._queryEngine;let c=[];const u=[],f=r.fields.filter(a=>a.name!==n).map(a=>a.name);let h=0;const m={};for(const a of r.fields)if(a.type!=="esriFieldTypeOID"&&a.type!=="esriFieldTypeGlobalID"){const p=Q(a);p!==void 0&&(m[a.name]=p)}const y=k(t,f,this._delimiter,J(m,n));for(const a of y){const p=this._parseCoordinateValue(a[e]),I=this._parseCoordinateValue(a[i]);if(I!=null&&p!=null&&!isNaN(p)&&!isNaN(I)){a[e]=p,a[i]=I;for(const l in a)if(l!==e&&l!==i)if(r.isDateField(l))a[l]=X(a[l]);else if(r.isNumericField(l)){const d=w(a[l]);isNaN(d)?a[l]=null:a[l]=d}else a[l]!=null&&(a[l]=fe(a[l]));a[n]=h,h++,c.push(new he(I,p)),u.push(a)}}if(!M({wkid:4326},o))if(B(o))for(const a of c)[a.x,a.y]=Z(a.x,a.y,pe);else c=Y(c,U.WGS84,o);const g=[];for(let a=0;a<c.length;a++){const{x:p,y:I}=c[a],l=u[a];l[n]=a+1,g.push(new ee(new te([],[p,I]),l,null,l[n]))}return g}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=w(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await ne(H,t)}catch{throw new F("csv-layer:projection-not-supported","Projection not supported")}}}function ye(s,t){var a,p,I;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:K(t.url,me)||"csv",dateFieldsTimeReference:{timeZoneIANA:T},drawingInfo:de,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},r=C(s),o=(a=r.next().value)==null?void 0:a.trim(),c=(p=r.next().value)==null?void 0:p.trim();if(!o)throw new F("csv-layer:empty-csv","CSV is empty",{csv:s});const{delimiter:u,locationInfo:f}=le(o,c,e);if(!u)throw new F("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:o,secondLine:c,parsingOptions:e});if(!f)throw new F("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:o,secondLine:c,parsingOptions:e});i.locationInfo=f,i.delimiter=u;const{names:h,aliases:m}=v(o,u),y=ce(s,i.delimiter,h,m,i.locationInfo);if((I=e.fields)!=null&&I.length){const l=new _(e.fields);for(const d of y){const x=l.get(d.name);x&&Object.assign(d,x)}}if(!y.some(l=>l.type==="esriFieldTypeOID"&&(n.objectIdField=l.name,!0))){const l={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=l.name,y.unshift(l)}n.fields=y;const g=new _(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=g.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=g.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const l=n.timeInfo;if(l.startTimeField){const d=g.get(l.startTimeField);d?(l.startTimeField=d.name,d.type="esriFieldTypeDate"):l.startTimeField=null}if(l.endTimeField){const d=g.get(l.endTimeField);d?(l.endTimeField=d.name,d.type="esriFieldTypeDate"):l.endTimeField=null}if(l.trackIdField){const d=g.get(l.trackIdField);l.trackIdField=d?d.name:null}l.startTimeField||l.endTimeField||(n.timeInfo=null)}return i}export{Le as default};
