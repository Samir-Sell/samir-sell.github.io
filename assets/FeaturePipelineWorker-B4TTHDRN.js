const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/apiConverter-MKUu7Tih.js","assets/Point2D-AUu76-L_.js","assets/Envelope2D-DXBkavsi.js","assets/ProjectionTransformation-Bu0AKopz.js","assets/Transformation2D-481oZy9q.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-7LVg-iY6.js","assets/index-KamasC9I.css","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-BKt79zJV.js"])))=>i.map(i=>d[i]);
import{sE as ke,cA as xe,mN as v,sF as Lt,ed as ot,p0 as Ut,d1 as zt,N as lt,ar as J,oW as ct,ag as y,_ as je,m as re,cm as Nt,aH as K,sG as Gt,aL as Le,lA as Wt,gw as Bt,ef as Ue,rH as ut,ru as D,oQ as Vt,kj as Fe,cF as Oe,a3 as C,i9 as Qt,cj as dt,dc as Ie,D as z,F as X,Z as ht,b as A,fB as Ht,e_ as Jt,sH as Zt,c7 as Kt,H as Xt,h7 as ie,aQ as te,bF as Yt,bp as pt,jX as es,ly as ft,lu as ts,a_ as ss,h6 as rs,cf as is,du as _t,bm as as,cw as ns,ec as os,cM as ls,js as cs,sI as us,$ as ds}from"./index-7LVg-iY6.js";import{n as ze,l as ae,p as Ce,s as hs,b as ps}from"./AttributeStore-Cc3nFPHX.js";import{r as N,t as fs,i as Me,_ as _s,e as Ne}from"./streamLayerUtils-DFlbJ4P1.js";import{r as gs,x as ys}from"./MeshWriterRegistry-CwC3kw9f.js";import{QueueProcessor as qe}from"./QueueProcessor-DvNK5IJW.js";import{M as ms,s as gt,w as bs,g as Ge,l as Is,t as V,a as vs,m as yt,X as ws}from"./featureConversionUtils-CFKvofkg.js";import{s as R,e as T}from"./OptimizedFeature-B76Ba1pI.js";import{f as Ss,a as ks}from"./queryUtils-BuJwL4AF.js";import{e as xs}from"./optimizedFeatureQueryEngineAdapter-BfxhLe6f.js";import{W as mt}from"./QueryEngine-9udAKRU0.js";import{i as ne}from"./FeatureMetadata-DLLKy1ha.js";import{u as S,O as Fs,b as Os}from"./FeatureStoreQueryAdapter-DZjH9xpN.js";import{r as We,l as Cs,a as Ms,d as bt,b as qs,t as H,c as oe,i as ve,n as As}from"./SourceChunkStore-BHmsOU1w.js";import{s as $s,i as Rs,u as Ts}from"./operatorGeodeticDensify-67TfOnG3.js";import{e as Ds}from"./geodeticCurveType-CirnHLSB.js";import{a as Es}from"./normalizeUtilsSync-C_1TlXDO.js";import{e as Ps,u as js}from"./FeatureIdInfo-CfQGbeMt.js";import{s as It}from"./quantizationUtils-C4h4Tggy.js";import{R as Be}from"./ogcFeatureUtils-C2kLg0KP.js";import{c as Ls,y as Ve}from"./query-BAoHL1WT.js";import{i as L,s as Us}from"./memoryEstimations-OaiSRTQo.js";import{n as zs}from"./pbf-Dt0FYVfe.js";import{b as Ns,h as Gs}from"./pbfQueryUtils-Di9m46Vy.js";import{d as vt}from"./parquet-BhvNLgfx.js";import{t as Qe}from"./CircularArray-CujHzHWW.js";import{createConnection as Ws}from"./createConnection-LHj_KBIX.js";import{n as Bs}from"./UpdateTracking2D-CN-5kEWt.js";import"./Utils-CK6faTS3.js";import"./BoundingBox-CDCLJ4a-.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./constants-BBnGEY1d.js";import"./timeSupport-DXzOPMkX.js";import"./labelPoint-BUZ7IXM6.js";import"./rasterizingUtils-DVUCc27c.js";import"./CIMSymbolHelper-DYmhbAMl.js";import"./BidiEngine-BvER9tXK.js";import"./GeometryUtils-Dq7aIsfM.js";import"./Rect-CUzevAry.js";import"./TexturedLineMeshWriter-B01-VNkX.js";import"./TurboLine-CNsQixi5.js";import"./grouping-BE8kAPqO.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./WhereClauseCache-BEPEYZ8O.js";import"./WhereClause-ByEtKijn.js";import"./utils-By3dGP9r.js";import"./utils-Z5PohkhY.js";import"./utils-CTwd30qW.js";import"./ClassBreaksDefinition-LfDkloxb.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-CfZNXjbi.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./geojson-BsySLxXw.js";import"./date-Ctp1FiBW.js";import"./sourceUtils-BB2rPH_W.js";import"./queryZScale-DlDf33Wr.js";let Vs=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){ke(this._eventLog.onEvent(e))}};const le=1,Ae=2,ce=4,$e=8,Re=16,ue=32,Te=64,de=128;function _e(u){switch(u){case le:case $e:case ue:return-1;case Ae:case Te:return 0;case ce:case Re:case de:return 1}}function ge(u){switch(u){case le:case Ae:case ce:return-1;case $e:case Re:return 0;case ue:case Te:case de:return 1}}const He=le|$e|ue,Je=ce|Re|de,Ze=le|Ae|ce,Ke=ue|Te|de;let Qs=class{constructor(e,t,s,r,a=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=a,this._meshes={self:new ze(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const i=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===i}get id(){return this.tileKey.id}vertexStart(){return this._meshes.self.vertexStart()??0}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((r,a)=>{const i=r.serialize(),n=1<<a,o=_e(n),l=ge(n),c=new xe(this.tileKey).getNormalizedNeighbor(o,l,e);t.message.push({tileId:c.id,...i.message}),t.transferList.push(...i.transferList)}),t}_addOverlap(e,t,s,r){const a=Math.min(v/2,s),i=Math.min(v/2,r),n=255^((e<0+a?Je:e>=v-a?He:Je|He)|(t<0+i?Ke:t>=v-i?Ze:Ke|Ze));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const i=-_e(t)*v,n=-ge(t)*v;if(n!==0)continue;this._meshes.self.copyLast(i,n);continue}if(!this._meshes.neighbors[e]){const i=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new ze(t,i)}const s=this._meshes.neighbors[e],r=-_e(t)*v,a=-ge(t)*v;s.copyLastFrom(this._meshes.self,r,a)}}}},Hs=class{},P=class wt{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new wt;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){var t;return((t=this._defaultResult)==null?void 0:t.some(s=>s.hasArcadeDependency(e)))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const a=this.getBackgroundFill();if(a)return[...a,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Js=class St extends P{static async fromDictionaryRenderer(e,t){const s=await Lt.from(t.dictionaryInfo,t.userConfig,t.fieldMap);return new St(e,s)}constructor(e,t){super(),this._context=e,this._evaluator=t,this._controlStringToPromise=new Map,this._controlStringToGroup=new Map}async fetchResources(e,t){const s=t.getCursor(),r=new Set;for(;s.next();){const i=this._evaluateControlString(s);i&&r.add(i)}const a=Array.from(r.values()).map(i=>this._ensureGroup(e,i));await Promise.all(a)}match(e,t){const s=this._evaluateControlString(e);return s?this._controlStringToGroup.get(s):null}_evaluateControlString(e){const t=e.readLegacyFeatureWorldSpace();return this._evaluator.evaluate(t,0,e.fields,null)}_ensureGroup(e,t){let s=this._controlStringToPromise.get(t);return s==null&&(s=this._fetchGroup(e,t),this._controlStringToPromise.set(t,s)),s}async _fetchGroup(e,t){const s=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",controlString:t});if(!s)return;const r=await this._context.createMeshWriters(s.meshes);this._controlStringToGroup.set(t,r)}},Zs=class kt extends P{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new kt(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async n=>{const o=await e.createMeshWriters(n.meshes);r.add(n,o)}));const a=await e.createMeshWriters(t.defaultSymbol);r.setDefault(a);const i=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(i),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){var t;return((t=this._field)==null?void 0:t.hasArcadeDependency(e))||this._intervals.some(s=>s.result.some(r=>r.hasArcadeDependency(e)))}doMatch(e,t){var r;const s=(r=this._field)==null?void 0:r.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let a=0;a<this._intervals.length;a++){const{interval:i,result:n}=this._intervals[a],o=s>=i.min,l=this._isMaxInclusive?s<=i.max:s<i.max;if(o&&l)return n}return null}},Ks=class xt extends P{static async fromLabelSchema(e,t){const s=t.classes.map(async a=>{const i=await e.createMeshWriters(a.meshes);return{minScale:a.minScale,maxScale:a.maxScale,meshes:i,expression:null,where:await e.storage.createWhereClause(a.where)}}),r=await Promise.all(s);return new xt(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),a=[];for(const i of r)i.where&&!i.where(e,s)||a.push(...i.meshes);return a}hasArcadeDependency(e){return this._labels.some(t=>t.meshes.some(s=>s.hasArcadeDependency(e)))}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Xs=class Ft extends P{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(o=>!!o),a=new Ft(r,t.fieldDelimiter),i=await e.createMeshWriters(t.defaultSymbol);a.setDefault(i);const n=await e.createMeshWriters(t.backgroundFill);return a.setBackgroundFill(n),await Promise.all(t.map.map(async(o,l)=>{const c=await e.createMeshWriters(o.symbol);o.value==="<Null>"?a.setNullResult(c):a.add(o.value,c,l+1)})),a}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){var t;return this._fields.some(s=>s.hasArcadeDependency(e))||[...this._resultsMap.values()].some(s=>s.meshWriters.some(r=>r.hasArcadeDependency(e)))||((t=this._nullResult)==null?void 0:t.some(s=>s.hasArcadeDependency(e)))||!1}doMatch(e,t){var a;const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return(a=this._resultsMap.get(r))==null?void 0:a.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const a=r.read(e,t);a==null||a===""?s.push("<Null>"):s.push(a)}return s.join(this._separator)}};async function E(u,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return P.from(u,e);case"interval":return Zs.fromIntervalSchema(u,e);case"dictionary":return Js.fromDictionaryRenderer(u,e);case"label":return Ks.fromLabelSchema(u,e);case"map":return Xs.fromMatcherSchema(u,e);case"subtype":return Ys.fromSubtypes(u,e);case"cluster":return er.fromClusterSchema(u,e);case"track":return tr.fromTrackSchema(u,e);default:throw new Error("Impl")}}let Ys=class Ot extends P{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const a in t.renderers){const i=parseInt(a,10),n=E(e,t.renderers[a]).then(o=>s.set(i,o));r.push(n)}return await Promise.all(r),new Ot(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),a=this._subMatchers.get(r);return a?a.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}},er=class Ct extends P{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([E(e,t.feature),E(e,t.cluster)]);return new Ct(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}},tr=class Mt extends P{static async fromTrackSchema(e,t){const[s,r,a]=await Promise.all([E(e,t.previousObservation),E(e,t.latestObservation),E(e,t.trackLine)]);return new Mt(s,r,a)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(N)){case 0:return this._trackLineMatcher.match(e,t,s);case 1:return this._latestObservationMatcher.match(e,t,s);case 2:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}},sr=class qt extends Hs{static async create(e,t){const s=await E(e,t.symbology),r=t.labels?await E(e,t.labels):null;return new qt(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){var s;await Promise.all([this._symbology.fetchResources(e,t),(s=this._labels)==null?void 0:s.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const a=this._symbology.match(t,s,r);if(a){for(const i of a)i.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s,r);if(!i)return;for(const n of i)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,a,i){const n=this._symbology.match(s,r,a);if(n){for(const o of n)o.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(s,r,a);if(!o)return;for(const l of o)l.setReferences(n),l.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){var t;return!(!this._symbology.hasArcadeDependency(e)&&!((t=this._labels)!=null&&t.hasArcadeDependency(e)))}},rr=class{constructor(e,t,s,r,a){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r,this.fieldsMap=a}async createMeshWriters(e){const t=e.map(s=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,s,this.fieldsMap));return Promise.all(t)}},ir=class{constructor(e){this._outstandingMessages=[],this._queue=new qe({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},De=class we{static async create(e,t){var r;if(t.statisticType==="count"){const a=new gs(1);return new we(t.name,t.alias,t.type,t.statisticType,a)}const s=await e.createComputedField({expression:(r=t.onStatisticExpression)==null?void 0:r.expression,field:t.onStatisticField});return new we(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,a){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=a}},he=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},At=class{constructor(e,t,s){this._source=e,this._attributeStore=t,this._sqlOptions=s,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}get usedMemory(){return 0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){var t;(t=this._sendStates.get(e.key.id))==null||t.destroy(),this._sendStates.delete(e.key.id)}get hasSubscribers(){return this._sendStates.size>0}requiresInvalidation(){return!1}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(e){}hasArcadeDependency(e){return!1}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,t=>t,t=>t)}getDisplayAndObjectIds(e){return this.displayMap(e,t=>t,(t,s,r)=>[t,r])}afterUpdateChunks(){}},Ee=class extends At{constructor(e,t,s,r,a){super(e,t,a),this.spatialReference=s,this.aggregateFields=r,this._arcadeDependencies=new Set,this.events=new ot,this.featureAdapter=xs;for(const i of r)Ut(this._arcadeDependencies,i.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new mt({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,featureIdInfo:this._metadata.featureIdInfo,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(e){}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=zt();for(const r of e){const a=ms(s,r.geometry,!1,!1);a&&t(a)}}},G=class{constructor(e,t,s,r,a){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=a,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},Se=class{constructor(e,t,s,r,a){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=a,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},ar=class extends he{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&bs(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}},nr=class $t extends Ee{static async create(e,t,s,r,a){const i=t.metadata.outSpatialReference,n=new ae({spatialReference:i}),o=await Promise.all(e.fields.map(async c=>De.create(n,c))),l=e.featureFilter?await Ce.create({geometryType:t.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:t.metadata.timeInfo,fieldsIndex:t.metadata.fieldsIndex,spatialReference:i,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await Ss(i,lt.WGS84),new $t(e,l,r,o,i,t,s,a)}constructor(e,t,s,r,a,i,n,o){super(i,n,a,r,o),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=ne.createFeature({geometryType:"esriGeometryPolygon",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new J(e.fields).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,outSpatialReference:i.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new ar(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values())t.reset(),yield new G(t.subscription,S.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(i=>[t(i),i])),a=[];for(const i of this._sendStates.values())for(const n of i.featuresWorldSpace()){const{objectId:o,displayId:l}=n,c=r.get(o);if(c!=null){const d=s(l,c,o);a.push(d),r.delete(o)}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const a of this._sendStates.values())for(const i of a.featuresWorldSpace())t.has(i.displayId)&&!s.has(i.objectId)&&(i.geometry&&r.push({...gt(i,this._metadata.geometryType,!1,!1),displayId:i.displayId}),s.add(i.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:a,featureCache:i}=e,n=r.tile;if(e.done)return;for(const _ of t.chunks()){if(s.has(_.chunkId))continue;s.add(_.chunkId);const g=_.queryInfo;if("tileId"in g){const m=new xe(g.tileId);if(m.level!==n.level||m.world!==n.key.world)continue}_.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(a,e.tile.extent,e.tile.resolution)}const o=[],l=r.tile.transform,c=r.tile.key.level;for(const _ of a.values()){let g=i.get(_.id);if(g)g.attributes=_.getAttributes();else{const m=_.getGeometry(this.spatialReference,l);g=new R(m,_.getAttributes(),null,_.id),m||(g.centroid=_.getGeometricCentroid(this.spatialReference,l)),g.displayId=this._attributeStore.createDisplayIdForObjectId(`${g.objectId}.${c}`),i.set(_.id,g)}o.push(g)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const d=S.fromOptimizedFeatures(o,this._metadata,l),h=d.getCursor(),f=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;h.next();)this._attributeStore.setAttributeData(h.getDisplayId(),h,f,this._sqlOptions);yield new Se(e.subscription,d,[],e.done,{})}},or=class{constructor(e,t){this.inner=e,this.displayId=t}};const Xe=128;let lr=class extends he{constructor(e){super(e),this.didSend=!1,this.done=!1}},cr=class{constructor(e,t,s,r,a){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=a,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null);yield new R(t,e.inner.getAttributes(),null,e.inner.id,e.displayId)}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const n of e){const o=n.queryInfo;"tileId"in o&&new xe(o.tileId).level!==this._level||this._handledChunks.has(n.normalizedChunkId)||(this._handledChunks.add(n.normalizedChunkId),s=!0,n.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},a=We(this._indexOptions.spatialReference,this._scale),i=this._indexOptions.cellSize;for(const{subscription:n}of t){const o=n.tile.bounds,l=Math.floor(o[0]*a/i),c=Math.floor(o[1]*a/i),d=Math.ceil(o[2]*a/i),h=Math.ceil(o[3]*a/i);r.xMin=Math.min(r.xMin,l),r.yMin=Math.min(r.yMin,c),r.xMax=Math.max(r.xMax,d),r.yMax=Math.max(r.yMax,h)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map(([r,a])=>({fieldName:r,minValue:a.minValue,maxValue:a.maxValue}));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],a=s.tile.transform;for(const i of this._clusters.values()){let n=i.inner.getCentroidX(a);const o=i.inner.getCentroidY(a),l=s.tile.lod,c=l.wrap?l.worldSize[0]:null,d=i.inner.count===1?i.inner.firstObjectId:i.inner.id,h=i.displayId;if(c!=null)if(c===1){const f=new T([],[n,o]),p=new R(f,i.inner.getAttributes(),null,d,h);p.geometry.coords[0]-=v,r.push(p);const _=new T([],[n,o]),g=new R(_,i.inner.getAttributes(),null,d,h);g.geometry.coords[0]+=v,r.push(g)}else n>v+v/2?n-=c*v:n<-256&&(n+=c*v);if(n<v+Xe&&n>=-128&&o<v+Xe&&o>=-128){const f=new T([],[n,o]),p=new R(f,i.inner.getAttributes(),null,d,h);r.push(p)}}return S.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((n,o)=>o.count-n.count);const s=[];for(const n of this._clusters.values())s.push(n.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/We(this._indexOptions.spatialReference,this._scale)),a=1+this._clusterRadius/this._indexOptions.cellSize,i=new Set;for(const n of t){if(i.has(n.id)||n.gridX<e.xMin||n.gridX>e.xMax||n.gridY<e.yMin||n.gridY>e.yMax)continue;const o=this._store.createDisplayIdForObjectId(n.id),l=new or(n.clone(),o);i.add(n.id),this._clusters.set(n.id,l);const c=n.centroidXWorld,d=n.centroidYWorld;for(let h=n.gridY-a;h<=n.gridY+a;h++)for(let f=n.gridX-a;f<=n.gridX+a;f++){if(h===n.gridY&&f===n.gridX)continue;const p=this._cells.get(Cs.createId(f,h));if(!p||i.has(p.id))continue;const _=Math.abs(p.centroidXWorld-c),g=Math.abs(p.centroidYWorld-d);_<r&&g<r&&(l.inner.merge(p),i.add(p.id))}}for(const n of s)this._store.releaseDisplayIdForObjectId(n)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const a=r.value,i=r.field,n=e.get(i.name);if(n){const{minValue:o,maxValue:l}=n,c=Math.min(n.minValue,a),d=Math.max(n.maxValue,a);o===c&&l===d||(n.minValue=c,n.maxValue=d,s=!0);continue}e.set(i.name,{minValue:a,maxValue:a}),s=!0}return s}},ur=class Rt extends Ee{static async create(e,t,s,r,a,i){const n=s.metadata.outSpatialReference,o=new ae({spatialReference:n}),l={type:"grid",fields:await Promise.all(t.fields.map(async c=>De.create(o,c))),spatialReference:n,featureFilter:t.featureFilter?await Ce.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:n,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:a,sqlOptions:i};return new Rt(e,t.clusterRadius,l,t.fields,s,r,i)}constructor(e,t,s,r,a,i,n){super(a,i,s.spatialReference,s.fields,n),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=ne.createFeature({geometryType:"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new J([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new lr(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),a=[],i=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of i.clusters()){const o=r.get(n.inner.id);if(o!=null){const l=s(n.displayId,o,n.inner.id);a.push(l),r.delete(n.inner.id);continue}if(n.inner.count===1){const{firstObjectId:l}=n.inner,c=l?r.get(l):null;if(c!=null){const d=s(n.displayId,c,l);a.push(d),r.delete(l)}}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],a=[],i=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of i.aggregatesWorldSpace())if(t.has(n.displayId)&&!s.has(n.displayId)){const o=gt(n,this._metadata.geometryType,!1,!1);if(s.add(n.displayId),o.attributes.cluster_count===1){r.push({...o,displayId:n.displayId});continue}a.push({...o,displayId:n.displayId})}return{features:r,aggregates:a,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(i=>i.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const i of s)i.subscription.tile.level===this._requiredLevel&&(i.didSend=!1,i.done=!1);const r=Array.from(this._sendStates.values()).filter(i=>i.done).map(i=>i.subscription.tile.key),a=new Set(r);for(const i of this._sendStates.values())this._source.updateTracking.updating&&(r.some(n=>n.containsChild(i.subscription.tile.key))||i.subscription.tile.key.getChildKeys().every(n=>a.has(n)))||i.didSend||i.subscription.tile.level!==this._requiredLevel||(i.didSend=!0,yield*this._update(i,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new cr(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const a=r.getCursor(),i=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;a.next();)this._attributeStore.setAttributeData(a.getDisplayId(),a,i,this._sqlOptions);yield new G(e.subscription,r,!0,e.done,{})}},dr=class extends he{},hr=class extends At{constructor(e,t,s,r){super(e,t,r),this._arcadeContextInfo=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(e){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=e,this._evalOptions!=null&&(this._evalOptions=ct(this._evalOptions.$view.scale,e))}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(e){return new dr(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(i=>[t(i),i])),a=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const o=n.getObjectId(),l=n.getDisplayId(),c=r.get(o);if(c!=null){const d=s(l,c,o);a.push(d),r.delete(o)}}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const a of this._source.chunks()){const i=a.reader.getCursor();for(;i.next();){const n=i.getObjectId(),o=i.getDisplayId();t.has(o)&&!s.has(n)&&(r.push({...i.readLegacyFeatureWorldSpace(),displayId:o}),s.add(n))}}return{features:r,aggregates:[],tracks:[]}}async*applyOverrideUpdate(e){const t=[];for(const i of e.modified.values()){const n=this._attributeStore.createDisplayIdForObjectId(i.objectId);i.displayId=n,t.push(n)}const s=S.fromOptimizedFeatures(Array.from(e.modified.values()),this._source.metadata).getCursor();for(;s.next();)this._attributeStore.setAttributeData(s.getDisplayId(),s,this._evalOptions,this._sqlOptions);const r=[];for(const i of e.removed){const n=this._attributeStore.getDisplayIdForObjectId(i);n!=null&&r.push(n)}y("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:r});const a=Ms.fromFeatures(Array.from(e.modified.values()),this._source.metadata);this.handledChunks.add(a.chunkId),this.handledChunksForAttributeData.add(a.chunkId),this.handledChunksForIdCreation.add(a.chunkId);for(const i of this._sendStates.values())i.handledChunks.add(a.chunkId),yield new Se(i.subscription,null,t,!1,a.queryInfo);for(const i of this._sendStates.values()){const n=a.getTileReader(i.subscription.tile);yield new Se(i.subscription,n,r,!1,a.queryInfo)}for(const i of e.removed)this._attributeStore.releaseDisplayIdForObjectId(i)}async*updateChunks(){if(this._source.chunks().length){this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}_updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const a=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(a)}}}for(const e of this._source.chunks())if(this._attributeStore.referencesScale()||!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions,this._sqlOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:a}=r;if(s.has(a)||!this.handledChunksForIdCreation.has(a)||!this.handledChunksForAttributeData.has(a))continue;s.add(a);const i=r.getTileReader(t.tile);i&&(yield new G(e.subscription,i,!1,r.end,r.queryInfo))}}},Y;const pr=()=>re.getLogger("esri.views.2d.layers.features.processor.TrackStrategy"),fr=32;class _r{constructor(e,t,s,r,a){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=a}}class Ye{static getOid(e){return fs+e}constructor(e,t,s,r,a,i,n,o){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=a,this._spatialReference=i,this._metadata=n,this._isStream=o,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new T}get _trackLineAttributes(){var t;const e={...(t=this._latestObservationFeature)==null?void 0:t.attributes,aggregateId:this.objectId,[N]:0};if(this._statistics!=null)for(const s of this._statistics.values())e[s.field.name]=s.value;return e}get _startTimeField(){var e;return(e=this._metadata.timeInfo)==null?void 0:e.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}get latestObservationFeature(){return this._latestObservationFeature}get latestObservationRecord(){return this._latestObservationRecord}stageObservation(e,t){this._nextObservationRecords.push(new _r(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),this._startTimeField!=null?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t,s){var c,d;const r=new Set(this._nextObservationRecords.map(h=>h.objectId)),a=this._observationRecords.filter(h=>!r.has(h.objectId)).map(h=>h.objectId);let i,n;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||this._startTimeField==null||this._nextObservationRecords.sort((h,f)=>{const p=h.time,_=f.time;return p!=null&&_!=null?p-_:0}),this._schema.timeField){case"startTimeField":i=(c=this._metadata.timeInfo)==null?void 0:c.startTimeField;break;case"endTimeField":i=(d=this._metadata.timeInfo)==null?void 0:d.endTimeField;break;case"timeReceived":i=this._isStream?Me:null}n=this._isStream?(s==null?void 0:s.end)??Date.now():(s==null?void 0:s.end)??-1/0;const o=t.map(h=>h.reader.getCursor());let l;for(let h=this._nextObservationRecords.length-1;h>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);h--){const f=this._nextObservationRecords[h],p=o[f.chunkIndex];K(p),p.setIndex(f.featureIndex);const _=i!=null?p.readAttributeAsTimestamp(i):null;(_!=null?n-_:0)>=this._maxDisplayDuration||(this._commitObservation(f,p),l??(l=f))}if(l!=null){const{chunkIndex:h,featureIndex:f}=l,p=`${l.objectId}.latest`,_=e.createDisplayIdForObjectId(p),g=o[h];K(g),g.setIndex(f);const m=new R(g.readGeometryWorldSpace(),{...g.readAttributes(),[N]:1},null,p,_);this._latestObservationFeature&&a.push(this._latestObservationFeature.objectId),this._latestObservationFeature=m,this._latestObservationRecord=l}else this._latestObservationFeature=null;return this._trackLineGeometry=yr(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=br(this._trackLineGeometry),this._nextObservationRecords=[],a}updateStatistics(e,t){this._statistics=qs.create(this._fields);const s=e.map(r=>r.reader.getCursor());for(const{chunkIndex:r,featureIndex:a}of this._observationRecords){const i=s[r];K(i),i.setIndex(a),this._statistics.insert(i,t)}}overlapsTile(e){for(const t of this._bounds)if(Gt(t,e.bounds,fr))return!0;return!1}getLatestObservationFeatureForTile(e){if(this._latestObservationFeature==null)return null;const{objectId:t,displayId:s,geometry:r,attributes:a}=this._latestObservationFeature,i=new T;Ge(i,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const n=Le(1/0,1/0,-1/0,-1/0);return mr(i,(o,l)=>ut(n,[o,l])),Wt(n,Le(0,0,v,v))?new R(i,a,null,t,s):null}getTrackLineFeatureForTile(e){const t=new T;return Ge(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new R(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new R(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:Is(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s==null?void 0:s.coords[0],a=s==null?void 0:s.coords[1];s==null&&(r=t.readXWorldSpace(),a=t.readYWorldSpace()),r!=null&&a!=null&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,a]))}}class gr extends he{constructor(e){super(e),this.done=!1}}class Pe extends Ee{static async create(e,t,s,r,a){const i=t.metadata.outSpatialReference,n=new ae({spatialReference:i}),o=await Promise.all(e.fields.map(async c=>De.create(n,c))),l=e.featureFilter?await Ce.create({geometryType:t.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:t.metadata.timeInfo,fieldsIndex:t.metadata.fieldsIndex,spatialReference:i,filterJSON:e.featureFilter}):null;return i.isWrappable||$s()||await Promise.all([je(()=>import("./apiConverter-MKUu7Tih.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),je(()=>import("./jsonConverter-BKt79zJV.js"),__vite__mapDeps([9,1,3,2,4,5,6,7,8])),Rs()]).then(([c,d,h])=>{Y={fromGeometryToGXGeometry:d.fromGeometryToGXGeometry,toGeometry:d.toGeometry,fromSpatialReference:c.fromSpatialReference}}),new Pe(e,t,s,i,o,l,r,a)}constructor(e,t,s,r,a,i,n,o){super(t,s,r,a,o),this._schema=e,this._featureFilter=i,this._arcadeContextInfo=n,this._tracks=new Map,this._handledChunks=new Set,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:N,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=ne.createFeature({geometryType:"esriGeometryPolyline",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:N,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}destroy(){super.destroy();for(const e of this._tracks.values())this._removeTrack(e);this._tracks.clear()}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}requiresInvalidation(){return!0}invalidate(){this._handledChunks.clear(),super.invalidate()}createState(e){return new gr(e)}async*applyOverrideUpdate(e){pr().error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map(i=>[t(i),i])),a=[];for(const i of this._tracks.values()){const n=r.get(i.objectId);if(n!=null){const l=s(i.displayId,n,i.objectId);a.push(l),r.delete(i.objectId);continue}const o=i.latestObservationFeature;if(o!=null&&o.objectId){const l=r.get(o.objectId);if(l!=null){const c=s(o.displayId,l,o.objectId);a.push(c),r.delete(o.objectId);continue}}for(const l of i.observations()){const c=r.get(l.objectId);if(c!=null){const d=s(l.displayId,c,l.objectId);a.push(d),r.delete(l.objectId)}}}return a}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],a=this._source.chunks().map(i=>i.reader.getCursor());for(const i of this._tracks.values()){if(t.has(i.displayId)&&r.push(i.getTrackLineDisplayFeature()),i.latestObservationFeature!=null&&t.has(i.latestObservationFeature.displayId)){const{displayId:n,chunkIndex:o,featureIndex:l}=i.latestObservationRecord,c=a[o];c.setIndex(l),s.push({displayId:n,...c.readLegacyFeatureWorldSpace()})}for(const{displayId:n,chunkIndex:o,featureIndex:l}of i.observations())if(t.has(n)){const c=a[o];c.setIndex(l),s.push({displayId:n,...c.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),s=>s.objectId);return[]}async*updateChunks(){this._handledChunks.size===0&&this._rebuildTracks();for(const e of this._sendStates.values())yield*this._update(e)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_rebuildTracks(){var r,a;const e=this._source.chunks();if(!e.length)return;const t=(r=this._metadata.timeInfo)==null?void 0:r.trackIdField;if(t==null)return;const s=new Set;for(let i=0;i<e.length;i++){const n=e[i];this._handledChunks.add(n.chunkId);const o=n.reader.getCursor();for(;o.next();){const l=o.readAttribute(t),c=o.getObjectId();if(l!=null&&c!=null&&(this._featureFilter===null||this._featureFilter.check(o,this._sqlOptions))){if(o.getDisplayId()||o.setDisplayId(this._attributeStore.createDisplayIdForObjectId(c)),!this._tracks.has(l)){const d=Ye.getOid(l),h=this._attributeStore.createDisplayIdForObjectId(d),f=new Ye(this._schema,l,d,h,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(l,f)}this._tracks.get(l).stageObservation(i,o),s.add(l)}}}for(const i of this._tracks.values())if(s.has(i.trackId)){const n=i.commitObservations(this._attributeStore,e,(a=this._featureFilter)==null?void 0:a.timeExtent);for(const o of n)this._attributeStore.releaseDisplayIdForObjectId(o);i.updateStatistics(e,ct(1,this._arcadeContextInfo))}else this._removeTrack(i)}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId);for(const{objectId:t}of e.observations())this._attributeStore.releaseDisplayIdForObjectId(t);e.latestObservationFeature!=null&&this._attributeStore.releaseDisplayIdForObjectId(e.latestObservationFeature.objectId)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const c of this._tracks.values())if(c.length>0){if(this._schema.showLatestObservation){const d=c.getLatestObservationFeatureForTile(e);d!=null&&t.push(d)}this._schema.showTrackLine&&c.overlapsTile(e.subscription.tile)&&s.push(c.getTrackLineFeatureForTile(e))}const r=S.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),a=S.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let i=[];if(this._schema.showPreviousObservations){const c=this._source.chunks().map(()=>[]);for(const d of this._tracks.values())for(const{chunkIndex:h,featureIndex:f}of d.previousObservations())c[h].push(f);i=this._source.chunks().map((d,h)=>{const f=d.getTileReader(e.subscription.tile);if(f==null)return null;const p=bt.from(f,c[h]);return p.setProcessorAttributes({[N]:2}),p.geometryType!=="esriGeometryPoint"&&p.getInTransform()!=null||p.setTransformForDisplay(e.subscription.tile.transform),p}).filter(Nt)}this.events.emit("changed");const n=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),o=a.getCursor();for(;o.next();)this._attributeStore.setAttributeData(o.getDisplayId(),o,n,this._sqlOptions);for(const c of i){const d=c.getCursor();for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,n,this._sqlOptions)}const l=r.getCursor();for(;l.next();)this._attributeStore.setAttributeData(l.getDisplayId(),l,n,this._sqlOptions);yield new G(e.subscription,a,!1,!1,{});for(const c of i)yield new G(e.subscription,c,!1,!1,{});yield new G(e.subscription,r,!1,e.done,{})}}function yr(u,e,t){if(e.length<2)return V(u,[e],!1,!1);if(t.isWrappable){let a=!1;for(let i=1;i<e.length;i++){const n=e[i][0],o=Bt(n,e[i-1][0],t);n!==o&&(e[i][0]=o,a=!0)}if(a){const i=Es({paths:[e],spatialReference:t});if(i!=null)return V(u,i.paths,!1,!1)}return V(u,[e],!1,!1)}const s=Y.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[e]}),r=Y.fromSpatialReference(t);if(r!=null){const a=Ts(s,1e6,r,Ds.geodesic);if(a!=null){const i=Y.toGeometry(a,r);if(i!=null&&"paths"in i)return V(u,i.paths,!1,!1)}}return V(u,[e],!1,!1)}function mr(u,e){const{coords:s,lengths:r}=u;if(!r.length)return void e(s[0],s[1]);let a=0;for(let i=0;i<r.length;i++){const n=r[i];let o=0,l=0;for(let c=0;c<n;c++)o+=s[2*(c+a)],l+=s[2*(c+a)+1],e(o,l);a+=n}}function br(u){const{lengths:e,coords:t}=u,s=2;if(!e.length)return[Ue()];const r=[];let a=0;for(let i=0;i<e.length;i++){const n=e[i],o=Ue();r.push(o);for(let l=0;l<n;l++){const c=t[s*(l+a)],d=t[s*(l+a)+1];ut(o,[c,d])}a+=n}return r}class Ir{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new ys,this._proxy=new hs({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new ps({isLocal:!1,update:s=>ke(this._connection.container.updateAttributeView(s))})}destroy(){var e;this._proxy.destroy(),(e=this._strategy)==null||e.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){var e;return(e=this._strategy)==null?void 0:e.aggregateQueryEngine}get usedMemory(){let e=0;return e+=this._attributeStore.usedMemory,this._strategy&&(e+=this._strategy.usedMemory),e}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,s=>s,(s,r,a)=>{t[a]=s}),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){var t;(t=this._strategy)==null||t.onSubscribe(e)}onUnsubscribe(e){var t;(t=this._strategy)==null||t.onUnsubscribe(e)}requiresInvalidation(){var e;return((e=this._strategy)==null?void 0:e.requiresInvalidation())??!1}async update(e,t,s,r,a){var I,w,F,b,O,M,j;const i=e.processor,n=D((I=this._schema)==null?void 0:I.storage,i.storage),o=D((w=this._schema)==null?void 0:w.mesh.properties,i.mesh.properties),l=D((F=this._schema)==null?void 0:F.mesh.factory,i.mesh.factory),c=D((b=this._schema)==null?void 0:b.mesh.strategy,i.mesh.strategy),d=vr((O=this._schema)==null?void 0:O.expressionProperties,i.expressionProperties),h=d.some(W=>this._attributeStore.hasArcadeDependency(W)),f=d.some(W=>{var B;return((B=this._factory)==null?void 0:B.hasArcadeDependency(W))??!1}),p=d.some(W=>{var B;return(B=this._strategy)==null?void 0:B.hasArcadeDependency(W)})||((M=this._strategy)==null?void 0:M.isAggregate)&&h,_=f||p,g=o||l||c;if(!(n||g||f||h||p)&&!r)return!1;y("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:Vt(this._schema,i),schema:i}),this._schema=i;const m=new ae({fields:this._source.metadata.fieldsIndex,spatialReference:this._source.metadata.outSpatialReference}),k={currentUser:i.mesh.properties.currentUser};if((n||g||h)&&(await this._attributeStore.update(i.storage,m,this._source.metadata,t),(j=this._strategy)==null||j.invalidateAttributeData(Q(i))),!r&&!g&&!_)return!1;(c||o||_)&&await this._updateStrategy(i.mesh.strategy,a,Q(i),k),this._updateSortKey(m,"sortKey"in i.mesh.properties?i.mesh.properties.sortKey:null);const x=i.mesh.factory.symbology.type==="dictionary"?i.mesh.factory.symbology.fieldMap:null,$=new rr(m,this._proxy,s,this._registry,x);return(l||i.mesh.factory.symbology.type==="dictionary")&&(this._factory=await sr.create($,i.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){var e;await this._doUpdateChunks(),(e=this._strategy)==null||e.afterUpdateChunks()}async removeChunks(e){var t;(t=this._strategy)==null||t.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy||!this._strategy.hasSubscribers)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},a)=>({objectId:a,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let a=s.get(r.id);a==null&&(a=new ir({concurrency:16,process:n=>this._process(n)}),s.set(r.id,a));const i=a.push(r).catch(n=>Fe(n));t.push(i)}try{await Promise.all(t)}catch{}y("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){var a;switch((a=this._strategy)==null||a.destroy(),e.type){case"feature":this._strategy=new hr(this._source,this._attributeStore,s,r);break;case"binning":this._strategy=await nr.create(e,this._source,this._attributeStore,s,r);break;case"cluster":this._strategy=await ur.create(this._connection,e,this._source,this._attributeStore,s,r);break;case"track":this._strategy=await Pe.create(e,this._source,this._attributeStore,s,r)}for(const i of t)this._strategy.onSubscribe(i)}async _updateSortKey(e,t){var s;if(this._sortInfo=Oe((s=this._sortInfo)==null?void 0:s.computed),t!=null){const r=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:r}}}async _process(e){var l,c,d;const t=e.subscription;if(y("esri-2d-update-debug")){const h=t.tile;console.debug(`Version[${this._version}] Tile[${h.key.id}, end=${e.end}] Processor._process`)}const s={currentUser:(l=this._schema)==null?void 0:l.mesh.properties.currentUser};await this._fetchResources(e,s),C(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(Q(this._schema)),s),a=t.tile.tileInfoView.getLODInfoAt(t.tile.key);C(t.signal);const{message:i,transferList:n}=r.serialize(a),o={objectIdMap:null,inner:e.createMessage(i,this._version,this._attributeStore.epoch)};if((c=this._schema)!=null&&c.mesh.properties.returnMeshObjectId){o.objectIdMap={};const h=(d=e.reader)==null?void 0:d.getCursor();if(h)for(;h.next();)o.objectIdMap[h.getDisplayId()]=h.getObjectId()}if(C(t.signal),await this._connection.container.onMessage(o,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")){const h=t.tile;console.debug(`Version[${this._version}] Tile[${h.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(Q(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){var h;const r=e.subscription.tile,a=(h=e.reader)==null?void 0:h.getCursor(),i=(a==null?void 0:a.getSize())??0,n=r.tileInfoView.tileInfo.isWrappable,o=r.tileInfoView.tileInfo.spatialReference.isWGS84,l=new Qs(r.key,this._strategy.enablePixelBuffering,n,o,i);if(!a)return l;const c=r.createArcadeEvaluationOptions(Q(this._schema));let d=0;for(;a.next();){++d%1e3||(await Qt(0),C(e.subscription));const f=this._getSortKeyValue(a,t);l.entityStart(a.getDisplayId(),f),this._factory.write(l,this._proxy,a,c,s,r.level),l.entityEnd()}return l}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:a}=this._sortInfo,i=a?this._factory.getSortKey(e,t):s==null?void 0:s.read(e,t);return i==null||isNaN(i)?0:i*(r==="asc"?-1:1)}}function vr(u,e){var s,r,a,i;const t=[];return((s=u==null?void 0:u.timeExtent)==null?void 0:s.start)===((r=e.timeExtent)==null?void 0:r.start)&&((a=u==null?void 0:u.timeExtent)==null?void 0:a.end)===((i=e.timeExtent)==null?void 0:i.end)||t.push("timeProperties"),t}function Q(u){const{timeZone:e}=(u==null?void 0:u.mesh.properties)??{},{timeExtent:t}=(u==null?void 0:u.expressionProperties)??{};return{timeZone:e,timeExtent:t}}let wr=class Tt{static from(e){let t=0,s=0,r=0;return e.forEach(a=>{const i=a._readGeometry();i&&(s+=i.isPoint?1:i.lengths.reduce((n,o)=>n+o,0),r+=i.isPoint?1:i.lengths.length,t+=1)}),new Tt(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const Sr=2500;let ee=class extends dt{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([Ie(()=>{var t;return((t=this._strategy)==null?void 0:t.connectionStatus)??"disconnected"},t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})},{initial:!0}),Ie(()=>{var t;return((t=this._strategy)==null?void 0:t.errorString)||null},t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&(this.addHandles([e.events.on("data-received",s=>this._onFeature(s)),e.events.on("message-received",s=>this._onWebSocketMessage(s)),e.events.on("features-updated",s=>this._onUpdate(s)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(s=>s(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){e!=null&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){var e;(e=this._strategy)==null||e.disconnect()}connect(){var e;(e=this._strategy)==null||e.connect()}clear(){var e;(e=this._strategy)==null||e.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>Sr){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){this._strategy!=null?e(this._strategy):this._queuedCommands.push(e)}};z([X()],ee.prototype,"_strategy",void 0),ee=z([ht("esri.views.2d.layers.features.sources.StreamMessenger")],ee);let kr=class{constructor(){this._requiresInvalidation=!1}get requiresInvalidation(){return this._requiresInvalidation}requireInvalidation(){this._requiresInvalidation=!0}};class pe{constructor(e,t,s){this._context=s,this._controller=new AbortController,this.metadata=ne.createFeature(e),this._schema=t}destroy(){this._controller.abort(),this.store.destroy()}get store(){return this._context.store}get _connection(){return this._context.connection}get _options(){return{signal:this._controller.signal}}get _signal(){return this._controller.signal}async applyOverride(e){this._onOverride(),await this.store.applyOverride(e)}takeOverrideUpdate(){return this.store.takeOverrideUpdate()}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}prepareCacheUpdate(e,t){}applyCacheUpdate(){return null}}async function xr(u,e,t,s={}){const r=(await Promise.allSettled(t.map(a=>Fr(u,e,a,s)))).filter(a=>a.status==="rejected").map(a=>a.reason);if(r.length)throw new A("featurelayer-query","Encountered errors when downloading data",{errors:r})}async function Fr(u,e,t,s={}){const r=`${u.chunkPrefix??""}${t.num}`,a=await u.fetch(t.query,s,{chunkId:r}),i=new H(a,t.query.inner.toJSON(),t.num,!1);i.chunkId=i.normalizedChunkId=r,C(s),e.insert(i)}const ye=8e3;let Or=class{constructor(e,t,s,r){this.store=e,this.queryInfo=t,this._options=s,this._fetch=r,this._nextBatch=new Set,this._fetchFeatures=Ht(async()=>{var c;if(this._nextBatch.size===0||(c=this._options.signal)!=null&&c.aborted)return;const a=Array.from(this._nextBatch);this._nextBatch.clear(),a.length>ye&&re.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new A("highlight-too-many-features",`highlight is limited to ${ye} features on large layers configured with a display filter to avoid performance issues`));const i=this.queryInfo.objectIdsQueryPageSize,n=Math.ceil(ye/i),o=Math.min(n,Math.ceil(a.length/i)),l=Array.from({length:o},(d,h)=>{const f=h*i,p=Math.min(f+i,a.length);return{num:h,query:this.queryInfo.createObjectIdsQuery(a.slice(f,p))}});try{await xr({chunkPrefix:"cache."+Jt(),fetch:this._fetch},this.store,l,this._options)}catch{}})}prepareCacheUpdate(e,t){if(t)for(const s of t)this._nextBatch.delete(s);for(const s of e)this._nextBatch.add(s)}applyCacheUpdate(){var e;return this._nextBatch.size===0||(e=this._options.signal)!=null&&e.aborted?null:this._fetchFeatures().catch(()=>{})}};const Dt=32,me=268435455;let Cr=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.idFieldIndices=[],this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}get usedMemory(){let e=0;return e+=L(this.idFieldIndices),e+=L(this.offsets.attributes),e+=L(this.offsets.geometry),e+=L(this.centroid),this.displayIds&&(e+=L(this.displayIds)),this.groupIds&&(e+=L(this.groupIds)),e}};function Mr(u,e,t,s=!1){const o=u.asUnsafe(),l=o.pos(),c=new Cr;let d=0,h=0;const f=1,p=2,_=4,g=3;let m=null,k=!1;const x=[];for(;o.next();)switch(o.tag()){case 12:m=o.processMessage(Gs);break;case 9:if(c.exceededTransferLimit=o.getBool(),c.exceededTransferLimit){c.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),c.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let I=0;I<c.centroid.length;I++)c.centroid[I]=me}break;case 13:{const I=o.processMessage(Ns);I.index=d++,x.push(I);break}case 15:{const I=o.getLength(),w=o.pos()+I;if(!c.exceededTransferLimit){const b=c.offsets.geometry,O=c.centroid;b.push(0),O.push(me),O.push(me)}!k&&c.exceededTransferLimit&&(k=!0,c.offsets.attributes=s?new Float64Array(8e3*d):new Uint32Array(8e3*d));let F=h*d;for(;o.pos()<w&&o.next();)switch(o.tag()){case f:{k?c.offsets.attributes[F++]=o.pos():c.offsets.attributes.push(o.pos());const b=o.getLength();o.skipLen(b);break}case p:if(e){const b=o.getLength(),O=o.pos()+b;for(;o.pos()<O&&o.next();)switch(o.tag()){case g:{o.getUInt32();const M=o.getSInt64(),j=o.getSInt64();c.centroid[2*h]=M,c.centroid[2*h+1]=j;break}default:o.skip()}}else{c.offsets.geometry[h]=o.pos();const b=o.getLength();c.vertexCount+=b,o.skipLen(b)}break;case _:{const b=o.getLength(),O=o.pos()+b;for(;o.pos()<O&&o.next();)switch(o.tag()){case g:{o.getUInt32();const M=o.getSInt64(),j=o.getSInt64();c.centroid[2*h]=M,c.centroid[2*h+1]=j;break}default:o.skip()}break}default:o.skip()}h++,c.hasFeatures=!0;break}default:o.skip()}c.fields=new J(x),c.featureCount=h,c.fieldCount=d;const $=Ps(t);return c.idFieldIndices=Array.from($,I=>{var w;return(w=c.fields.get(I))==null?void 0:w.index}),c.transform=m,c.displayIds=new Uint32Array(c.featureCount),c.groupIds=new Uint16Array(c.featureCount),o.move(l),c}const et=268435455,tt=128,st=128e3,q={small:{delta:new Int32Array(tt),decoded:new Int32Array(tt)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(st),decoded:new Int32Array(st)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function rt(u,e){return e?u<=q.small64.delta.length?q.small64:(u<=q.large64.delta.length||(q.large64.delta=new Float64Array(Math.round(1.25*u)),q.large64.decoded=new Float64Array(Math.round(1.25*u))),q.large64):u<=q.small.delta.length?q.small:(u<=q.large.delta.length||(q.large.delta=new Int32Array(Math.round(1.25*u)),q.large.decoded=new Int32Array(Math.round(1.25*u))),q.large)}function qr(u){try{const t=new zs(new Uint8Array(u),new DataView(u));for(;t.next();){if(t.tag()===2)return Ar(t.getMessage());t.skip()}}catch(e){const t=new A("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});re.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Ar(u){for(;u.next();){if(u.tag()===1)return u.getMessage();u.skip()}return null}function $r(u){const c=u.getLength(),d=u.pos()+c;for(;u.pos()<d&&u.next();)switch(u.tag()){case 1:return u.getString();case 2:return u.getFloat();case 3:return u.getDouble();case 4:return u.getSInt32();case 5:return u.getUInt32();case 6:return u.getInt64();case 7:return u.getUInt64();case 8:return u.getSInt64();case 9:return u.getBool();default:return u.skip(),null}return null}function Rr(u,e,t,s,r){return u?e*r-s*t===0&&e*s+t*r>0:!1}class se extends Fs{static fromBuffer(e,t,s=!1){const r=t.geometryType,a=qr(e),i=Mr(a,r==="esriGeometryPoint",t.featureIdInfo,s);return new se(a,i,t,s)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){if(this._header.idFieldIndices.length===1)return this._readAttributeAtIndex(this._header.idFieldIndices[0]);const e=this._header.idFieldIndices.map(t=>this._readAttributeAtIndex(t));return JSON.stringify(e)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new se(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){var e;return Us+(((e=this._cache.geometry)==null?void 0:e.usedMemory)??0)}get underlyingMemory(){return super.underlyingMemory+this._reader.usedMemory+this._header.usedMemory}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===et?null:new T([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===et)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new T([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return(t==null?void 0:t.coords.length)===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),a=this._header.fields.isDateField(s.name);return t?r==null?r:a?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new Os(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const a=$r(r);return t.set(this._featureIndex,a),a}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=rt(t.coords.length,this._use64Bit).decoded,r=t.clone(s),a=r.coords;let i=0;for(const n of r.lengths){for(let o=1;o<n;o++){const l=2*(i+o),c=2*(i+o-1);a[l]+=a[c],a[l+1]+=a[c+1]}i+=n}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),a=r.getLength(),i=r.pos()+a,n=[],o=[];for(;r.pos()<i&&r.next();)switch(r.tag()){case 2:{const l=r.getUInt32(),c=r.pos()+l;for(;r.pos()<c;)o.push(r.getUInt32());break}case 3:{const l=r.getUInt32(),c=r.pos()+l;for(n.push(r.getSInt64()),n.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<c;)n.push(r.getSInt64()),n.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new T(o,n)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),a=r.getLength(),i=r.pos()+a,n=[],o=[];let l=0,c=0,d=null,h=0;const f=this.geometryType==="esriGeometryPolygon",p=this.geometryType==="esriGeometryPolyline",_=f?3:p?2:1,g=f||p;for(;r.pos()<i&&r.next();)switch(r.tag()){case 2:{const m=r.getUInt32(),k=r.pos()+m;for(;r.pos()<k;){const x=r.getUInt32();n.push(x),l+=x}d=rt(2*l,this._use64Bit).delta;break}case 3:{r.getUInt32();const m=2+(this.hasZ?1:0)+(this.hasM?1:0);K(d);for(const k of n){if(c+m*k>d.length){for(let w=0;w<k;w++)r.getSInt64(),r.getSInt64(),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();continue}let x=0,$=r.getSInt64(),I=r.getSInt64();this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64(),d[c++]=$,d[c++]=I,x+=1;for(let w=1;w<k;w++){const F=r.getSInt64(),b=r.getSInt64(),O=$+F,M=I+b;h+=-.5*(O-$)*(M+I),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64(),F===0&&b===0||Rr(g,d[c-2],d[c-1],F,b)?(d[c-2]+=F,d[c-1]+=b):(d[c++]=F,d[c++]=b,x+=1),$=O,I=M}x>=_?o.push(x):c-=x*m}break}default:r.skip()}return this._cache.area=h,o.length?new T(o,d):d!=null?this._createDeltaQuantizedExtrudedGeometry(d[0],d[1]):null}}let fe=class{constructor(e,t){this.service=e,this._metadata=t}destroy(){}};function Tr(u,e,t){switch(u.type){case"memory":return new Er(u,e,t);case"ogc":return new Lr(u,e);case"feature-service":return u.queryMetadata.supportsFormatPBF&&y("featurelayer-pbf")?new Pr(u,e):new jr(u,e)}}async function Dr(u){const e=new Zt;return await e.open(u,{}),e}class Er extends fe{constructor(e,t,s){super(e,t),this._ports=[],this._loaded=this._load(s)}destroy(){this._loaded.finally(()=>{this._client.close(),this._client=null;for(const e of this._ports)e.close()}).catch(()=>{})}async _load(e){this._ports=await e.layerView.openMemoryPorts(),this._client=await Dr(this._ports)}async executeQuery(e,t){await this._loaded;const s=await this._client.invoke("queryFeatures",e.toJSON(),t);return S.fromFeatureSet(s,this._metadata)}}let Pr=class extends fe{async executeQuery(e,t){const{data:s}=await Ls(this.service.source,e,t),r=!e.quantizationParameters;return se.fromBuffer(s,this._metadata,r)}};class jr extends fe{async executeQuery(e,t){var i;const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const n=e.clone(),o=It(n.quantizationParameters);n.quantizationParameters=null;const{data:l}=await Ve(s,n,this._metadata.spatialReference,t),c=vs(l,this._metadata.featureIdInfo);return yt(o,c),S.fromOptimizedFeatureSet(c,this._metadata)}const{data:a}=await Ve(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(a.features=(i=a.features)==null?void 0:i.filter(n=>{if(n.geometry!=null){const o=n.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),S.fromFeatureSet(a,this._metadata)}}class Lr extends fe{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=e.clone(),a=It(r.quantizationParameters);r.quantizationParameters=null;const i=await Be(this.service.source,e,t);return yt(a,i),S.fromOptimizedFeatureSet(i,this._metadata)}const s=await Be(this.service.source,e,t);return S.fromOptimizedFeatureSet(s,this._metadata)}}let Et=class extends pe{constructor(e,t,s){super(e.metadata,t,s),this._service=e,this._didApplyOverride=!1,this._queue=new qe({concurrency:Dt,process:async r=>{var i;const a={signal:(i=r.options)==null?void 0:i.signal,query:r.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(r.query.inner,a)}}),this._queryInfo=js.create(e,{...t.full,...t.partial},this.metadata),this._adapter=Tr(e,this.metadata,s.connection),this._lastEditDate=e.queryMetadata.lastEditDate}destroy(){super.destroy(),this._adapter.destroy()}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async tryUpdate(e,t){if(D(this.availableFields,t.availableFields)){if(this._didApplyOverride||await this._queryLastEditDateChanged())return!1;await this._updateFields(t.availableFields)}return this._schema.partial=t,!0}async queryByObjectId(e){if(e.length===0)return S.empty(this.metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t,null,null)}get availableFields(){return this._schema.partial.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}_onOverride(){this._didApplyOverride=!0}async _updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this.store.chunks()).map(async r=>{const a=Kt.fromJSON(r.queryInfo.queryJSON);if(a)try{return await this._tryUpdateFields(r.reader,a,{chunkId:r.chunkId}),null}catch(i){return i}}),s=(await Promise.all(t)).filter(r=>r);if(s.length)throw new A("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async _fetch(e,t,s){const r=await this._enqueue(e,t);return await this._tryUpdateFields(r,e.inner,s),r}async _queryLastEditDateChanged(){if(this._lastEditDate==null||!("source"in this._service))return!1;const e=this._service.source,t={...e.query,f:"json"},s=(await Xt(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _tryUpdateFields(e,t,s){const r=this._queryInfo.createPatchFieldsQuery(t,e,s);if(!r)return;const a=await this._enqueue(r,this._options);a.getSize()===e.getSize()?e.joinAttributes(a):re.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new A("featurelayer-query",`Failed to join features. Expected a count of ${e.getSize()} features, but got ${a.getSize()}`,{query:r.inner.toJSON(),debugInfo:s}))}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},Pt=class extends Et{constructor(e,t,s){super(e,t,s),this._chunksById=new Map,this._featureCache=new Or(this.store,this._queryInfo,this._options,this._fetch.bind(this))}prepareCacheUpdate(e,t){return this._featureCache.prepareCacheUpdate(e,t)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this.store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)y("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this.store.remove(s);this._chunksById.delete(e.key.id)}},it=class extends oe{constructor(e,t,s,r,a,i){var n,o;super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=a,this._end=i,this.chunkId=`${this._tile.key.id}.${(n=this._sourceTile)==null?void 0:n.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${(o=this._sourceTile)==null?void 0:o.key.normalizedId}${this._end?"e":""}`}get queryInfo(){var e;return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:(e=this._sourceTile)==null?void 0:e.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}};const Ur=y("featurelayer-query-max-depth");let zr=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=ie([te(e.signal,()=>this._controller.abort()),te(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}};class Nr extends Pt{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new zr(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const a of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:i,reader:n,sourceTile:o,sourceTileDepth:l,tile:c}=a,d=new it(n,i,c,o,l,!1);C(t.options),this._addChunk(d)}}catch(a){s=a}C(t.options);const r=new it(S.empty(this.metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const a=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<y("featurelayer-query-max-depth"))for(const i of t.createChildTiles())yield*this._fetchChunkInfos(e,i,s+1);else a||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),a=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:s===Ur,quantizationParameters:r});return{reader:await this._fetch(a,e.options,{chunkId:t.id}),queryJSON:a.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}}let at=class extends oe{constructor(e,t,s,r,a){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=a,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}};class Gr{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=ie([te(e.signal,()=>this._controller.abort()),te(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class Wr extends Pt{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=Yt(this._loadStates,e.key.id,()=>new Gr(e,this._options));for await(const s of this._fetchPages(t))this._addChunk(s)}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async*_fetchPages(e){let t;try{for await(const s of this._concurrentPageStream(e))C(e.options),s.size()!==0&&(yield s)}catch(s){t=s}if(t&&pt(t)||(yield new at(S.empty(this.metadata),null,e.subscription.tile,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=y("featurelayer-query-tile-concurrency"),s=this._pageStreamAll(e),r=[];let a=!1,i=1;for(;!a;){const n=[];for(;!a&&r.length<i;){const o=s.next();if(!o.value){a=!0;break}const l=o.value;l.then(c=>{c.reader.exceededTransferLimit||(a=!0)}).catch(c=>{a=!0}).finally(()=>{r.splice(r.indexOf(l),1)}),r.push(l),n.push(l)}for(const o of n)yield o;r.length&&await Promise.race(r),i<t&&(i+=1)}}*_pageStreamAll(e){const t=Math.ceil(y("featurelayer-query-tile-max-features")/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){C(t.options);const s=t.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,e),a=await this._fetch(r,t.options,{chunkId:`${s.id}-${e}`});return C(t.options),new at(a,r.inner.toJSON(),s,e,!1)}}let Br=class extends Et{constructor(e,t,s){super(e,t,s)}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}async _download(){const e=this._schema.snapshotInfo.initialTolerance,t=e?new es({mode:"view",originPosition:"upper-left",tolerance:e}):null;await this._downloadStreaming(t),t!=null&&await this._downloadRefresh()}async _downloadStreaming(e){try{for await(const t of this._fetchPages(e))this.store.insert(t)}catch(t){throw new A("featurelayer-query","Encountered error when downloading data",{error:t})}}async _downloadRefresh(){try{const e=[];for await(const t of this._fetchPages(null))e.push(t);this.store.clear();for(const t of e)this.store.insert(t);this.store.refresh()}catch(e){throw new A("featurelayer-query","Encountered error when downloading data",{error:e})}}async*_fetchPages(e){let t;try{for await(const s of this._concurrentPageStream(e))s.size()!==0&&(yield s)}catch(s){t=s}if(t&&pt(t)||(yield new H(S.empty(this.metadata),null,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=y("featurelayer-snapshot-concurrency"),s=this._pageStreamAll(e),r=[];let a=!1,i=1;for(;!a;){const n=[];for(;!a&&r.length<i;){const o=s.next();if(!o.value){a=!0;break}const l=o.value;l.then(c=>{c.reader.exceededTransferLimit||(a=!0)}).catch(c=>{a=!0}).finally(()=>{r.splice(r.indexOf(l),1)}),r.push(l),n.push(l)}for(const o of n)yield o;r.length&&await Promise.race(r),i<t&&(i+=1)}}*_pageStreamAll(e){const t=Math.ceil(this._schema.snapshotInfo.maxFeatureCount/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){C(this._options);const s=this._queryInfo.createPagedQuery(e,t),r=await this._fetch(s,this._options,{chunkId:e.toString()}),a=new H(r,s.inner.toJSON(),e,!1);return C(this._options),a}};class Vr extends pe{constructor(e,t,s){super(e.metadata,t,s),this._service=e,this._chunkId=0,this._files=new Map}destroy(){super.destroy();for(const e of this._files.values())e.free();this._files.clear()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}get availableFields(){return this._schema.partial.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}async tryUpdate(e,t){if(D(this.availableFields,t.availableFields)&&await this._updateFields(t.availableFields),D(this._schema.partial.urls,t.urls)){for(const s of t.urls)this._files.has(s)||await this._insert(s);for(const s of this._files.keys())if(!t.urls.includes(s))throw new A("unsupported","Removing parquet files is not supported",{previous:this._schema.partial.urls,next:t.urls})}return this._schema.partial=t,!0}async load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}_onOverride(){}async _updateFields(e){await this._promise;const t=new Set(e),s=ft(t,new Set(this.availableFields)),r=this._fieldsIndex;if(r==null)return;const a=Array.from(s).map(i=>{var n;return(n=r.get(i))==null?void 0:n.column});if(s.size)for(const i of this._files.values())await i.ensureFields(new Uint32Array(a))}async _insert(e){const t=await vt(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.full.customParameters}),s=this._files.size;this._files.set(e,t),C(this._options);const r=t.fields().map(o=>({name:o.name,alias:o.name,type:o.type,column:t.columnForFieldName(o.name)})),{timeZoneByFieldName:a}=this._service.metadata.fieldsIndex,i=J.fromJSON({fields:r,timeZoneByFieldName:a});this._fieldsIndex=i;const n=new Uint32Array(Array.from(this.availableFields.values()).map(o=>{var l;return(l=i.get(o))==null?void 0:l.column}).filter(o=>o!=null));await t.readAllChunks(n,this._signal,o=>{if(this._signal.aborted)return;const l=this._chunkId++,c=new ve(this.metadata,i,o,l,s),d=new H(c,null,l,!1);this.store.insert(d)})}async _download(){try{await Promise.all(this._schema.partial.urls.map(t=>this._insert(t)));const e=new H(S.empty(this.metadata),null,-1,!0);this.store.insert(e)}catch(e){throw console.error(e),e}}}class be extends oe{constructor(e,t,s,r,a){super(),this._metadata=e,this._reader=t,this._tile=s,this._page=r,this._end=a,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get reader(){return this._reader??S.empty(this._metadata)}get first(){return this._page===0}get end(){return this._end}get tile(){return this._tile}get queryInfo(){return{type:"parquet",chunkId:this.chunkId,queryJSON:null,page:this._page,size:this.size(),tileId:this._tile.id,end:this.end}}get isTiled(){return!0}getTileReader(e){if(this._tile.key.id===e.key.id){const t=[];for(let r=0;r<this.reader.getSize();r++)t.push(r);const s=bt.from(this.reader,t);return s.setTransformForDisplay(e.transform),s}return null}}let Qr=class extends pe{constructor(e,t,s){if(super(e.metadata,t,s),this._files=[],!e.geometryInfo.displayOptimization)throw new Error("InternalError: ParquetTileLoadStrategy only supports XZ-enabled parquet files");this._index=Hr.create(t.partial.urls,this.metadata,e,new Set(t.partial.availableFields),this.store,()=>t.full.customParameters)}destroy(){super.destroy();for(const e of this._files)e.free()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}get availableFields(){return this._schema.partial.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}async tryUpdate(e,t){return D(this.availableFields,t.availableFields)&&await this._updateFields(t.availableFields),this._schema.partial=t,!0}async load(e){await(await this._index).ensureLoaded(e)}unload(e){this._index.then(t=>t.unload(e.tile))}_onOverride(){}async _updateFields(e){return(await this._index).updateFields(e)}},Hr=class jt{static async create(e,t,s,r,a,i){const n=await Promise.all(e.map(p=>vt(p,{geometryInfo:s.geometryInfo,outSpatialReference:s.outSpatialReference,getCustomParameters:i})));if(n.length!==1)throw new Error("InternalError: experimental parquet XZ display optimization only supports a single file.");const[o]=n,l=o.fields().map(p=>({name:p.name,alias:p.name,type:p.type,column:o.columnForFieldName(p.name)})),{timeZoneByFieldName:c}=s.metadata.fieldsIndex,d=J.fromJSON({fields:l,timeZoneByFieldName:c}),h=new Uint32Array(Array.from(r.values()).map(p=>{var _;return(_=d.get(p))==null?void 0:_.column}).filter(p=>p!=null)),f=s.geometryInfo.displayOptimization;if(!f)throw new Error("InternalError: tiled parquet load requires display optimization");return new jt(t,await Promise.all(n),d,h,a,r,f)}constructor(e,t,s,r,a,i,n){this._metadata=e,this._files=t,this._fieldsIndex=s,this._fieldIndices=r,this._store=a,this._availableFields=i,this._displayOptimization=n,this.fileIndex=0,this._queue=new qe({concurrency:Dt,process:o=>this._ensureLoaded(o)}),this._tileIdToChunkId=new Map}get file(){return this._files[0]}async ensureLoaded(e){return this._queue.push(e)}unload(e){const t=this._tileIdToChunkId.get(e.id);if(t!=null){for(const s of t)this._store.removeById(s);this._tileIdToChunkId.delete(e.id)}}async _ensureLoaded(e){const t=this._metadata.outSpatialReference,s=e.tile,{xmin:r,ymin:a,xmax:i,ymax:n}=Jr(s.extent,t);let o=0;const l={extent:s.extent,extent_lat_lng:{xmin:r,ymin:a,xmax:i,ymax:n},tile_level:s.level,attributes:this._fieldIndices};if(this._displayOptimization.mode==="z"?await this.file.queryZChunks(l.extent_lat_lng,this._fieldIndices,e.signal,d=>{if(e.signal.aborted)return;const h=new ve(this._metadata,this._fieldsIndex,d,o,this.fileIndex),f=new be(this._metadata,h,s,o++,!1);this._insertChunk(s,f)}):await this.file.queryXZChunks(l,e.signal,d=>{if(e.signal.aborted)return;const h=new ve(this._metadata,this._fieldsIndex,d,o,this.fileIndex),f=new be(this._metadata,h,s,o++,!1);this._insertChunk(s,f)}),e.signal.aborted)return;const c=new be(this._metadata,null,s,o++,!0);this._insertChunk(s,c)}_insertChunk(e,t){let s=this._tileIdToChunkId.get(e.id);s==null&&(s=[],this._tileIdToChunkId.set(e.id,s)),s.push(t.chunkId),this._store.insert(t)}async updateFields(e){const t=new Set(e),s=ft(t,this._availableFields);if(this._availableFields=ts(s,this._availableFields),s.size)for(const r of this._files){const a=Array.from(s).map(i=>{var n;return(n=this._fieldsIndex.get(i))==null?void 0:n.column});await r.ensureFields(new Uint32Array(a))}}};function Jr(u,e){const t=[u.xmin,u.ymin,u.xmax,u.ymax],s=ss.fromExtent(rs(t,e)),r=ks(s,e,lt.WGS84);if(!r)return null;const a=ws(new T,r,!1,!1),i=a.coords.filter((o,l)=>!(l%2)),n=a.coords.filter((o,l)=>l%2);return{xmin:Math.min(...i),ymin:Math.min(...n),xmax:Math.max(...i),ymax:Math.max(...n)}}const nt=1e3;class Zr{constructor(e,t,s,r,a=128){if(this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,t.type==="unique-id-composite")throw new A("stream-layer","composite uniqueIds are not supported");this.idField=t.fieldName,this.purgeInterval=a,this._useGeneratedIds=this.idField===_s}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){var i;if(this._useGeneratedIds){const n=this._nextId();e.attributes[this.idField]=n,e.objectId=n}else e.objectId=e.attributes[this.idField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new Qe(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const n=((i=this._purgeOptions)==null?void 0:i.maxObservations)!=null?this._purgeOptions.maxObservations:nt,o=is(n,0,nt);this._trackIdToObservations.set(s,new Qe(o))}const r=this._trackIdToObservations.get(s),a=r==null?void 0:r.enqueue(t);a!=null&&(this._addOrUpdated.has(a)?this._addOrUpdated.delete(a):this._removed.push(a))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now(),r=s-this._lastPurge,a=Date.now();r>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const i=[];if(t!=null)for(const o of t){const l=this.store.removeById(o);l!=null&&i.push(l)}const n=[];if(e!=null){const o=new Set(t??[]);for(const l of e)o.has(l.objectId)||(l.attributes[Ne]=s,l.attributes[Me]=a,this.store.add(l),n.push(l))}return!(!n.length&&!(i!=null&&i.length))&&(this.store.update(n,i),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const r=s.dequeue();this._removed.push(r),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const r=this._trackIdLessObservations.dequeue();r!=null&&this._removed.push(r)}}}}_purgeByAge(e){var a;const t=(a=this._timeInfo)==null?void 0:a.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(i=>{i.attributes[t]<r&&this._removed.push(i.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(r=>{r.attributes[Ne]<s&&this._removed.push(r.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let U=class extends dt{constructor(u){super(u)}get connectionStatus(){var u;return(u=this.connection)==null?void 0:u.connectionStatus}get errorString(){var u;return(u=this.connection)==null?void 0:u.errorString}};z([X()],U.prototype,"connection",void 0),z([X()],U.prototype,"connectionStatus",null),z([X()],U.prototype,"errorString",null),U=z([ht("esri.views.2d.layers.features.sources.StreamConnectionState")],U);let Kr=class{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return S.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate((e==null?void 0:e.length)??0)}};class Xr extends oe{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}let Yr=class extends pe{constructor(e,t,s){super(e.metadata,t,s),this._service=e,this._connectionState=new U,this._forceRefresh=!1,this.events=new ot;const{timeInfo:r}=this.metadata,{purgeOptions:a}=t.full;this._stagingStore=new Kr(this.metadata.weakCloneWithAdditionalFields([{name:Me,alias:"timeReceived",type:"esriFieldTypeDate"}]),i=>this.events.emit("features-updated",i)),this._manager=new Zr(this._stagingStore,this.metadata.featureIdInfo,r,a),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){var e;return(e=this._connectionState)==null?void 0:e.errorString}get availableFields(){return this._schema.full.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}async tryUpdate(e,t){const s=this._chunk!=null;if(t.sourceRefreshVersion!==this._refreshVersion){if(this._refreshVersion=t.sourceRefreshVersion,!this._manager.checkForUpdates()&&s&&!this._forceRefresh)return this.events.emit("tick"),!0;this._chunk&&(this.store.remove(this._chunk),e.requireInvalidation()),this._forceRefresh=!1,this._chunk=new Xr(this._stagingStore.reader),this.store.insert(this._chunk),this.events.emit("tick")}return this._schema.partial=t,!0}async load(e){}unload(e){}disconnect(){var e;this._streamConnection=Oe(this._streamConnection),this._connectionState.connection=null,(e=this._handlesGroup)==null||e.remove()}connect(){if(this._streamConnection!=null)return;const{geometryType:e,spatialReference:t}=this.metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:a,definitionExpression:i,customParameters:n}=this._schema.full;this._streamConnection=Ws(this._service.source,t,this._service.outSpatialReference,e,i,a,s,r,n),this._handlesGroup=ie([this._streamConnection.on("data-received",o=>this._onFeature(o)),this._streamConnection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._streamConnection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){var t;(t=this._streamConnection)==null||t.updateCustomParameters(e)}sendMessageToSocket(e){var t;(t=this._streamConnection)==null||t.sendMessageToSocket(e)}sendMessageToClient(e){var t;(t=this._streamConnection)==null||t.sendMessageToClient(e)}_onOverride(){}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}};class ei{constructor(e,t,s,r){this._aggregateAdapter=e,this._subscriptions=t,this._connection=s,this._cachedObjectIds=r,this._updateTracking=new Bs({debugName:"FeatureSource"}),this.store=new As}destroy(){var e,t,s;(e=this._strategy)==null||e.destroy(),(t=this._streamMessenger)==null||t.destroy(),(s=this._updateTracking)==null||s.destroy(),this.store.destroy()}get metadata(){return this._strategy.metadata}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return wr.from(this.store)}get updateTracking(){return this._updateTracking}get usedMemory(){return this.store.usedMemory}get queryEngine(){var e,t;if(!this._queryEngine){if(!this.store||!this._strategy)return null;this._queryEngine=new mt({featureStore:this.store,fieldsIndex:this.metadata.fieldsIndex,geometryType:this.metadata.geometryType,featureIdInfo:this.metadata.featureIdInfo,hasM:!1,hasZ:!1,spatialReference:this.metadata.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:this.metadata.timeInfo,definitionExpression:(e=this._strategy)==null?void 0:e.definitionExpression,availableFields:(t=this._strategy)==null?void 0:t.availableFields})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}get hasQueryDisplayFilter(){if(!this._schema)return!1;switch(this._schema.type){case"feature":return this._schema.strategy.full.displayFilterInfo!=null;case"parquet":case"stream":return!1}}chunks(){return Array.from(this.store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const a of e)this._cachedObjectIds.has(a)||(this._cachedObjectIds.add(a),s.add(a));for(const a of t)this._cachedObjectIds.delete(a),r.add(a);this.hasQueryDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasQueryDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this.store.cleanup()}onSubscribe(e){if(this._connection.onEvent({type:"subscribe",tile:e.tile.id}),!this._strategy)return;const t=this._strategy.load(e);t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(s=>this._connection.onEvent({type:"error",tile:e.tile.id,error:s})),this._updateTracking.addPromise(t)}onResume(e){var t;this._updateTracking.addPromise(_t((t=this._strategy)==null?void 0:t.load(e)))}onUnsubscribe(e){var t;this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),(t=this._strategy)==null||t.unload(e)}async applyOverride(e){var t;await((t=this._strategy)==null?void 0:t.applyOverride(e))}takeOverrideUpdate(){var e;return(e=this._strategy)==null?void 0:e.takeOverrideUpdate()}async update(e,t){const s=this._schema;if(this._schema=e,this._queryEngine=Oe(this._queryEngine),s&&s.type!==e.type)throw new Error("InternalError: Reconfiguring source types is not supported.");const r=new kr;return!s||D(s.service,e.service)||s.strategy.type!==e.strategy.type||D(e.strategy.full,s.strategy.full)||!await this._strategy.tryUpdate(r,e.strategy.partial)?(await this._updateStrategyType(this._schema.service,e,t),await this.store.update({metadata:this.metadata,definitionExpression:this._schema.strategy.full.definitionExpression}),!0):r.requiresInvalidation}unsafeSetQueryHistoricMoment(e){this._schema.type==="feature"&&(this._schema.strategy.full.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new ee(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(R.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(R.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);if(r.length!==s.length){const a=new Set(r.map(i=>i.objectId));for(const i of s)a.has(i)||t.commands.removeWeak.push(i)}return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(e.length===0)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(t==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this.store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _updateStrategyType(e,t,s){var o;const r=this._createStrategy(e,t);this._connection.onEvent({type:"updateStrategyStart",about:r.about});const a=!!this._strategy;this.store.clear(),(o=this._strategy)==null||o.destroy(),this._strategy=r,y("esri-2d-update-debug")&&console.debug(`Version[${s}] FeatureSource.updateStrategy`,{strategy:r});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const n=Promise.all(i.map(l=>this._strategy.load(l).then(()=>this._connection.onEvent({type:"loaded",tile:l.tile.id})).catch(c=>this._connection.onEvent({type:"error",tile:l.tile.id,error:c}))));this._updateTracking.addPromise(n),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{a&&await n}catch(l){Fe(l)}this._connection.onEvent({type:"updateStrategyEnd"}),y("esri-2d-update-debug")&&console.debug(`Version[${s}] FeatureSource.updateStrategyEnd`,{strategy:r})}_createStrategy(e,t){const s={connection:this._connection,store:this.store};switch(t.type){case"feature":return this._createFeatureLoadStrategy(e,t.strategy,s);case"parquet":return this._createParquetLoadStrategy(e,t.strategy,s);case"stream":return this._createStreamLoadStrategy(e,t.strategy,s)}}_createFeatureLoadStrategy(e,t,s){switch(t.type){case"drill-down":return new Nr(e,t,s);case"paged-tile":return new Wr(e,t,s);case"snapshot":return new Br(e,t,s)}}_createParquetLoadStrategy(e,t,s){switch(t.type){case"xz":return new Qr(e,t,s);case"snapshot":return new Vr(e,t,s)}}_createStreamLoadStrategy(e,t,s){const r=new Yr(e,t,s);return this.streamMessenger.strategy=r,r}}class ti{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class Z{constructor(e){this.inner=e,this.resolver=ds()}}class Ta{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){var e,t,s;this._subscriptions.clear(),(e=this._processor)==null||e.destroy(),(t=this._source)==null||t.destroy(),(s=this._handles)==null||s.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){y("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=as.fromJSON(e.tileInfoJSON);this._tileInfoView=new ns(s),this._source=new ei(this._aggregateAdapter,this._subscriptions,t,this._cachedObjectIds),this._processor=new Ir(t,this._source),this._handles=ie([this._source.store.events.on("changed",()=>this._requestUpdate()),this._source.store.events.on("refresh",()=>this._requestRefresh()),Ie(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),_t(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){y("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Vs(e)}get features(){var t;const e=(t=this._source)==null?void 0:t.queryEngine;if(!e)throw new A("no-queryEngine","No query engine defined");return e}get aggregates(){var t;const e=(t=this._processor)==null?void 0:t.aggregateQueryEngine;if(!e)throw new A("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getUsedMemory(){return this._source.usedMemory+this._processor.usedMemory}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return y("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new Z({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new Z(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new Z(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async onOverride(e){if(this._updateOverridesRequest!=null)throw new A("featurelayer","InternalError - Already processing an edit");this._updateOverridesRequest=new Z(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(os(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const a=typeof e.fieldOffset=="string",i=e.fieldOffset??0,n=Array.from(this._subscriptions.values()),o=this._source.chunks(),l=t**2,c=3/(Math.PI*l),d=2*t,h=Math.ceil(v/d);for(const f of n){const p=f.tile,_=new Float64Array(h*h);for(const g of o){const m=g.getTileReader(p);if(!m)continue;const k=m.getCursor();for(;k.next();){let x=1;if(e.field!=null){const M=k.readAttribute(e.field);x=a?-1*+M:+M+i}const $=k.readXForDisplay()/d,I=k.readYForDisplay()/d,w=Math.floor($),F=Math.floor(I);if(w<0||F<0||w>=h||F>=h)continue;const b=((.5+w-$)*d)**2+((.5+F-I)*d)**2;if(b>l)continue;const O=x*(c*(1-b/l)**2);_[F+w*h]+=O}}for(let g=0;g<_.length;g++)s=Math.min(s,_[g]),r=Math.max(r,_[g])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((o,l)=>o+l.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const o=[];return this._source.store.forEachUnsafe(l=>o.push(l.readLegacyFeatureWorldSpace())),o}return null}const s=new Set,r=[],a=t.map(o=>o.reader.getCursor()),i=new ls,n=3*e.sampleSize;for(let o=0;o<n&&r.length<e.sampleSize;o++){const l=a[i.getIntRange(0,t.length-1)];if(l.getSize()===0)continue;const c=i.getIntRange(0,l.getSize()-1);l.setIndex(c);const d=l.getObjectId();s.has(d)||(s.add(d),r.push(l.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,cs(()=>this._scheduleNextUpdate()))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=ke(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;y("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new us(this._tileInfoView,t),r=new ti(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(y("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const a=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const i of a)this._doUpdateSubscriptions(i.inner),i.resolver.resolve()}if(this._updateHighlightRequests.length){const a=this._updateHighlightRequests,i=new Set,n=new Set;for(const o of a)for(const{objectId:l,highlightFlags:c}of o.inner.highlights)c?(i.add(l),n.delete(l)):(n.add(l),i.delete(l));this._source.prepareCacheUpdate(i,n)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(e!=null){const{schema:a,version:i}=e.inner;t=await this._doUpdateSchema(a,i)}this._processor.requiresInvalidation()&&(t=!0),this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,s!=null){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",s.inner),s.inner.historicMoment!=null&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const a=await this._source.normalizeOverrides(s.inner);await this._source.applyOverride(a),y("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const a=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const i of a)this._processor.updateHighlight(i.inner),i.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const a=this._source.takeOverrideUpdate();if(a!=null&&this._subscriptions.size){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(a)}catch(i){y("esri-2d-update-debug")&&console.debug("InternalError",i)}await this._connection.container.unlockForOverrides(),y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&(y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(a){Fe(a)}s!=null&&s.resolver.resolve(),e!=null&&e.resolver.resolve(),e==null&&t&&await this._connection.container.trySwapRenderState(),this._connection.onEvent({type:"performance",usedMemory:this.getUsedMemory()}),this._updateRequested?(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){var n;y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:(n=this._tileInfoView)==null?void 0:n.tileInfo},r=await this._source.update(e.source,t),a=Array.from(this._subscriptions.values()),i=this._processor.update(e,t,s,r,a);return y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),i}_doUpdateSubscriptions(e){y("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{Ta as default};
