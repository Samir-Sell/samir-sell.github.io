import{er as Z,mN as T,mO as K,mP as J,ef as G,gm as B,b9 as ee,jK as te,jI as se,mz as ie,aA as W,ag as _,iS as re,bb as M,lA as ae,mQ as oe,b6 as ne,mR as he,ec as D,mS as de,mT as ce,mU as le,cB as ue,cj as me,ar as pe,dc as ye,cm as fe,du as _e,mV as ge,a3 as be,mW as we,mX as Ie,mY as E,aF as ve,aE as Se,aH as xe,D as y,F as f,Z as Me}from"./index-7LVg-iY6.js";import{b as N,d as Re,i as O,V,A as Te,Y as Ge}from"./CIMSymbolHelper-DYmhbAMl.js";import{OverrideHelper as $e}from"./OverrideHelper-DfOydQHj.js";import{c as De}from"./WGLContainer-DFESPc7k.js";import{l as Pe,b as Ce,s as je,n as Ue}from"./AttributeStore-Cc3nFPHX.js";import{r as Oe,V as ze,k as Fe,y as Ae,L as Be,m as z,P as Ee,M as Ve,z as ke,d as qe,f as k,p as He,b as x,a as q,c as Le,t as Ze}from"./FeatureCommandQueue-BcOiYsrc.js";import{n as We}from"./FeatureMetadata-DLLKy1ha.js";import{u as Ne,d as Xe,g as F}from"./featureConversionUtils-CFKvofkg.js";import{e as R}from"./OptimizedFeature-B76Ba1pI.js";import{O as Qe}from"./FeatureStoreQueryAdapter-DZjH9xpN.js";import{e as Ye}from"./memoryEstimations-OaiSRTQo.js";import{a as Ke}from"./normalizeUtilsSync-C_1TlXDO.js";import{F as Je,n as et,i as tt,t as st,e as it}from"./dehydratedFeatures-CfzzCJTP.js";import{f as rt,a as at}from"./queryUtils-BuJwL4AF.js";import{n as ot}from"./UpdateTracking2D-CN-5kEWt.js";async function nt(u,e,t){const s=[],i={scaleInfo:Oe(u),scaleExpression:null};for(const r of e)switch(r.type){case"marker":if(r.animationParams){if(r.animationParams.params.hasShiftAnimation){s.push(...k(t.instances.animatedMarkerShift,r,x,i));break}s.push(...k(t.instances.animatedMarker,r,x,i));break}s.push(...He(t.instances.marker,r,x,i));break;case"fill":if(r.animationParams){s.push(...z(t.instances.animatedPolygon,r,x,i));break}r.spriteRasterizationParam==null?s.push(...ke(t.instances.fill,r,i)):s.push(...qe(t.instances.complexFill,r,!1,i));break;case"line":if(r.animationParams){if(r.animationParams.params.hasShiftAnimation){s.push(...z(t.instances.animatedPolylineShift,r,x,i));break}s.push(...z(t.instances.animatedPolyline,r,x,i));break}r.spriteRasterizationParam?s.push(...Ee(t.instances.texturedLine,r,!1,i)):s.push(...Ve(t.instances.line,r,!1,i));break;case"text":s.push(...Be(t.instances.text,r,x,i));break;case"gradientFill":s.push(...Ae(t.instances.gradientFill,r,i));break;case"gradientStroke":s.push(...Fe(t.instances.gradientStroke,r,i));break;case"outlineFill":s.push(...ze(t.instances.outlineFill,r,i))}return s}class P extends Qe{static from(e,t,s){return new P(e,t,s)}constructor(e,t,s){super(s),this._items=e,this._tile=t,this._index=-1,this._cachedGeometry=null;const i=t.lod;i.wrap&&(this._wrappingInfo={worldSizeX:i.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){var e;return((e=this._current.symbolResource)==null?void 0:e.symbolInfo.meshWriters)??[]}hasField(e){return this._current.attributes[e]!=null}field(e){return this.readAttribute(e)}get geometryType(){const e=Z(this._current.geometry);return e==="esriGeometryPoint"?"esriGeometryMultipoint":e}getCursor(){return this.copy()}copy(){const e=new P(this._items,this._tile,this.metadata);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._cachedGeometry=this._cachedGeometry,e._index=this._index}get fields(){throw new Error("Fields reading not supported to graphics.")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error("InternalError: exceededTransferLimit not implemented for graphics.")}get hasZ(){return!1}get hasM(){return!1}get usedMemory(){return this._current.usedMemory}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){throw new Error("InternalError: Setting displayId not supported for graphics.")}setIndex(e){this._index=e}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error("InternalError: readGeometryArea not supported for graphics.")}_readGeometry(){if(!this._cachedGeometry){let e=Ne(this._current.projectedGeometry,this.hasZ,this.hasM);if(this.geometryType==="esriGeometryPolyline"&&(e=Xe(new R,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=F(new R,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(e){if(!this._wrappingInfo)return;const{worldSizeX:t}=this._wrappingInfo;if(e.isPoint)return t===1?(e.coords.push(T,0),e.coords.push(2*-512,0),void e.lengths.push(3)):t===2?(e.coords.push(2*T,0),e.coords.push(4*-512,0),void e.lengths.push(3)):void this._wrapVertex(e.coords,0,2,t);if(this.geometryType==="esriGeometryMultipoint"){if(t===1){const s=e.coords.slice();s[0]-=512;const i=e.coords.slice();i[0]+=512,e.coords.push(...s,...i);const r=e.lengths[0];return void e.lengths.push(r,r)}this._wrapVertex(e.coords,0,2,t)}}_wrapVertex(e,t,s,i){const r=t*s,a=e[r];a<-512*(i-2)?e[r]=a+T*i:a>T*(i-1)&&(e[r]=a-T*i)}_readX(){const e=this._readGeometry();return e!=null?e.coords[0]:0}_readY(){const e=this._readGeometry();return e!=null?e.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case"esriGeometryPolygon":{const e=J(this._current.projectedGeometry),t=new R([],e);return F(new R,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case"esriGeometryPolyline":{const e=this._current.projectedGeometry,t=K(e.paths,this.hasZ),s=new R([],t);return F(new R,s,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(e,t){const s=this._current.attributes[e];if(s!==void 0)return s;const i=e.toLowerCase();for(const r in this._current.attributes)if(r.toLowerCase()===i)return this._current.attributes[r]}_readAttributes(){return this._current.attributes}}class A{static fromGraphic(e,t,s,i){return new A(e.geometry,t,e.attributes,e.visible,e.uid,e.version,s,i)}constructor(e,t,s,i,r,a,h,o){this.geometry=e,this.symbol=t,this.attributes=s,this.visible=i,this.objectId=r,this._version=a,this.zOrder=h,this.displayId=o,this.symbolBounds=G(),this.prevSymbolBounds=G(),this.size=[0,0,0,0],this.geometryBounds=G(),this._isDensificationDirty=!1,this._densificationDeviation=1/0}get projectedGeometry(){return this._projectedGeometry}get linearCIM(){var e;return(e=this.symbolResource)==null?void 0:e.symbolInfo.linearCIM}get usedMemory(){return 128+Ye(this.attributes)+Je(this.geometry)}get hasAnimations(){const{linearCIM:e}=this;return!!e&&e.some(t=>"animationParams"in t&&!!t.animationParams)}get hasCurvedGeoemtry(){return this.geometry!=null&&this.geometry.type!=="mesh"&&B(this.geometry)}update(e,t,s){return(this._version!==e.version||this.zOrder!==s||this.symbol!==t)&&(this.prevSymbolBounds=this.symbolBounds,this.symbolBounds=G(),this.zOrder=s,this.geometry=e.geometry,this.attributes=e.attributes,this.symbol=t,this.visible=e.visible,this._version=e.version,this.symbolResource=null,this._projectedGeometry=null,G(this.geometryBounds),this._minDensificationDeviation=null,this._isDensificationDirty=!0,!0)}updateDensificationResolution(e){if(!this.hasCurvedGeoemtry)return!1;const t=Math.max(ht(e),this._minDensificationDeviation??0);return t!==this._densificationDeviation&&(this._densificationDeviation=t,this._isDensificationDirty=!0,!0)}async projectAndNormalize(e){let t,s=this.geometry;if(s&&s.spatialReference&&s.type!=="mesh"&&(s.type==="extent"&&(s=N(s)),t=B(s)?q(s,{maxSegmentLength:1/0,minSegmentsPerCurve:et()}):s.toJSON(),this._projectedGeometry=await H(t,s.spatialReference,e),ee(this.geometryBounds,this._projectedGeometry),this.hasCurvedGeoemtry&&this._projectedGeometry!=null)){const i=te(this.geometryBounds),r=se(this.geometryBounds);this._minDensificationDeviation=dt(i,r)}}async densifyCurvedGeometryForDisplay(e){if(!this.hasCurvedGeoemtry||!this._isDensificationDirty)return;this._isDensificationDirty=!1;const t=this.geometry;if(!t||!t.spatialReference||t.type==="mesh")return;const s=e.metersPerUnit/t.spatialReference.metersPerUnit,i=this._densificationDeviation*s,r=q(t,{maxDeviation:i,minSegmentsPerCurve:tt()});this._projectedGeometry=await H(r,t.spatialReference,e)}}async function H(u,e,t){await rt(u.spatialReference,t);const s=Ke(u);if(!s)return;const i=at(s,e,t);return i&&ie(i),W(i)?N(i):i}function ht(u){return 2**Math.round(Math.log2(u))*st()}function dt(u,e){if(u>0&&e>0){const t=Math.min(u,e)/2,s=2*Math.PI/it();return t*(1-Math.cos(s/2))}return null}class ct{constructor(e,t,s){this.added=e,this.updated=t,this.removed=s}hasAnyUpdate(){return!!(this.added.length||this.updated.length||this.removed.length)}}const L=1e-5;function lt(u,e){return e.zOrder-u.zOrder}class ut{constructor(e,t,s,i,r){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=e,this._cimResourceManager=t,this._hittestDrawHelper=new Re(t),this._tileInfoView=s,this._store=r;const a=s.getClosestInfoForScale(i);this._resolution=this._tileInfoView.getTileResolution(a.level)}destroy(){this._hittestDrawHelper.destroy()}items(){return this._items.values()}getItem(e){return this._items.get(e)}async update(e,t,s){const i=[],r=[],a=[],h=new Set,o=[];let c=0;const d=new Set;for(const n of e.items){const l=n.uid;if(d.has(l))continue;d.add(l),c++;const p=this._items.get(l),g=t(n);if(h.add(l),p){const I=p.update(n,g,c),C=p.updateDensificationResolution(this._resolution);I&&o.push(this._updateItem(p,s)),(I||C)&&r.push(p);continue}const b=this._store.createDisplayIdForObjectId(l),w=A.fromGraphic(n,g,c,b);w.updateDensificationResolution(this._resolution),o.push(this._updateItem(w,s)),this._items.set(w.objectId,w),i.push(w)}for(const[n,l]of this._items.entries())h.has(n)||(this._store.releaseDisplayIdForObjectId(n),this._items.delete(n),a.push(l));return await Promise.all(o),this._index=null,new ct(i,r,a)}updateLevel(e){if(this._resolution===e)return!1;this._index=null,this._boundsDirty=!0,this._resolution=e;for(const t of this.items())if(t.hasCurvedGeoemtry)return!0;return!1}hitTest(e,t,s,i,r){const a=_("esri-mobile"),h=a?ce:le,o=h+(a?0:de);e=re(e,this._tileInfoView.spatialReference);const c=i*window.devicePixelRatio*o,d=M();d[0]=e-c,d[1]=t-c,d[2]=e+c,d[3]=t+c;const n=i*window.devicePixelRatio*h,l=M();l[0]=e-n,l[1]=t-n,l[2]=e+n,l[3]=t+n;const p=.5*i*(o+O),g=this._searchIndex(e-p,t-p,e+p,t+p);if(!g||g.length===0)return[];const b=[],w=M(),I=M();for(const v of g){if(!v.visible)continue;const{geometryBounds:U,symbolResource:$}=v;this._getSymbolBounds(w,$,U,I,r),I[3]=I[2]=I[1]=I[0]=0,ae(w,d)&&b.push(v)}if(b.length===0)return[];const C=this._hittestDrawHelper,j=[];for(const v of b){const{projectedGeometry:U,symbolResource:$}=v;if(!$)continue;const{textInfo:X,symbolInfo:Q}=$,Y=Q.cimSymbol;C.hitTest(l,Y.symbol,U,X,r,i)&&j.push(v)}return j.sort(lt),j.map(v=>v.objectId)}queryItems(e){return this._items.size===0?[]:this._searchForItems(e)}clear(){this._items.clear(),this._index=null}async _updateItem(e,t){await e.projectAndNormalize(this._outSpatialReference),await t(e);const{size:s}=e;s[0]=s[1]=s[2]=s[3]=0,this._getSymbolBounds(e.symbolBounds,e.symbolResource,e.geometryBounds,e.size,0)}_searchIndex(e,t,s,i){return this._boundsDirty&&(this._items.forEach(r=>this._getSymbolBounds(r.symbolBounds,r.symbolResource,r.geometryBounds,r.size,0)),this._boundsDirty=!1),this._index||(this._index=oe(9,r=>({minX:r.symbolBounds[0],minY:r.symbolBounds[1],maxX:r.symbolBounds[2],maxY:r.symbolBounds[3]})),this._index.load(Array.from(this._items.values()))),this._index.search({minX:e,minY:t,maxX:s,maxY:i})}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds,i=ne(t);if(i&&t.isWrappable){const[r,a]=i.valid,h=Math.abs(s[2]-a)<L,o=Math.abs(s[0]-r)<L;if((!h||!o)&&(h||o)){const c=e.resolution;let d;d=M(h?[r,s[1],r+c*O,s[3]]:[a-c*O,s[1],a,s[3]]);const n=this._searchIndex(s[0],s[1],s[2],s[3]),l=this._searchIndex(d[0],d[1],d[2],d[3]);return[...new Set([...n,...l])]}}return this._searchIndex(s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbolInfo.linearCIM)return null;if(e||(e=M()),he(e,s),!i||i[0]===0&&i[1]===0&&i[2]===0&&i[3]===0){const{textInfo:o,symbolInfo:c}=t,d=c.cimSymbol;i||(i=[0,0,0,0]);const n=V.getSymbolInflateSize(i,d.symbol,this._cimResourceManager,r,o);i[0]=D(n[0]),i[1]=D(n[1]),i[2]=D(n[2]),i[3]=D(n[3])}const a=this._resolution,h=V.safeSize(i);return e[0]-=h*a,e[1]-=h*a,e[2]+=h*a,e[3]+=h*a,e}}class S{static getOrCreate(e,t,s){let i=t.get(e.id);return i||(i=new S(e,s),t.set(e.id,i)),i}static fromItems(e,t,s){const i=new S(e,s);for(const r of t)i.append(r);return i}constructor(e,t){this.tile=e,this.metadata=t,this.addedOrModified=[],this.removed=[],this.objectIdMap=null}get reader(){return this._reader||(this._reader=P.from(this.addedOrModified,this.tile,this.metadata)),this._reader}append(e){this.addedOrModified.push(e),e.hasAnimations&&(this.objectIdMap=this.objectIdMap||{},this.objectIdMap[e.displayId]=e.objectId)}}let m=class extends ue(me){constructor(e){super(e),this._attached=!1,this._tiles=new Map,this._controller=new AbortController,this._hashToSymbolInfo=new Map,this._lastCleanup=performance.now(),this._cleanupRequired=!0,this.lastUpdateId=-1,this.renderer=null,this._updateTracking=new ot({debugName:"GraphicsView2D"}),this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this._commandQueue=new Le({process:t=>{if(t.type==="update")return this._update();throw new Error("InternalError: Unsupported command")}}),this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this.container.destroy(),this.view=null,this.renderer=null,this._set("graphics",null),this._controller.abort(),this._graphicStore.clear(),this._graphicStore.destroy(),this._attributeStore=null,this._hashToSymbolInfo.clear(),this._updateTracking.destroy(),this._commandQueue.destroy()}_initAttributeStore(){this._storage=new Pe({spatialReference:this.view.spatialReference,fields:new pe}),this._attributeStore=new Ce({isLocal:!0,update:t=>{_("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateStart`,{message:t}),this.container.attributeView.requestUpdate(t),this.container.requestRender(),_("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateEnd`,{message:t})}});const e=Ze(null,[]);this._attributeStore.update(e,this._storage,null),this.container.checkHighlight=()=>this._attributeStore.hasHighlight}initialize(){this._initAttributeStore(),this._metadata=We.createGraphics(this.view.spatialReference),this._resourceProxy=new je({fetch:t=>Promise.all(t.map(s=>this.view.stage.textureManager.rasterizeItem(s))),fetchDictionary:t=>{throw new Error("InternalError: Graphics do not support Dictionary requests")}}),this.addHandles([ye(()=>this._effectiveRenderer,()=>this._pushUpdate()),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{var t;this.addHandles([this.graphics.on("change",()=>this._pushUpdate())]),(t=this._graphicStore)==null||t.destroy(),this._graphicStore=new ut(this.view.spatialReference,this._cimResourceManager,this.view.featuresTilingScheme,this.view.state.scale,this._attributeStore),this._attached=!0,this.requestUpdate(),this._pushUpdate()})]),this._updateTracking.addUpdateTracking("CommandQueue",this._commandQueue.updateTracking);const e=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:e,removed:[]})}get _effectiveRenderer(){return typeof this.renderer=="function"?this.renderer():this.renderer}get _cimResourceManager(){return this.view.stage.textureManager.resourceManager}get updating(){const e=!this._attached||this._updateTracking.updating;return _("esri-2d-log-updating")&&console.log(`Updating GraphicsView2D: ${e}
  -> attaching ${!this._attached}
  -> updateTracking ${this._updateTracking.updating}`),e}hitTest(e){if(!this.view||this.view.suspended)return[];const{resolution:t,rotation:s}=this.view.state,i=this._graphicStore.hitTest(e.x,e.y,2,t,s),r=new Set(i),a=this.graphics.items.reduce((h,o)=>(r.has(o.uid)&&h.set(o.uid,o),h),new Map);return i.map(h=>a.get(h)).filter(fe)}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback()),this.notifyChange("updating")}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}viewChange(){this.requestUpdate()}setHighlight(e){var s;const t=[];for(const{objectId:i,highlightFlags:r}of e){const a=(s=this._graphicStore.getItem(i))==null?void 0:s.displayId;t.push({objectId:i,highlightFlags:r,displayId:a})}this._attributeStore.setHighlight(t,e),this._pushUpdate()}graphicUpdateHandler(e){this._pushUpdate()}update(e){this.updateRequested=!1,this._attached&&this._graphicStore.updateLevel(e.state.resolution)&&this.pushUpdate()}pushUpdate(){this._pushUpdate()}_pushUpdate(){_e(this._commandQueue.push({type:"update"}))}async _update(){try{if(_("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView._update start`),this.graphics.destroyed)return;const e=await this._graphicStore.update(this.graphics,s=>this._getSymbolForGraphic(s),s=>this._ensureSymbolResource(s));for(const s of e.updated)this.container.restartAnimation(s.objectId);if(!e.hasAnyUpdate())return void this._attributeStore.sendUpdates();e.removed.length&&(this._cleanupRequired=!0),_("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView updateMessage`,e);const t=this._createTileMessages(e);await this._densifyItemsForDisplay(t),await this._fetchResources(t),this._write(t);for(const s of e.added)this._setFilterState(s);for(const s of e.updated)this._setFilterState(s);_("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate`,e),this._attributeStore.sendUpdates(),_("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate.await`,e)}catch{}this._cleanupSharedResources()}_createTileMessages(e){const t=new Map;for(const s of e.added){const i=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const r of i)S.getOrCreate(r,t,this._metadata).append(s)}for(const s of e.updated){const i=this.view.graphicsTileStore.getIntersectingTiles(s.prevSymbolBounds),r=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const a of i)S.getOrCreate(a,t,this._metadata).removed.push(s.displayId);for(const a of r)S.getOrCreate(a,t,this._metadata).append(s)}for(const s of e.removed){const i=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const r of i)S.getOrCreate(r,t,this._metadata).removed.push(s.displayId)}return Array.from(t.values())}async _densifyItemsForDisplay(e){const t=new Map;for(const s of e)for(const i of s.addedOrModified)t.has(i)||t.set(i,i.densifyCurvedGeometryForDisplay(this.view.spatialReference));await Promise.all(t.values())}async _fetchResources(e){const t={timeZone:null,timeExtent:null};for(const{tile:s,reader:i}of e){_("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${s.id}] GraphicsView fetchResources`,e);const r=i.getCursor();for(;r.next();)for(const a of r.getMeshWriters())a.enqueueRequest(this._resourceProxy,r,s.createArcadeEvaluationOptions(t))}await this._resourceProxy.fetchEnqueuedResources()}_write(e){for(const t of e){_("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${t.tile.id}] GraphicsView write`,t);const s=this._writeMeshes(t);let i=this._tiles.get(t.tile.key);i||(i=this._createFeatureTile(t.tile.key)),_("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${t.tile.id}] GraphicsView onTileData`,t),this.container.onTileData(i,{type:"update",modify:s,remove:t.removed,end:!1,attributeEpoch:this._attributeStore.epoch,objectIdMap:t.objectIdMap}),this.container.requestRender()}}_writeMeshes(e){const t={timeZone:null,timeExtent:null},s=new Ue(e.tile.id),i=e.reader.getCursor();for(;i.next();){s.entityStart(i.getDisplayId(),i.getZOrder());for(const r of i.getMeshWriters())r.write(s,this._resourceProxy,i,e.tile.createArcadeEvaluationOptions(t),e.tile.level);s.entityEnd()}return{...s.serialize().message,tileId:e.tile.id}}_setFilterState(e){const t=e.displayId,s=this._attributeStore.getHighlightFlags(e.objectId);this._attributeStore.setData(t,0,0,s|(e.visible?ge:0))}_getSymbolForGraphic(e){return e.symbol!=null?e.symbol:this._effectiveRenderer!=null?this._effectiveRenderer.getSymbol(e):this._getNullSymbol(e)}async _ensureSymbolResource(e){if(!e.symbol)return;const t=await this._getSymbolInfo(e.symbol);if(!t)return;const s=t.linearCIM.filter(i=>i.type==="text");if(s.length>0){const i=await this._getTextResources(e,s);return void(e.symbolResource={symbolInfo:t,textInfo:i})}e.symbolResource={symbolInfo:t}}_getSymbolInfo(e){const t=e.hash();return this._hashToSymbolInfo.has(t)||this._hashToSymbolInfo.set(t,this._createSymbolInfo(t,e).catch(s=>null)),this._hashToSymbolInfo.get(t)}async _createSymbolInfo(e,t){const s=await this._convertToCIMSymbol(t),i=await this._createLinearCIM(s);return{hash:e,cimSymbol:s,linearCIM:i,meshWriters:await this._createMeshWriters(s,i)}}async _convertToCIMSymbol(e){const t=Te(e);return t.type==="web-style"?this._convertToCIMSymbol(await t.fetchSymbol({acceptedFormats:["cim","web"]})):t}async _createLinearCIM(e){return await Promise.all(Ge.fetchResources(e.symbol,this._cimResourceManager,[])),this.view.stage.cimAnalyzer.analyzeSymbolReference(e,!1)}async _createMeshWriters(e,t){be(this._controller.signal);const s=this.container.instanceStore,i=this.view.stage.meshWriterRegistry,r=await nt(e,t,s);return Promise.all(r.map(a=>i.createMeshWriter(this._storage,this._resourceProxy,{tileInfo:this.view.featuresTilingScheme.tileInfo},a,null)))}_onTileUpdate(e){if(e.added&&e.added.length>0)for(const t of e.added)this._updateTracking.addPromise(this._addTile(t));if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}_createFeatureTile(e){const t=this.view.featuresTilingScheme.getTileBounds(M(),e),s=this.view.featuresTilingScheme.getTileResolution(e.level),i=new De(e,s,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addTile(e){if(!this._attached)return;const t=this._graphicStore.queryItems(e);if(!t.length)return;const s=this._createFeatureTile(e.key),i=S.fromItems(e,t,this._metadata);await this._densifyItemsForDisplay([i]),await this._fetchResources([i]);const r=this._writeMeshes(i);s.onMessage({type:"append",append:r,clear:!1,end:!0,attributeEpoch:this._attributeStore.epoch,objectIdMap:i.objectIdMap})}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_getNullSymbol(e){const t=e.geometry;return t?ve(t)?we:Se(t)||W(t)?Ie:this.defaultPointSymbolEnabled?E:null:this.defaultPointSymbolEnabled?E:null}async _getTextResources(e,t){const s=new Array,i=new Array;for(let o=0;o<t.length;o++){const c=t[o],{resource:d,overrides:n}=c.textRasterizationParam;if((n==null?void 0:n.length)>0){const l=$e.resolveSymbolOverrides({type:"CIMSymbolReference",primitiveOverrides:n,symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:d.symbol.height,anchorPointUnits:"Relative",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:d.symbol,textString:d.textString}],scaleSymbolsProportionally:!0,respectFrame:!0}]}},e,this.view.spatialReference,null,Z(e.projectedGeometry),null,null);l.then(p=>{const g=p.symbolLayers[0],{textString:b}=g.markerGraphics[0];i.push({type:"cim-rasterization-info",resource:{type:"text",textString:b||"",font:d.font}}),c.text=d.textString=b||""}),s.push(l)}else i.push({type:"cim-rasterization-info",resource:d})}s.length>0&&await Promise.all(s);const r=i.map(o=>this.view.stage.textureManager.rasterizeItem(o)),a=await Promise.all(r);xe(a);const h=new Map;for(let o=0;o<t.length;o++){const c=t[o];h.set(c.textRasterizationParam.resource.symbol,{text:c.text,glyphMosaicItems:a[o]})}return h}_cleanupSharedResources(){var i;if(!this._cleanupRequired)return;const e=performance.now();if(e-this._lastCleanup<5e3)return;this._cleanupRequired=!1,this._lastCleanup=e;const t=new Set;for(const r of this._graphicStore.items()){const a=(i=r.symbolResource)==null?void 0:i.symbolInfo.hash;t.add(a)}const s=new Set(this._hashToSymbolInfo.keys());for(const r of s.values())t.has(r)||this._hashToSymbolInfo.delete(r)}};y([f()],m.prototype,"_effectiveRenderer",null),y([f({constructOnly:!0})],m.prototype,"layerId",void 0),y([f({constructOnly:!0})],m.prototype,"requestUpdateCallback",void 0),y([f()],m.prototype,"container",void 0),y([f({constructOnly:!0})],m.prototype,"graphics",void 0),y([f()],m.prototype,"renderer",void 0),y([f()],m.prototype,"_updateTracking",void 0),y([f()],m.prototype,"updating",null),y([f()],m.prototype,"view",void 0),y([f()],m.prototype,"updateRequested",void 0),y([f()],m.prototype,"defaultPointSymbolEnabled",void 0),m=y([Me("esri.views.2d.layers.graphics.GraphicsView2D")],m);export{m as O};
