import{D as s,F as c,Z as F,cF as M,b as w,a3 as $,bp as S,m as C,dc as R,cO as q}from"./index-DalZQxea.js";import{s as E}from"./BitmapContainer-BM_RS0b6.js";import{b as U}from"./LayerView2D-Bx5qWtjs.js";import{M as V}from"./ExportStrategy-DjLGR172.js";import{d as L}from"./LayerView-D0BmErtM.js";import{i as W}from"./RefreshableLayerView-CZg3E8y3.js";import{a as _}from"./ExportWMSImageParameters-CSIloDfO.js";import{i as z}from"./timeSupport-B0ogPMZD.js";import"./WGLContainer-BtqWFZDN.js";import"./Utils-D70pyQOT.js";import"./BoundingBox-D30L3Gvt.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-D1A-fbwY.js";import"./VertexArrayObject-DtjwKQ5C.js";import"./memoryEstimations-8aoGHWgf.js";import"./VertexAttributeLocations-BfZbt_DV.js";import"./VertexBuffer-C3yWAO3V.js";import"./BufferObject-PzUDq_hb.js";import"./vec3f32-WCVSSNPR.js";import"./Container-DgBtZZgc.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BmwuvCkf.js";import"./OptimizedFeature-CIbaylOR.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BitmapTechnique-CF8U0qNi.js";import"./GraphShaderModule-DHLQD9pP.js";import"./FramebufferObject-vVgCufsi.js";import"./ShaderBuilder-BqcRlQpm.js";import"./bitmapUtils-DJ8eIuzC.js";import"./layerViewUtils-BaP6ELkx.js";const A=r=>{const i=r;let e=class extends i{initialize(){this.exportImageParameters=new _({layer:this.layer})}destroy(){this.exportImageParameters=M(this.exportImageParameters)}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var t;return z(this.layer,(t=this.view)==null?void 0:t.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(t,m){const{layer:h}=this;if(!t)throw new w("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:h});const{popupEnabled:a}=h;if(!a)throw new w("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:a});const o=this.createFetchPopupFeaturesQuery(t);if(!o)return[];const{extent:p,width:n,height:u,x:g,y}=o;if(!(p&&n&&u))throw new w("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:n,height:u});const d=await h.fetchFeatureInfo(p,n,u,g,y);return $(m),d}};return s([c()],e.prototype,"exportImageParameters",void 0),s([c({readOnly:!0})],e.prototype,"exportImageVersion",null),s([c()],e.prototype,"layer",void 0),s([c({readOnly:!0})],e.prototype,"timeExtent",null),e=s([F("esri.views.layers.WMSLayerView")],e),e};let l=class extends A(W(U(L))){constructor(){super(...arguments),this.bitmapContainer=new E}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(i=>{S(i)||C.getLogger(this).error(i)})}attach(){const{layer:r}=this,{imageMaxHeight:i,imageMaxWidth:e}=r;this.bitmapContainer=new E,this.container.addChild(this.bitmapContainer),this.strategy=new V({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:i,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=M(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:i,bitmapContainer:e}=this,{x:t,y:m}=r,{spatialReference:h}=i;let a,o=0,p=0;if(e.children.some(y=>{const{width:d,height:b,resolution:v,x,y:f}=y,I=x+v*d,P=f-v*b;return t>=x&&t<=I&&m<=f&&m>=P&&(a=new q({xmin:x,ymin:P,xmax:I,ymax:f,spatialReference:h}),o=d,p=b,!0)}),!a)return null;const n=a.width/o,u=Math.round((t-a.xmin)/n),g=Math.round((a.ymax-m)/n);return{extent:a,width:o,height:p,x:u,y:g}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,i,e,t){return this.layer.fetchImageBitmap(r,i,e,{timeExtent:this.timeExtent,...t})}};s([c()],l.prototype,"strategy",void 0),l=s([F("esri.views.2d.layers.WMSLayerView2D")],l);const yt=l;export{yt as default};
