import{cm as p}from"./index-7LVg-iY6.js";import{o as c,u as f}from"./operatorIntersection-BtY2GrGh.js";import{fromGeometry as n,toGeometry as m,fromGeometryToGXGeometry as i,fromGeometries as s}from"./jsonConverter-BKt79zJV.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-AUu76-L_.js";import"./ProjectionTransformation-Bu0AKopz.js";import"./Envelope2D-DXBkavsi.js";import"./Transformation2D-481oZy9q.js";import"./OperatorDefinitions-DP7_WWTp.js";function N(t,r){const o=n(t),e=o.getSpatialReference();return m(c(o.getGeometry(),i(r),e),e)}function S(t,r){const[o,e]=s(t);return f(o,i(r),e,7).map(a=>m(a,e)).filter(p)}export{N as execute,S as executeMany};
